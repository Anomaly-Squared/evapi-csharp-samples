<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IO.Swagger</name>
    </assembly>
    <members>
        <member name="T:IO.Swagger.Api.IAccountApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:IO.Swagger.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:IO.Swagger.Client.IApiAccessor.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IAccountApi.GetAccount(System.String,System.String,System.String)">
            <summary>
            Get account settings
            </summary>
            <remarks>
            Get setttings for your account, such as current space usage, webhooks settings, welcome email content and IP address restrictions.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required for the request</param>
            <param name="evAccessToken">Access Token for the request</param>
            <param name="include">Related records to include in the response. Valid option is **masterUser** (optional)</param>
            <returns>AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAccountApi.GetAccountWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get account settings
            </summary>
            <remarks>
            Get setttings for your account, such as current space usage, webhooks settings, welcome email content and IP address restrictions.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required for the request</param>
            <param name="evAccessToken">Access Token for the request</param>
            <param name="include">Related records to include in the response. Valid option is **masterUser** (optional)</param>
            <returns>ApiResponse of AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAccountApi.UpdateAccount(System.String,System.String,IO.Swagger.Model.UpdateAccountBody)">
            <summary>
            Update account settings
            </summary>
            <remarks>
            Update account settings, such as welcome email content, IP address restrictions, webhooks settings and secure password requirements.  **Notes**  - You must have [admin-level access](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to change account settings.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body">Update Account Settings (optional)</param>
            <returns>AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAccountApi.UpdateAccountWithHttpInfo(System.String,System.String,IO.Swagger.Model.UpdateAccountBody)">
            <summary>
            Update account settings
            </summary>
            <remarks>
            Update account settings, such as welcome email content, IP address restrictions, webhooks settings and secure password requirements.  **Notes**  - You must have [admin-level access](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to change account settings.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body">Update Account Settings (optional)</param>
            <returns>ApiResponse of AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAccountApi.GetAccountAsync(System.String,System.String,System.String)">
            <summary>
            Get account settings
            </summary>
            <remarks>
            Get setttings for your account, such as current space usage, webhooks settings, welcome email content and IP address restrictions.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required for the request</param>
            <param name="evAccessToken">Access Token for the request</param>
            <param name="include">Related records to include in the response. Valid option is **masterUser** (optional)</param>
            <returns>Task of AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAccountApi.GetAccountAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get account settings
            </summary>
            <remarks>
            Get setttings for your account, such as current space usage, webhooks settings, welcome email content and IP address restrictions.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required for the request</param>
            <param name="evAccessToken">Access Token for the request</param>
            <param name="include">Related records to include in the response. Valid option is **masterUser** (optional)</param>
            <returns>Task of ApiResponse (AccountResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAccountApi.UpdateAccountAsync(System.String,System.String,IO.Swagger.Model.UpdateAccountBody)">
            <summary>
            Update account settings
            </summary>
            <remarks>
            Update account settings, such as welcome email content, IP address restrictions, webhooks settings and secure password requirements.  **Notes**  - You must have [admin-level access](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to change account settings.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body">Update Account Settings (optional)</param>
            <returns>Task of AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IAccountApi.UpdateAccountAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.UpdateAccountBody)">
            <summary>
            Update account settings
            </summary>
            <remarks>
            Update account settings, such as welcome email content, IP address restrictions, webhooks settings and secure password requirements.  **Notes**  - You must have [admin-level access](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to change account settings.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body">Update Account Settings (optional)</param>
            <returns>Task of ApiResponse (AccountResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.AccountApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.AccountApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.AccountApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.AccountApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.GetAccount(System.String,System.String,System.String)">
            <summary>
            Get account settings Get setttings for your account, such as current space usage, webhooks settings, welcome email content and IP address restrictions.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required for the request</param>
            <param name="evAccessToken">Access Token for the request</param>
            <param name="include">Related records to include in the response. Valid option is **masterUser** (optional)</param>
            <returns>AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.GetAccountWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get account settings Get setttings for your account, such as current space usage, webhooks settings, welcome email content and IP address restrictions.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required for the request</param>
            <param name="evAccessToken">Access Token for the request</param>
            <param name="include">Related records to include in the response. Valid option is **masterUser** (optional)</param>
            <returns>ApiResponse of AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.GetAccountAsync(System.String,System.String,System.String)">
            <summary>
            Get account settings Get setttings for your account, such as current space usage, webhooks settings, welcome email content and IP address restrictions.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required for the request</param>
            <param name="evAccessToken">Access Token for the request</param>
            <param name="include">Related records to include in the response. Valid option is **masterUser** (optional)</param>
            <returns>Task of AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.GetAccountAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get account settings Get setttings for your account, such as current space usage, webhooks settings, welcome email content and IP address restrictions.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required for the request</param>
            <param name="evAccessToken">Access Token for the request</param>
            <param name="include">Related records to include in the response. Valid option is **masterUser** (optional)</param>
            <returns>Task of ApiResponse (AccountResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.UpdateAccount(System.String,System.String,IO.Swagger.Model.UpdateAccountBody)">
            <summary>
            Update account settings Update account settings, such as welcome email content, IP address restrictions, webhooks settings and secure password requirements.  **Notes**  - You must have [admin-level access](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to change account settings.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body">Update Account Settings (optional)</param>
            <returns>AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.UpdateAccountWithHttpInfo(System.String,System.String,IO.Swagger.Model.UpdateAccountBody)">
            <summary>
            Update account settings Update account settings, such as welcome email content, IP address restrictions, webhooks settings and secure password requirements.  **Notes**  - You must have [admin-level access](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to change account settings.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body">Update Account Settings (optional)</param>
            <returns>ApiResponse of AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.UpdateAccountAsync(System.String,System.String,IO.Swagger.Model.UpdateAccountBody)">
            <summary>
            Update account settings Update account settings, such as welcome email content, IP address restrictions, webhooks settings and secure password requirements.  **Notes**  - You must have [admin-level access](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to change account settings.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body">Update Account Settings (optional)</param>
            <returns>Task of AccountResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.AccountApi.UpdateAccountAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.UpdateAccountBody)">
            <summary>
            Update account settings Update account settings, such as welcome email content, IP address restrictions, webhooks settings and secure password requirements.  **Notes**  - You must have [admin-level access](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to change account settings.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body">Update Account Settings (optional)</param>
            <returns>Task of ApiResponse (AccountResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.AccountApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.AccountApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IActivityApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IActivityApi.GetSessionLogs(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get activity logs
            </summary>
            <remarks>
            Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |- -- --|- -- -|- --| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="startDate">Start date of the filter data range (optional)</param>
            <param name="endDate">End date of the filter data range (optional)</param>
            <param name="ipAddress">Used to filter session logs by ip address. (optional)</param>
            <param name="userName">Username used for filtering a list (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="type">Filter session logs for operation type (see table above for acceptable values) (optional)</param>
            <param name="offset">Offset of the records list (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>SessionActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivityApi.GetSessionLogsWithHttpInfo(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get activity logs
            </summary>
            <remarks>
            Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |- -- --|- -- -|- --| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="startDate">Start date of the filter data range (optional)</param>
            <param name="endDate">End date of the filter data range (optional)</param>
            <param name="ipAddress">Used to filter session logs by ip address. (optional)</param>
            <param name="userName">Username used for filtering a list (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="type">Filter session logs for operation type (see table above for acceptable values) (optional)</param>
            <param name="offset">Offset of the records list (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>ApiResponse of SessionActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivityApi.GetWebhookLogs(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get webhook logs
            </summary>
            <remarks>
            Returns the webhook logs for your account. Optional query paramaters will filter the returned results based on a number of options including path, tpye of event, or status code.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). These are the valid options for event types:  - Upload - Download - Delete File - Delete Folder - Create Folder - Rename - Move - Copy - Compress - Extract - Share Folder - Send Files - Receive Files - Update Share - Update Receive - Delete Send - Delete Receive - Delete Share - Create Notification - Update Notification - Delete Notification - Create User - Update User  - Delete User - Connect - Disconnect
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="_event">Filter by triggered event (optional)</param>
            <param name="statusCode">Filter by webhook response status code (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="username">Filter by triggering username. (optional)</param>
            <param name="offset">Records to skip before returning results (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>WebhooksActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivityApi.GetWebhookLogsWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get webhook logs
            </summary>
            <remarks>
            Returns the webhook logs for your account. Optional query paramaters will filter the returned results based on a number of options including path, tpye of event, or status code.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). These are the valid options for event types:  - Upload - Download - Delete File - Delete Folder - Create Folder - Rename - Move - Copy - Compress - Extract - Share Folder - Send Files - Receive Files - Update Share - Update Receive - Delete Send - Delete Receive - Delete Share - Create Notification - Update Notification - Delete Notification - Create User - Update User  - Delete User - Connect - Disconnect
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="_event">Filter by triggered event (optional)</param>
            <param name="statusCode">Filter by webhook response status code (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="username">Filter by triggering username. (optional)</param>
            <param name="offset">Records to skip before returning results (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>ApiResponse of WebhooksActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivityApi.GetSessionLogsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get activity logs
            </summary>
            <remarks>
            Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |- -- --|- -- -|- --| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="startDate">Start date of the filter data range (optional)</param>
            <param name="endDate">End date of the filter data range (optional)</param>
            <param name="ipAddress">Used to filter session logs by ip address. (optional)</param>
            <param name="userName">Username used for filtering a list (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="type">Filter session logs for operation type (see table above for acceptable values) (optional)</param>
            <param name="offset">Offset of the records list (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>Task of SessionActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivityApi.GetSessionLogsAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get activity logs
            </summary>
            <remarks>
            Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |- -- --|- -- -|- --| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="startDate">Start date of the filter data range (optional)</param>
            <param name="endDate">End date of the filter data range (optional)</param>
            <param name="ipAddress">Used to filter session logs by ip address. (optional)</param>
            <param name="userName">Username used for filtering a list (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="type">Filter session logs for operation type (see table above for acceptable values) (optional)</param>
            <param name="offset">Offset of the records list (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>Task of ApiResponse (SessionActivityResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivityApi.GetWebhookLogsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get webhook logs
            </summary>
            <remarks>
            Returns the webhook logs for your account. Optional query paramaters will filter the returned results based on a number of options including path, tpye of event, or status code.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). These are the valid options for event types:  - Upload - Download - Delete File - Delete Folder - Create Folder - Rename - Move - Copy - Compress - Extract - Share Folder - Send Files - Receive Files - Update Share - Update Receive - Delete Send - Delete Receive - Delete Share - Create Notification - Update Notification - Delete Notification - Create User - Update User  - Delete User - Connect - Disconnect
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="_event">Filter by triggered event (optional)</param>
            <param name="statusCode">Filter by webhook response status code (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="username">Filter by triggering username. (optional)</param>
            <param name="offset">Records to skip before returning results (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>Task of WebhooksActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IActivityApi.GetWebhookLogsAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get webhook logs
            </summary>
            <remarks>
            Returns the webhook logs for your account. Optional query paramaters will filter the returned results based on a number of options including path, tpye of event, or status code.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). These are the valid options for event types:  - Upload - Download - Delete File - Delete Folder - Create Folder - Rename - Move - Copy - Compress - Extract - Share Folder - Send Files - Receive Files - Update Share - Update Receive - Delete Send - Delete Receive - Delete Share - Create Notification - Update Notification - Delete Notification - Create User - Update User  - Delete User - Connect - Disconnect
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="_event">Filter by triggered event (optional)</param>
            <param name="statusCode">Filter by webhook response status code (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="username">Filter by triggering username. (optional)</param>
            <param name="offset">Records to skip before returning results (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>Task of ApiResponse (WebhooksActivityResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.ActivityApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ActivityApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ActivityApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ActivityApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.GetSessionLogs(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get activity logs Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |- -- --|- -- -|- --| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="startDate">Start date of the filter data range (optional)</param>
            <param name="endDate">End date of the filter data range (optional)</param>
            <param name="ipAddress">Used to filter session logs by ip address. (optional)</param>
            <param name="userName">Username used for filtering a list (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="type">Filter session logs for operation type (see table above for acceptable values) (optional)</param>
            <param name="offset">Offset of the records list (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>SessionActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.GetSessionLogsWithHttpInfo(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get activity logs Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |- -- --|- -- -|- --| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="startDate">Start date of the filter data range (optional)</param>
            <param name="endDate">End date of the filter data range (optional)</param>
            <param name="ipAddress">Used to filter session logs by ip address. (optional)</param>
            <param name="userName">Username used for filtering a list (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="type">Filter session logs for operation type (see table above for acceptable values) (optional)</param>
            <param name="offset">Offset of the records list (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>ApiResponse of SessionActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.GetSessionLogsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get activity logs Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |- -- --|- -- -|- --| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="startDate">Start date of the filter data range (optional)</param>
            <param name="endDate">End date of the filter data range (optional)</param>
            <param name="ipAddress">Used to filter session logs by ip address. (optional)</param>
            <param name="userName">Username used for filtering a list (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="type">Filter session logs for operation type (see table above for acceptable values) (optional)</param>
            <param name="offset">Offset of the records list (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>Task of SessionActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.GetSessionLogsAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get activity logs Returns the detailed activity logs for your account. Optional query paramaters will filter the returned results based on a number of options including usernames, activity types, or date ranges.     **Operation Types** Session activity is logged with an operation type that is different from what is visible through the [activity log interface in the web file manager](/docs/account/10-activity-logs/00-activity-logs). Consult the table below to compare the two:  | File Manager Value | API Value | Notes | |- -- --|- -- -|- --| | Connect | PASS | | | Disconnect | EXIT | | | Upload | STOR | | | Download | RETR | | | Delete | DELE | | | Create Folder | MKD | | | Rename | RNTO | | | Move | MOVE | | | Copy | COPY | | | Compress | COMPR | | | Extract | EXTRACT | | | Shared Folders | SHARE | | | Send Files | SEND | | | Receive Files | RECV | | | _N/A_ | EDIT\\_SEND | Update send. Not shown in file manager | | Update Share | EDIT\\_SHARE| |  | Update Receive | EDIT\\_RECV | | | Delete Send | DELE\\_SEND | | | Delete Receive | DELE\\_RECV | | | Delete Share | DELE\\_SHARE | | | Create Notification | NOTIFY | | | Update Notification | EDIT\\_NTFY| | | Delete Notification | DELE\\_NTFY | | | Create User | USER | | | Update User | EDIT\\_USER | | | Delete User | DELE\\_USER | | | _N/A_ | DFA | Create direct link. Not shown in file manager | | _N/A_ | EDIT\\_DFA | Update direct link options. Not shown in file manager | | _N/A_ | DELE\\_DFA | Deactivate direct link. Not shown in file manager| 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="startDate">Start date of the filter data range (optional)</param>
            <param name="endDate">End date of the filter data range (optional)</param>
            <param name="ipAddress">Used to filter session logs by ip address. (optional)</param>
            <param name="userName">Username used for filtering a list (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="type">Filter session logs for operation type (see table above for acceptable values) (optional)</param>
            <param name="offset">Offset of the records list (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>Task of ApiResponse (SessionActivityResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.GetWebhookLogs(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get webhook logs Returns the webhook logs for your account. Optional query paramaters will filter the returned results based on a number of options including path, tpye of event, or status code.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). These are the valid options for event types:  - Upload - Download - Delete File - Delete Folder - Create Folder - Rename - Move - Copy - Compress - Extract - Share Folder - Send Files - Receive Files - Update Share - Update Receive - Delete Send - Delete Receive - Delete Share - Create Notification - Update Notification - Delete Notification - Create User - Update User  - Delete User - Connect - Disconnect
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="_event">Filter by triggered event (optional)</param>
            <param name="statusCode">Filter by webhook response status code (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="username">Filter by triggering username. (optional)</param>
            <param name="offset">Records to skip before returning results (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>WebhooksActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.GetWebhookLogsWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get webhook logs Returns the webhook logs for your account. Optional query paramaters will filter the returned results based on a number of options including path, tpye of event, or status code.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). These are the valid options for event types:  - Upload - Download - Delete File - Delete Folder - Create Folder - Rename - Move - Copy - Compress - Extract - Share Folder - Send Files - Receive Files - Update Share - Update Receive - Delete Send - Delete Receive - Delete Share - Create Notification - Update Notification - Delete Notification - Create User - Update User  - Delete User - Connect - Disconnect
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="_event">Filter by triggered event (optional)</param>
            <param name="statusCode">Filter by webhook response status code (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="username">Filter by triggering username. (optional)</param>
            <param name="offset">Records to skip before returning results (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>ApiResponse of WebhooksActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.GetWebhookLogsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get webhook logs Returns the webhook logs for your account. Optional query paramaters will filter the returned results based on a number of options including path, tpye of event, or status code.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). These are the valid options for event types:  - Upload - Download - Delete File - Delete Folder - Create Folder - Rename - Move - Copy - Compress - Extract - Share Folder - Send Files - Receive Files - Update Share - Update Receive - Delete Send - Delete Receive - Delete Share - Create Notification - Update Notification - Delete Notification - Create User - Update User  - Delete User - Connect - Disconnect
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="_event">Filter by triggered event (optional)</param>
            <param name="statusCode">Filter by webhook response status code (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="username">Filter by triggering username. (optional)</param>
            <param name="offset">Records to skip before returning results (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>Task of WebhooksActivityResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ActivityApi.GetWebhookLogsAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get webhook logs Returns the webhook logs for your account. Optional query paramaters will filter the returned results based on a number of options including path, tpye of event, or status code.   **Event Types**  Webhooks are triggered by enabled event types for your account, which are configured on the [developer settings page](/docs/account/09-settings/06-developer-settings). These are the valid options for event types:  - Upload - Download - Delete File - Delete Folder - Create Folder - Rename - Move - Copy - Compress - Extract - Share Folder - Send Files - Receive Files - Update Share - Update Receive - Delete Send - Delete Receive - Delete Share - Create Notification - Update Notification - Delete Notification - Create User - Update User  - Delete User - Connect - Disconnect
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="_event">Filter by triggered event (optional)</param>
            <param name="statusCode">Filter by webhook response status code (optional)</param>
            <param name="path">Path used to filter records (optional)</param>
            <param name="username">Filter by triggering username. (optional)</param>
            <param name="offset">Records to skip before returning results (optional)</param>
            <param name="limit">Limit of the records list (optional)</param>
            <param name="sort">Comma separated list sort params (optional)</param>
            <returns>Task of ApiResponse (WebhooksActivityResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.ActivityApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.ActivityApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IEmailApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IEmailApi.SendReferralEmail(System.String,System.String,IO.Swagger.Model.Body15)">
            <summary>
            Send referral email to a given address
            </summary>
            <remarks>
            Invite a friend to sign up for a free trial of ExaVault. Send a [referral](/lp/referafriend/) email to an email address. If the recipient signs up for ExaVault, we'll apply a credit to your account for the referral. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailApi.SendReferralEmailWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body15)">
            <summary>
            Send referral email to a given address
            </summary>
            <remarks>
            Invite a friend to sign up for a free trial of ExaVault. Send a [referral](/lp/referafriend/) email to an email address. If the recipient signs up for ExaVault, we'll apply a credit to your account for the referral. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailApi.SendWelcomeEmail(System.String,System.String,System.String)">
            <summary>
            Resend welcome email to specific user
            </summary>
            <remarks>
            Send a welcome email to a user. The contents of the welcome email can be set by [PATCH /accounts](#operation/updateAccount).
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">A username to send the welcome email to.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailApi.SendWelcomeEmailWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Resend welcome email to specific user
            </summary>
            <remarks>
            Send a welcome email to a user. The contents of the welcome email can be set by [PATCH /accounts](#operation/updateAccount).
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">A username to send the welcome email to.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailApi.SendReferralEmailAsync(System.String,System.String,IO.Swagger.Model.Body15)">
            <summary>
            Send referral email to a given address
            </summary>
            <remarks>
            Invite a friend to sign up for a free trial of ExaVault. Send a [referral](/lp/referafriend/) email to an email address. If the recipient signs up for ExaVault, we'll apply a credit to your account for the referral. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailApi.SendReferralEmailAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body15)">
            <summary>
            Send referral email to a given address
            </summary>
            <remarks>
            Invite a friend to sign up for a free trial of ExaVault. Send a [referral](/lp/referafriend/) email to an email address. If the recipient signs up for ExaVault, we'll apply a credit to your account for the referral. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailApi.SendWelcomeEmailAsync(System.String,System.String,System.String)">
            <summary>
            Resend welcome email to specific user
            </summary>
            <remarks>
            Send a welcome email to a user. The contents of the welcome email can be set by [PATCH /accounts](#operation/updateAccount).
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">A username to send the welcome email to.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailApi.SendWelcomeEmailAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Resend welcome email to specific user
            </summary>
            <remarks>
            Send a welcome email to a user. The contents of the welcome email can be set by [PATCH /accounts](#operation/updateAccount).
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">A username to send the welcome email to.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.EmailApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.EmailApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.EmailApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.EmailApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.SendReferralEmail(System.String,System.String,IO.Swagger.Model.Body15)">
            <summary>
            Send referral email to a given address Invite a friend to sign up for a free trial of ExaVault. Send a [referral](/lp/referafriend/) email to an email address. If the recipient signs up for ExaVault, we'll apply a credit to your account for the referral. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.SendReferralEmailWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body15)">
            <summary>
            Send referral email to a given address Invite a friend to sign up for a free trial of ExaVault. Send a [referral](/lp/referafriend/) email to an email address. If the recipient signs up for ExaVault, we'll apply a credit to your account for the referral. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.SendReferralEmailAsync(System.String,System.String,IO.Swagger.Model.Body15)">
            <summary>
            Send referral email to a given address Invite a friend to sign up for a free trial of ExaVault. Send a [referral](/lp/referafriend/) email to an email address. If the recipient signs up for ExaVault, we'll apply a credit to your account for the referral. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.SendReferralEmailAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body15)">
            <summary>
            Send referral email to a given address Invite a friend to sign up for a free trial of ExaVault. Send a [referral](/lp/referafriend/) email to an email address. If the recipient signs up for ExaVault, we'll apply a credit to your account for the referral. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.SendWelcomeEmail(System.String,System.String,System.String)">
            <summary>
            Resend welcome email to specific user Send a welcome email to a user. The contents of the welcome email can be set by [PATCH /accounts](#operation/updateAccount).
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">A username to send the welcome email to.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.SendWelcomeEmailWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Resend welcome email to specific user Send a welcome email to a user. The contents of the welcome email can be set by [PATCH /accounts](#operation/updateAccount).
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">A username to send the welcome email to.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.SendWelcomeEmailAsync(System.String,System.String,System.String)">
            <summary>
            Resend welcome email to specific user Send a welcome email to a user. The contents of the welcome email can be set by [PATCH /accounts](#operation/updateAccount).
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">A username to send the welcome email to.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailApi.SendWelcomeEmailAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Resend welcome email to specific user Send a welcome email to a user. The contents of the welcome email can be set by [PATCH /accounts](#operation/updateAccount).
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">A username to send the welcome email to.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.EmailApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.EmailApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IEmailListsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.AddEmailList(System.String,System.String,IO.Swagger.Model.Body)">
            <summary>
            Create new email list
            </summary>
            <remarks>
            Create a new email list. Among other things, email lists can be used to send files or share folders with a group of email addresses at once.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.AddEmailListWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body)">
            <summary>
            Create new email list
            </summary>
            <remarks>
            Create a new email list. Among other things, email lists can be used to send files or share folders with a group of email addresses at once.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.DeleteEmailListById(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an email group with given id
            </summary>
            <remarks>
            Permanently delete an email group. This action is not reversable. We recommend making a user confirm this action before sending the API call. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to delete</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.DeleteEmailListByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an email group with given id
            </summary>
            <remarks>
            Permanently delete an email group. This action is not reversable. We recommend making a user confirm this action before sending the API call. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to delete</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.GetEmailListById(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get individual email group
            </summary>
            <remarks>
            Retrieve all the details of a specifc email list including it's name, when it was created and all the email addresses that belong to the group.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to return.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.GetEmailListByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get individual email group
            </summary>
            <remarks>
            Retrieve all the details of a specifc email list including it's name, when it was created and all the email addresses that belong to the group.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to return.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>ApiResponse of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.GetEmailLists(System.String,System.String,System.String)">
            <summary>
            Get all email groups
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>EmailListCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.GetEmailListsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get all email groups
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>ApiResponse of EmailListCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.UpdateEmailListById(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body1)">
            <summary>
            Update an email group
            </summary>
            <remarks>
            Add or remove emails from an email list that can be used to send and share files with groups.   **Notes**  *This call will **replace** your current email list in its entirety.* If you want to keep any existing emails on the list, be sure to submit the call with any current emails you want to keep on the list.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to update.</param>
            <param name="body"> (optional)</param>
            <returns>EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.UpdateEmailListByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body1)">
            <summary>
            Update an email group
            </summary>
            <remarks>
            Add or remove emails from an email list that can be used to send and share files with groups.   **Notes**  *This call will **replace** your current email list in its entirety.* If you want to keep any existing emails on the list, be sure to submit the call with any current emails you want to keep on the list.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to update.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.AddEmailListAsync(System.String,System.String,IO.Swagger.Model.Body)">
            <summary>
            Create new email list
            </summary>
            <remarks>
            Create a new email list. Among other things, email lists can be used to send files or share folders with a group of email addresses at once.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.AddEmailListAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body)">
            <summary>
            Create new email list
            </summary>
            <remarks>
            Create a new email list. Among other things, email lists can be used to send files or share folders with a group of email addresses at once.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (EmailListResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.DeleteEmailListByIdAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an email group with given id
            </summary>
            <remarks>
            Permanently delete an email group. This action is not reversable. We recommend making a user confirm this action before sending the API call. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to delete</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.DeleteEmailListByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an email group with given id
            </summary>
            <remarks>
            Permanently delete an email group. This action is not reversable. We recommend making a user confirm this action before sending the API call. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to delete</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.GetEmailListByIdAsync(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get individual email group
            </summary>
            <remarks>
            Retrieve all the details of a specifc email list including it's name, when it was created and all the email addresses that belong to the group.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to return.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>Task of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.GetEmailListByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get individual email group
            </summary>
            <remarks>
            Retrieve all the details of a specifc email list including it's name, when it was created and all the email addresses that belong to the group.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to return.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>Task of ApiResponse (EmailListResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.GetEmailListsAsync(System.String,System.String,System.String)">
            <summary>
            Get all email groups
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>Task of EmailListCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.GetEmailListsAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get all email groups
            </summary>
            <remarks>
            
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>Task of ApiResponse (EmailListCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.UpdateEmailListByIdAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body1)">
            <summary>
            Update an email group
            </summary>
            <remarks>
            Add or remove emails from an email list that can be used to send and share files with groups.   **Notes**  *This call will **replace** your current email list in its entirety.* If you want to keep any existing emails on the list, be sure to submit the call with any current emails you want to keep on the list.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to update.</param>
            <param name="body"> (optional)</param>
            <returns>Task of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IEmailListsApi.UpdateEmailListByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body1)">
            <summary>
            Update an email group
            </summary>
            <remarks>
            Add or remove emails from an email list that can be used to send and share files with groups.   **Notes**  *This call will **replace** your current email list in its entirety.* If you want to keep any existing emails on the list, be sure to submit the call with any current emails you want to keep on the list.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to update.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (EmailListResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.EmailListsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.EmailListsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.EmailListsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.EmailListsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.AddEmailList(System.String,System.String,IO.Swagger.Model.Body)">
            <summary>
            Create new email list Create a new email list. Among other things, email lists can be used to send files or share folders with a group of email addresses at once.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.AddEmailListWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body)">
            <summary>
            Create new email list Create a new email list. Among other things, email lists can be used to send files or share folders with a group of email addresses at once.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.AddEmailListAsync(System.String,System.String,IO.Swagger.Model.Body)">
            <summary>
            Create new email list Create a new email list. Among other things, email lists can be used to send files or share folders with a group of email addresses at once.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.AddEmailListAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body)">
            <summary>
            Create new email list Create a new email list. Among other things, email lists can be used to send files or share folders with a group of email addresses at once.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (EmailListResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.DeleteEmailListById(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an email group with given id Permanently delete an email group. This action is not reversable. We recommend making a user confirm this action before sending the API call. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to delete</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.DeleteEmailListByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an email group with given id Permanently delete an email group. This action is not reversable. We recommend making a user confirm this action before sending the API call. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to delete</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.DeleteEmailListByIdAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an email group with given id Permanently delete an email group. This action is not reversable. We recommend making a user confirm this action before sending the API call. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to delete</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.DeleteEmailListByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete an email group with given id Permanently delete an email group. This action is not reversable. We recommend making a user confirm this action before sending the API call. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to delete</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.GetEmailListById(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get individual email group Retrieve all the details of a specifc email list including it's name, when it was created and all the email addresses that belong to the group.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to return.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.GetEmailListByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get individual email group Retrieve all the details of a specifc email list including it's name, when it was created and all the email addresses that belong to the group.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to return.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>ApiResponse of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.GetEmailListByIdAsync(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get individual email group Retrieve all the details of a specifc email list including it's name, when it was created and all the email addresses that belong to the group.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to return.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>Task of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.GetEmailListByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get individual email group Retrieve all the details of a specifc email list including it's name, when it was created and all the email addresses that belong to the group.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to return.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>Task of ApiResponse (EmailListResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.GetEmailLists(System.String,System.String,System.String)">
            <summary>
            Get all email groups 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>EmailListCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.GetEmailListsWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get all email groups 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>ApiResponse of EmailListCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.GetEmailListsAsync(System.String,System.String,System.String)">
            <summary>
            Get all email groups 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>Task of EmailListCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.GetEmailListsAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Get all email groups 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Related record types to include in the response. Valid option is `ownerUser` (optional)</param>
            <returns>Task of ApiResponse (EmailListCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.UpdateEmailListById(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body1)">
            <summary>
            Update an email group Add or remove emails from an email list that can be used to send and share files with groups.   **Notes**  *This call will **replace** your current email list in its entirety.* If you want to keep any existing emails on the list, be sure to submit the call with any current emails you want to keep on the list.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to update.</param>
            <param name="body"> (optional)</param>
            <returns>EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.UpdateEmailListByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body1)">
            <summary>
            Update an email group Add or remove emails from an email list that can be used to send and share files with groups.   **Notes**  *This call will **replace** your current email list in its entirety.* If you want to keep any existing emails on the list, be sure to submit the call with any current emails you want to keep on the list.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to update.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.UpdateEmailListByIdAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body1)">
            <summary>
            Update an email group Add or remove emails from an email list that can be used to send and share files with groups.   **Notes**  *This call will **replace** your current email list in its entirety.* If you want to keep any existing emails on the list, be sure to submit the call with any current emails you want to keep on the list.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to update.</param>
            <param name="body"> (optional)</param>
            <returns>Task of EmailListResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.EmailListsApi.UpdateEmailListByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body1)">
            <summary>
            Update an email group Add or remove emails from an email list that can be used to send and share files with groups.   **Notes**  *This call will **replace** your current email list in its entirety.* If you want to keep any existing emails on the list, be sure to submit the call with any current emails you want to keep on the list.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the email list to update.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (EmailListResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.EmailListsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.EmailListsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IFormApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.DeleteFormMessageById(System.String,System.String,System.String)">
            <summary>
            Delete a receive form submission
            </summary>
            <remarks>
            Deletes a form submission entry, which represents one time that a visitor filled out the form and uploaded files. This deletes only the record of the submission (the date, the values entered in the form and the names of the files uploaded by the visitor).The share and any associated file resources will not be deleted by this.   **Notes**:  - Use the [GET /form/entries/{formId}](#operation/getFormMessageById) to list the submissions and obtain the ID of the entry you want to delete - You must have the [DeleteFormData permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) in order to use this operation - It is not possible to un-delete data that is removed in this way 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the entry to be deleted data for</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.DeleteFormMessageByIdWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a receive form submission
            </summary>
            <remarks>
            Deletes a form submission entry, which represents one time that a visitor filled out the form and uploaded files. This deletes only the record of the submission (the date, the values entered in the form and the names of the files uploaded by the visitor).The share and any associated file resources will not be deleted by this.   **Notes**:  - Use the [GET /form/entries/{formId}](#operation/getFormMessageById) to list the submissions and obtain the ID of the entry you want to delete - You must have the [DeleteFormData permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) in order to use this operation - It is not possible to un-delete data that is removed in this way 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the entry to be deleted data for</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormById(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get receive folder form by Id
            </summary>
            <remarks>
            Returns the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders). The form details will return all the input fields and their settings.   Use the `include` parameter (with the value **share**) to also retrieve the details of the associated receive folder.   **Note**  If you prefer to find a form by its shareHash, you can use the [GET /forms](#operation/getFormByShareHash) endpoint instead.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Form unique ID number.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="include">Enter \"**share**\" to get information about associated receive folder. (optional)</param>
            <returns>FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get receive folder form by Id
            </summary>
            <remarks>
            Returns the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders). The form details will return all the input fields and their settings.   Use the `include` parameter (with the value **share**) to also retrieve the details of the associated receive folder.   **Note**  If you prefer to find a form by its shareHash, you can use the [GET /forms](#operation/getFormByShareHash) endpoint instead.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Form unique ID number.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="include">Enter \"**share**\" to get information about associated receive folder. (optional)</param>
            <returns>ApiResponse of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormByShareHash(System.String,System.String,System.String,System.String)">
            <summary>
            Get receive folder form settings
            </summary>
            <remarks>
            Get the information for the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders) by its shareHash. The form details will return all the input field settings and the CSS for the form.  Use the `include` parameter (with the value **share**) to also get the details of the associated receive folder.  **Note**  - If you prefer to find a form by its ID, you can use the [GET /forms/{id}](#operation/getFormById) endpoint instead.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="shareHash">Share hash to retrieve the form for.</param>
            <param name="include">Related record types to include in the response. Valid option is **share** (optional)</param>
            <returns>FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormByShareHashWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get receive folder form settings
            </summary>
            <remarks>
            Get the information for the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders) by its shareHash. The form details will return all the input field settings and the CSS for the form.  Use the `include` parameter (with the value **share**) to also get the details of the associated receive folder.  **Note**  - If you prefer to find a form by its ID, you can use the [GET /forms/{id}](#operation/getFormById) endpoint instead.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="shareHash">Share hash to retrieve the form for.</param>
            <param name="include">Related record types to include in the response. Valid option is **share** (optional)</param>
            <returns>ApiResponse of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormEntries(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get form data entries for a receive
            </summary>
            <remarks>
            Returns the form data entries for a specific form for a receive. Optional parameters can be included in the call to manage larger data sets. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the form to retrieve entries for.</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional)</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <returns>FormEntryResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormEntriesWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get form data entries for a receive
            </summary>
            <remarks>
            Returns the form data entries for a specific form for a receive. Optional parameters can be included in the call to manage larger data sets. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the form to retrieve entries for.</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional)</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <returns>ApiResponse of FormEntryResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.UpdateFormById(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body2)">
            <summary>
            Updates a form with given parameters
            </summary>
            <remarks>
            Add, update, or delete a form's parameters. This will alter how your users/customers will see and interact with the form when sending you files.   **Notes**  *This call will **replace** your current form in its entirety.* If you want to keep any existing elements unchanged, be sure to submit the call with an element's current settings to preserve them.                          
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">Form unique ID number.</param>
            <param name="body"> (optional)</param>
            <returns>FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.UpdateFormByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body2)">
            <summary>
            Updates a form with given parameters
            </summary>
            <remarks>
            Add, update, or delete a form's parameters. This will alter how your users/customers will see and interact with the form when sending you files.   **Notes**  *This call will **replace** your current form in its entirety.* If you want to keep any existing elements unchanged, be sure to submit the call with an element's current settings to preserve them.                          
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">Form unique ID number.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.DeleteFormMessageByIdAsync(System.String,System.String,System.String)">
            <summary>
            Delete a receive form submission
            </summary>
            <remarks>
            Deletes a form submission entry, which represents one time that a visitor filled out the form and uploaded files. This deletes only the record of the submission (the date, the values entered in the form and the names of the files uploaded by the visitor).The share and any associated file resources will not be deleted by this.   **Notes**:  - Use the [GET /form/entries/{formId}](#operation/getFormMessageById) to list the submissions and obtain the ID of the entry you want to delete - You must have the [DeleteFormData permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) in order to use this operation - It is not possible to un-delete data that is removed in this way 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the entry to be deleted data for</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.DeleteFormMessageByIdAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a receive form submission
            </summary>
            <remarks>
            Deletes a form submission entry, which represents one time that a visitor filled out the form and uploaded files. This deletes only the record of the submission (the date, the values entered in the form and the names of the files uploaded by the visitor).The share and any associated file resources will not be deleted by this.   **Notes**:  - Use the [GET /form/entries/{formId}](#operation/getFormMessageById) to list the submissions and obtain the ID of the entry you want to delete - You must have the [DeleteFormData permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) in order to use this operation - It is not possible to un-delete data that is removed in this way 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the entry to be deleted data for</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormByIdAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get receive folder form by Id
            </summary>
            <remarks>
            Returns the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders). The form details will return all the input fields and their settings.   Use the `include` parameter (with the value **share**) to also retrieve the details of the associated receive folder.   **Note**  If you prefer to find a form by its shareHash, you can use the [GET /forms](#operation/getFormByShareHash) endpoint instead.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Form unique ID number.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="include">Enter \"**share**\" to get information about associated receive folder. (optional)</param>
            <returns>Task of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get receive folder form by Id
            </summary>
            <remarks>
            Returns the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders). The form details will return all the input fields and their settings.   Use the `include` parameter (with the value **share**) to also retrieve the details of the associated receive folder.   **Note**  If you prefer to find a form by its shareHash, you can use the [GET /forms](#operation/getFormByShareHash) endpoint instead.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Form unique ID number.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="include">Enter \"**share**\" to get information about associated receive folder. (optional)</param>
            <returns>Task of ApiResponse (FormResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormByShareHashAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Get receive folder form settings
            </summary>
            <remarks>
            Get the information for the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders) by its shareHash. The form details will return all the input field settings and the CSS for the form.  Use the `include` parameter (with the value **share**) to also get the details of the associated receive folder.  **Note**  - If you prefer to find a form by its ID, you can use the [GET /forms/{id}](#operation/getFormById) endpoint instead.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="shareHash">Share hash to retrieve the form for.</param>
            <param name="include">Related record types to include in the response. Valid option is **share** (optional)</param>
            <returns>Task of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormByShareHashAsyncWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get receive folder form settings
            </summary>
            <remarks>
            Get the information for the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders) by its shareHash. The form details will return all the input field settings and the CSS for the form.  Use the `include` parameter (with the value **share**) to also get the details of the associated receive folder.  **Note**  - If you prefer to find a form by its ID, you can use the [GET /forms/{id}](#operation/getFormById) endpoint instead.  
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="shareHash">Share hash to retrieve the form for.</param>
            <param name="include">Related record types to include in the response. Valid option is **share** (optional)</param>
            <returns>Task of ApiResponse (FormResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormEntriesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get form data entries for a receive
            </summary>
            <remarks>
            Returns the form data entries for a specific form for a receive. Optional parameters can be included in the call to manage larger data sets. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the form to retrieve entries for.</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional)</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <returns>Task of FormEntryResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.GetFormEntriesAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get form data entries for a receive
            </summary>
            <remarks>
            Returns the form data entries for a specific form for a receive. Optional parameters can be included in the call to manage larger data sets. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the form to retrieve entries for.</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional)</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <returns>Task of ApiResponse (FormEntryResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.UpdateFormByIdAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body2)">
            <summary>
            Updates a form with given parameters
            </summary>
            <remarks>
            Add, update, or delete a form's parameters. This will alter how your users/customers will see and interact with the form when sending you files.   **Notes**  *This call will **replace** your current form in its entirety.* If you want to keep any existing elements unchanged, be sure to submit the call with an element's current settings to preserve them.                          
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">Form unique ID number.</param>
            <param name="body"> (optional)</param>
            <returns>Task of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IFormApi.UpdateFormByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body2)">
            <summary>
            Updates a form with given parameters
            </summary>
            <remarks>
            Add, update, or delete a form's parameters. This will alter how your users/customers will see and interact with the form when sending you files.   **Notes**  *This call will **replace** your current form in its entirety.* If you want to keep any existing elements unchanged, be sure to submit the call with an element's current settings to preserve them.                          
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">Form unique ID number.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (FormResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.FormApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.FormApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.FormApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.FormApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.DeleteFormMessageById(System.String,System.String,System.String)">
            <summary>
            Delete a receive form submission Deletes a form submission entry, which represents one time that a visitor filled out the form and uploaded files. This deletes only the record of the submission (the date, the values entered in the form and the names of the files uploaded by the visitor).The share and any associated file resources will not be deleted by this.   **Notes**:  - Use the [GET /form/entries/{formId}](#operation/getFormMessageById) to list the submissions and obtain the ID of the entry you want to delete - You must have the [DeleteFormData permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) in order to use this operation - It is not possible to un-delete data that is removed in this way 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the entry to be deleted data for</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.DeleteFormMessageByIdWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a receive form submission Deletes a form submission entry, which represents one time that a visitor filled out the form and uploaded files. This deletes only the record of the submission (the date, the values entered in the form and the names of the files uploaded by the visitor).The share and any associated file resources will not be deleted by this.   **Notes**:  - Use the [GET /form/entries/{formId}](#operation/getFormMessageById) to list the submissions and obtain the ID of the entry you want to delete - You must have the [DeleteFormData permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) in order to use this operation - It is not possible to un-delete data that is removed in this way 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the entry to be deleted data for</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.DeleteFormMessageByIdAsync(System.String,System.String,System.String)">
            <summary>
            Delete a receive form submission Deletes a form submission entry, which represents one time that a visitor filled out the form and uploaded files. This deletes only the record of the submission (the date, the values entered in the form and the names of the files uploaded by the visitor).The share and any associated file resources will not be deleted by this.   **Notes**:  - Use the [GET /form/entries/{formId}](#operation/getFormMessageById) to list the submissions and obtain the ID of the entry you want to delete - You must have the [DeleteFormData permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) in order to use this operation - It is not possible to un-delete data that is removed in this way 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the entry to be deleted data for</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.DeleteFormMessageByIdAsyncWithHttpInfo(System.String,System.String,System.String)">
            <summary>
            Delete a receive form submission Deletes a form submission entry, which represents one time that a visitor filled out the form and uploaded files. This deletes only the record of the submission (the date, the values entered in the form and the names of the files uploaded by the visitor).The share and any associated file resources will not be deleted by this.   **Notes**:  - Use the [GET /form/entries/{formId}](#operation/getFormMessageById) to list the submissions and obtain the ID of the entry you want to delete - You must have the [DeleteFormData permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) in order to use this operation - It is not possible to un-delete data that is removed in this way 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the entry to be deleted data for</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormById(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get receive folder form by Id Returns the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders). The form details will return all the input fields and their settings.   Use the `include` parameter (with the value **share**) to also retrieve the details of the associated receive folder.   **Note**  If you prefer to find a form by its shareHash, you can use the [GET /forms](#operation/getFormByShareHash) endpoint instead.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Form unique ID number.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="include">Enter \"**share**\" to get information about associated receive folder. (optional)</param>
            <returns>FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get receive folder form by Id Returns the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders). The form details will return all the input fields and their settings.   Use the `include` parameter (with the value **share**) to also retrieve the details of the associated receive folder.   **Note**  If you prefer to find a form by its shareHash, you can use the [GET /forms](#operation/getFormByShareHash) endpoint instead.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Form unique ID number.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="include">Enter \"**share**\" to get information about associated receive folder. (optional)</param>
            <returns>ApiResponse of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormByIdAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get receive folder form by Id Returns the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders). The form details will return all the input fields and their settings.   Use the `include` parameter (with the value **share**) to also retrieve the details of the associated receive folder.   **Note**  If you prefer to find a form by its shareHash, you can use the [GET /forms](#operation/getFormByShareHash) endpoint instead.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Form unique ID number.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="include">Enter \"**share**\" to get information about associated receive folder. (optional)</param>
            <returns>Task of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get receive folder form by Id Returns the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders). The form details will return all the input fields and their settings.   Use the `include` parameter (with the value **share**) to also retrieve the details of the associated receive folder.   **Note**  If you prefer to find a form by its shareHash, you can use the [GET /forms](#operation/getFormByShareHash) endpoint instead.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Form unique ID number.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="include">Enter \"**share**\" to get information about associated receive folder. (optional)</param>
            <returns>Task of ApiResponse (FormResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormByShareHash(System.String,System.String,System.String,System.String)">
            <summary>
            Get receive folder form settings Get the information for the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders) by its shareHash. The form details will return all the input field settings and the CSS for the form.  Use the `include` parameter (with the value **share**) to also get the details of the associated receive folder.  **Note**  - If you prefer to find a form by its ID, you can use the [GET /forms/{id}](#operation/getFormById) endpoint instead.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="shareHash">Share hash to retrieve the form for.</param>
            <param name="include">Related record types to include in the response. Valid option is **share** (optional)</param>
            <returns>FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormByShareHashWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get receive folder form settings Get the information for the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders) by its shareHash. The form details will return all the input field settings and the CSS for the form.  Use the `include` parameter (with the value **share**) to also get the details of the associated receive folder.  **Note**  - If you prefer to find a form by its ID, you can use the [GET /forms/{id}](#operation/getFormById) endpoint instead.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="shareHash">Share hash to retrieve the form for.</param>
            <param name="include">Related record types to include in the response. Valid option is **share** (optional)</param>
            <returns>ApiResponse of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormByShareHashAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Get receive folder form settings Get the information for the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders) by its shareHash. The form details will return all the input field settings and the CSS for the form.  Use the `include` parameter (with the value **share**) to also get the details of the associated receive folder.  **Note**  - If you prefer to find a form by its ID, you can use the [GET /forms/{id}](#operation/getFormById) endpoint instead.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="shareHash">Share hash to retrieve the form for.</param>
            <param name="include">Related record types to include in the response. Valid option is **share** (optional)</param>
            <returns>Task of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormByShareHashAsyncWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get receive folder form settings Get the information for the [file upload form](/docs/account/05-file-sharing/05-form-builder) assigned to a [receive folder](/docs/account/05-file-sharing/04-receive-folders) by its shareHash. The form details will return all the input field settings and the CSS for the form.  Use the `include` parameter (with the value **share**) to also get the details of the associated receive folder.  **Note**  - If you prefer to find a form by its ID, you can use the [GET /forms/{id}](#operation/getFormById) endpoint instead.  
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access Token required to make the API call.</param>
            <param name="shareHash">Share hash to retrieve the form for.</param>
            <param name="include">Related record types to include in the response. Valid option is **share** (optional)</param>
            <returns>Task of ApiResponse (FormResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormEntries(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get form data entries for a receive Returns the form data entries for a specific form for a receive. Optional parameters can be included in the call to manage larger data sets. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the form to retrieve entries for.</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional)</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <returns>FormEntryResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormEntriesWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get form data entries for a receive Returns the form data entries for a specific form for a receive. Optional parameters can be included in the call to manage larger data sets. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the form to retrieve entries for.</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional)</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <returns>ApiResponse of FormEntryResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormEntriesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get form data entries for a receive Returns the form data entries for a specific form for a receive. Optional parameters can be included in the call to manage larger data sets. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the form to retrieve entries for.</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional)</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <returns>Task of FormEntryResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.GetFormEntriesAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get form data entries for a receive Returns the form data entries for a specific form for a receive. Optional parameters can be included in the call to manage larger data sets. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the form to retrieve entries for.</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional)</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <returns>Task of ApiResponse (FormEntryResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.UpdateFormById(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body2)">
            <summary>
            Updates a form with given parameters Add, update, or delete a form's parameters. This will alter how your users/customers will see and interact with the form when sending you files.   **Notes**  *This call will **replace** your current form in its entirety.* If you want to keep any existing elements unchanged, be sure to submit the call with an element's current settings to preserve them.                          
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">Form unique ID number.</param>
            <param name="body"> (optional)</param>
            <returns>FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.UpdateFormByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body2)">
            <summary>
            Updates a form with given parameters Add, update, or delete a form's parameters. This will alter how your users/customers will see and interact with the form when sending you files.   **Notes**  *This call will **replace** your current form in its entirety.* If you want to keep any existing elements unchanged, be sure to submit the call with an element's current settings to preserve them.                          
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">Form unique ID number.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.UpdateFormByIdAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body2)">
            <summary>
            Updates a form with given parameters Add, update, or delete a form's parameters. This will alter how your users/customers will see and interact with the form when sending you files.   **Notes**  *This call will **replace** your current form in its entirety.* If you want to keep any existing elements unchanged, be sure to submit the call with an element's current settings to preserve them.                          
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">Form unique ID number.</param>
            <param name="body"> (optional)</param>
            <returns>Task of FormResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.FormApi.UpdateFormByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body2)">
            <summary>
            Updates a form with given parameters Add, update, or delete a form's parameters. This will alter how your users/customers will see and interact with the form when sending you files.   **Notes**  *This call will **replace** your current form in its entirety.* If you want to keep any existing elements unchanged, be sure to submit the call with an element's current settings to preserve them.                          
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">Form unique ID number.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (FormResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.FormApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.FormApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.INotificationsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.AddNotification(System.String,System.String,IO.Swagger.Model.Body4)">
            <summary>
            Create a new notification
            </summary>
            <remarks>
            Create a new notification for a [resource](#section/Identifying-Resources) in your account. Notifications can be sent via email or webhook;  - To enable email, pass an array of email addresses to the `recipients` parameter of this call.  - To enable webhooks, setup the webhook callback URL in your account settings via [PATCH /account](#operation/updateAccount).   **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.AddNotificationWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body4)">
            <summary>
            Create a new notification
            </summary>
            <remarks>
            Create a new notification for a [resource](#section/Identifying-Resources) in your account. Notifications can be sent via email or webhook;  - To enable email, pass an array of email addresses to the `recipients` parameter of this call.  - To enable webhooks, setup the webhook callback URL in your account settings via [PATCH /account](#operation/updateAccount).   **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.DeleteNotificationById(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a notification
            </summary>
            <remarks>
            Deletes a notification. Note that deleting a notification _only_ deletes the notification &amp;ndash; it does not delete any underlying files or folders.  **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only delete notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.DeleteNotificationByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a notification
            </summary>
            <remarks>
            Deletes a notification. Note that deleting a notification _only_ deletes the notification &amp;ndash; it does not delete any underlying files or folders.  **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only delete notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.GetNotificationById(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get notification details
            </summary>
            <remarks>
            Get the details for a notification with a specific ID number. You'll be able to review its path, triggers and who's getting the notification.   **Notes**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to view the detail for a notification. - You can only retrieve notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="include">Related record types to include in the response. You can include multiple types by separating them with commas. Valid options are **ownerUser**, **resource**, and **share**. (optional)</param>
            <returns>NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.GetNotificationByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get notification details
            </summary>
            <remarks>
            Get the details for a notification with a specific ID number. You'll be able to review its path, triggers and who's getting the notification.   **Notes**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to view the detail for a notification. - You can only retrieve notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="include">Related record types to include in the response. You can include multiple types by separating them with commas. Valid options are **ownerUser**, **resource**, and **share**. (optional)</param>
            <returns>ApiResponse of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.ListNotifications(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get a list of notifications
            </summary>
            <remarks>
            Get a list of all the [notifications](/docs/account/06-notifications) you have access to. You can use sorting and filtering to limit the returned list.  **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions)
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="type">Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**  If this parameter is not used, only **file** and **folder** type notifications are included in the list. (optional)</param>
            <param name="offset">Starting notification record in the result set. Can be used for pagination. (optional, default to 0)</param>
            <param name="sort">What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  You can chose multiple options for the sort by separating them with commmas, such as \"type,-date\" to sort by type, then most recent. (optional)</param>
            <param name="limit">Number of notification records to return. Can be used for pagination. (optional, default to 25)</param>
            <param name="include">Related records to include in the response. Valid options are **ownerUser**, **resource**, **share** (optional)</param>
            <param name="action">The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all**   **Note** The **all** action matches notifications set to \"all\", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all (optional)</param>
            <returns>NotificationCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.ListNotificationsWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get a list of notifications
            </summary>
            <remarks>
            Get a list of all the [notifications](/docs/account/06-notifications) you have access to. You can use sorting and filtering to limit the returned list.  **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions)
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="type">Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**  If this parameter is not used, only **file** and **folder** type notifications are included in the list. (optional)</param>
            <param name="offset">Starting notification record in the result set. Can be used for pagination. (optional, default to 0)</param>
            <param name="sort">What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  You can chose multiple options for the sort by separating them with commmas, such as \"type,-date\" to sort by type, then most recent. (optional)</param>
            <param name="limit">Number of notification records to return. Can be used for pagination. (optional, default to 25)</param>
            <param name="include">Related records to include in the response. Valid options are **ownerUser**, **resource**, **share** (optional)</param>
            <param name="action">The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all**   **Note** The **all** action matches notifications set to \"all\", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all (optional)</param>
            <returns>ApiResponse of NotificationCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.UpdateNotificationById(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body3)">
            <summary>
            Update a notification
            </summary>
            <remarks>
            Update an existing notification. You can add additional emails or change the action or users that cause a notification to trigger.   When updating recipient emails, make sure your `recipients` parameter contains the full list of people who should be included on the notification. If you resend the list without an existing recipient, they will be deleted from the notification emails.   **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only change notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="body"> (optional)</param>
            <returns>NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.UpdateNotificationByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body3)">
            <summary>
            Update a notification
            </summary>
            <remarks>
            Update an existing notification. You can add additional emails or change the action or users that cause a notification to trigger.   When updating recipient emails, make sure your `recipients` parameter contains the full list of people who should be included on the notification. If you resend the list without an existing recipient, they will be deleted from the notification emails.   **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only change notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.AddNotificationAsync(System.String,System.String,IO.Swagger.Model.Body4)">
            <summary>
            Create a new notification
            </summary>
            <remarks>
            Create a new notification for a [resource](#section/Identifying-Resources) in your account. Notifications can be sent via email or webhook;  - To enable email, pass an array of email addresses to the `recipients` parameter of this call.  - To enable webhooks, setup the webhook callback URL in your account settings via [PATCH /account](#operation/updateAccount).   **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.AddNotificationAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body4)">
            <summary>
            Create a new notification
            </summary>
            <remarks>
            Create a new notification for a [resource](#section/Identifying-Resources) in your account. Notifications can be sent via email or webhook;  - To enable email, pass an array of email addresses to the `recipients` parameter of this call.  - To enable webhooks, setup the webhook callback URL in your account settings via [PATCH /account](#operation/updateAccount).   **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (NotificationResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.DeleteNotificationByIdAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a notification
            </summary>
            <remarks>
            Deletes a notification. Note that deleting a notification _only_ deletes the notification &amp;ndash; it does not delete any underlying files or folders.  **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only delete notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.DeleteNotificationByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a notification
            </summary>
            <remarks>
            Deletes a notification. Note that deleting a notification _only_ deletes the notification &amp;ndash; it does not delete any underlying files or folders.  **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only delete notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.GetNotificationByIdAsync(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get notification details
            </summary>
            <remarks>
            Get the details for a notification with a specific ID number. You'll be able to review its path, triggers and who's getting the notification.   **Notes**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to view the detail for a notification. - You can only retrieve notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="include">Related record types to include in the response. You can include multiple types by separating them with commas. Valid options are **ownerUser**, **resource**, and **share**. (optional)</param>
            <returns>Task of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.GetNotificationByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get notification details
            </summary>
            <remarks>
            Get the details for a notification with a specific ID number. You'll be able to review its path, triggers and who's getting the notification.   **Notes**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to view the detail for a notification. - You can only retrieve notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="include">Related record types to include in the response. You can include multiple types by separating them with commas. Valid options are **ownerUser**, **resource**, and **share**. (optional)</param>
            <returns>Task of ApiResponse (NotificationResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.ListNotificationsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get a list of notifications
            </summary>
            <remarks>
            Get a list of all the [notifications](/docs/account/06-notifications) you have access to. You can use sorting and filtering to limit the returned list.  **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions)
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="type">Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**  If this parameter is not used, only **file** and **folder** type notifications are included in the list. (optional)</param>
            <param name="offset">Starting notification record in the result set. Can be used for pagination. (optional, default to 0)</param>
            <param name="sort">What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  You can chose multiple options for the sort by separating them with commmas, such as \"type,-date\" to sort by type, then most recent. (optional)</param>
            <param name="limit">Number of notification records to return. Can be used for pagination. (optional, default to 25)</param>
            <param name="include">Related records to include in the response. Valid options are **ownerUser**, **resource**, **share** (optional)</param>
            <param name="action">The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all**   **Note** The **all** action matches notifications set to \"all\", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all (optional)</param>
            <returns>Task of NotificationCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.ListNotificationsAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get a list of notifications
            </summary>
            <remarks>
            Get a list of all the [notifications](/docs/account/06-notifications) you have access to. You can use sorting and filtering to limit the returned list.  **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions)
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="type">Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**  If this parameter is not used, only **file** and **folder** type notifications are included in the list. (optional)</param>
            <param name="offset">Starting notification record in the result set. Can be used for pagination. (optional, default to 0)</param>
            <param name="sort">What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  You can chose multiple options for the sort by separating them with commmas, such as \"type,-date\" to sort by type, then most recent. (optional)</param>
            <param name="limit">Number of notification records to return. Can be used for pagination. (optional, default to 25)</param>
            <param name="include">Related records to include in the response. Valid options are **ownerUser**, **resource**, **share** (optional)</param>
            <param name="action">The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all**   **Note** The **all** action matches notifications set to \"all\", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all (optional)</param>
            <returns>Task of ApiResponse (NotificationCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.UpdateNotificationByIdAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body3)">
            <summary>
            Update a notification
            </summary>
            <remarks>
            Update an existing notification. You can add additional emails or change the action or users that cause a notification to trigger.   When updating recipient emails, make sure your `recipients` parameter contains the full list of people who should be included on the notification. If you resend the list without an existing recipient, they will be deleted from the notification emails.   **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only change notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="body"> (optional)</param>
            <returns>Task of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.INotificationsApi.UpdateNotificationByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body3)">
            <summary>
            Update a notification
            </summary>
            <remarks>
            Update an existing notification. You can add additional emails or change the action or users that cause a notification to trigger.   When updating recipient emails, make sure your `recipients` parameter contains the full list of people who should be included on the notification. If you resend the list without an existing recipient, they will be deleted from the notification emails.   **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only change notifications owned by your user account.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (NotificationResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.NotificationsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.NotificationsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.NotificationsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.NotificationsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.AddNotification(System.String,System.String,IO.Swagger.Model.Body4)">
            <summary>
            Create a new notification Create a new notification for a [resource](#section/Identifying-Resources) in your account. Notifications can be sent via email or webhook;  - To enable email, pass an array of email addresses to the `recipients` parameter of this call.  - To enable webhooks, setup the webhook callback URL in your account settings via [PATCH /account](#operation/updateAccount).   **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.AddNotificationWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body4)">
            <summary>
            Create a new notification Create a new notification for a [resource](#section/Identifying-Resources) in your account. Notifications can be sent via email or webhook;  - To enable email, pass an array of email addresses to the `recipients` parameter of this call.  - To enable webhooks, setup the webhook callback URL in your account settings via [PATCH /account](#operation/updateAccount).   **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.AddNotificationAsync(System.String,System.String,IO.Swagger.Model.Body4)">
            <summary>
            Create a new notification Create a new notification for a [resource](#section/Identifying-Resources) in your account. Notifications can be sent via email or webhook;  - To enable email, pass an array of email addresses to the `recipients` parameter of this call.  - To enable webhooks, setup the webhook callback URL in your account settings via [PATCH /account](#operation/updateAccount).   **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.AddNotificationAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body4)">
            <summary>
            Create a new notification Create a new notification for a [resource](#section/Identifying-Resources) in your account. Notifications can be sent via email or webhook;  - To enable email, pass an array of email addresses to the `recipients` parameter of this call.  - To enable webhooks, setup the webhook callback URL in your account settings via [PATCH /account](#operation/updateAccount).   **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (NotificationResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.DeleteNotificationById(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a notification Deletes a notification. Note that deleting a notification _only_ deletes the notification &amp;ndash; it does not delete any underlying files or folders.  **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only delete notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.DeleteNotificationByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a notification Deletes a notification. Note that deleting a notification _only_ deletes the notification &amp;ndash; it does not delete any underlying files or folders.  **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only delete notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.DeleteNotificationByIdAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a notification Deletes a notification. Note that deleting a notification _only_ deletes the notification &amp;ndash; it does not delete any underlying files or folders.  **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only delete notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.DeleteNotificationByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Delete a notification Deletes a notification. Note that deleting a notification _only_ deletes the notification &amp;ndash; it does not delete any underlying files or folders.  **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only delete notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.GetNotificationById(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get notification details Get the details for a notification with a specific ID number. You'll be able to review its path, triggers and who's getting the notification.   **Notes**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to view the detail for a notification. - You can only retrieve notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="include">Related record types to include in the response. You can include multiple types by separating them with commas. Valid options are **ownerUser**, **resource**, and **share**. (optional)</param>
            <returns>NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.GetNotificationByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get notification details Get the details for a notification with a specific ID number. You'll be able to review its path, triggers and who's getting the notification.   **Notes**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to view the detail for a notification. - You can only retrieve notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="include">Related record types to include in the response. You can include multiple types by separating them with commas. Valid options are **ownerUser**, **resource**, and **share**. (optional)</param>
            <returns>ApiResponse of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.GetNotificationByIdAsync(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get notification details Get the details for a notification with a specific ID number. You'll be able to review its path, triggers and who's getting the notification.   **Notes**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to view the detail for a notification. - You can only retrieve notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="include">Related record types to include in the response. You can include multiple types by separating them with commas. Valid options are **ownerUser**, **resource**, and **share**. (optional)</param>
            <returns>Task of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.GetNotificationByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get notification details Get the details for a notification with a specific ID number. You'll be able to review its path, triggers and who's getting the notification.   **Notes**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to view the detail for a notification. - You can only retrieve notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="include">Related record types to include in the response. You can include multiple types by separating them with commas. Valid options are **ownerUser**, **resource**, and **share**. (optional)</param>
            <returns>Task of ApiResponse (NotificationResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.ListNotifications(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get a list of notifications Get a list of all the [notifications](/docs/account/06-notifications) you have access to. You can use sorting and filtering to limit the returned list.  **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions)
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="type">Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**  If this parameter is not used, only **file** and **folder** type notifications are included in the list. (optional)</param>
            <param name="offset">Starting notification record in the result set. Can be used for pagination. (optional, default to 0)</param>
            <param name="sort">What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  You can chose multiple options for the sort by separating them with commmas, such as \"type,-date\" to sort by type, then most recent. (optional)</param>
            <param name="limit">Number of notification records to return. Can be used for pagination. (optional, default to 25)</param>
            <param name="include">Related records to include in the response. Valid options are **ownerUser**, **resource**, **share** (optional)</param>
            <param name="action">The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all**   **Note** The **all** action matches notifications set to \"all\", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all (optional)</param>
            <returns>NotificationCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.ListNotificationsWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get a list of notifications Get a list of all the [notifications](/docs/account/06-notifications) you have access to. You can use sorting and filtering to limit the returned list.  **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions)
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="type">Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**  If this parameter is not used, only **file** and **folder** type notifications are included in the list. (optional)</param>
            <param name="offset">Starting notification record in the result set. Can be used for pagination. (optional, default to 0)</param>
            <param name="sort">What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  You can chose multiple options for the sort by separating them with commmas, such as \"type,-date\" to sort by type, then most recent. (optional)</param>
            <param name="limit">Number of notification records to return. Can be used for pagination. (optional, default to 25)</param>
            <param name="include">Related records to include in the response. Valid options are **ownerUser**, **resource**, **share** (optional)</param>
            <param name="action">The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all**   **Note** The **all** action matches notifications set to \"all\", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all (optional)</param>
            <returns>ApiResponse of NotificationCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.ListNotificationsAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get a list of notifications Get a list of all the [notifications](/docs/account/06-notifications) you have access to. You can use sorting and filtering to limit the returned list.  **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions)
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="type">Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**  If this parameter is not used, only **file** and **folder** type notifications are included in the list. (optional)</param>
            <param name="offset">Starting notification record in the result set. Can be used for pagination. (optional, default to 0)</param>
            <param name="sort">What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  You can chose multiple options for the sort by separating them with commmas, such as \"type,-date\" to sort by type, then most recent. (optional)</param>
            <param name="limit">Number of notification records to return. Can be used for pagination. (optional, default to 25)</param>
            <param name="include">Related records to include in the response. Valid options are **ownerUser**, **resource**, **share** (optional)</param>
            <param name="action">The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all**   **Note** The **all** action matches notifications set to \"all\", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all (optional)</param>
            <returns>Task of NotificationCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.ListNotificationsAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get a list of notifications Get a list of all the [notifications](/docs/account/06-notifications) you have access to. You can use sorting and filtering to limit the returned list.  **Notes:**   - Authenticated user should have [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions)
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="type">Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**  If this parameter is not used, only **file** and **folder** type notifications are included in the list. (optional)</param>
            <param name="offset">Starting notification record in the result set. Can be used for pagination. (optional, default to 0)</param>
            <param name="sort">What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  You can chose multiple options for the sort by separating them with commmas, such as \"type,-date\" to sort by type, then most recent. (optional)</param>
            <param name="limit">Number of notification records to return. Can be used for pagination. (optional, default to 25)</param>
            <param name="include">Related records to include in the response. Valid options are **ownerUser**, **resource**, **share** (optional)</param>
            <param name="action">The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all**   **Note** The **all** action matches notifications set to \"all\", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all (optional)</param>
            <returns>Task of ApiResponse (NotificationCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.UpdateNotificationById(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body3)">
            <summary>
            Update a notification Update an existing notification. You can add additional emails or change the action or users that cause a notification to trigger.   When updating recipient emails, make sure your `recipients` parameter contains the full list of people who should be included on the notification. If you resend the list without an existing recipient, they will be deleted from the notification emails.   **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only change notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="body"> (optional)</param>
            <returns>NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.UpdateNotificationByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body3)">
            <summary>
            Update a notification Update an existing notification. You can add additional emails or change the action or users that cause a notification to trigger.   When updating recipient emails, make sure your `recipients` parameter contains the full list of people who should be included on the notification. If you resend the list without an existing recipient, they will be deleted from the notification emails.   **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only change notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.UpdateNotificationByIdAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body3)">
            <summary>
            Update a notification Update an existing notification. You can add additional emails or change the action or users that cause a notification to trigger.   When updating recipient emails, make sure your `recipients` parameter contains the full list of people who should be included on the notification. If you resend the list without an existing recipient, they will be deleted from the notification emails.   **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only change notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="body"> (optional)</param>
            <returns>Task of NotificationResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.NotificationsApi.UpdateNotificationByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body3)">
            <summary>
            Update a notification Update an existing notification. You can add additional emails or change the action or users that cause a notification to trigger.   When updating recipient emails, make sure your `recipients` parameter contains the full list of people who should be included on the notification. If you resend the list without an existing recipient, they will be deleted from the notification emails.   **Notes:**  - You need to have the [notifications permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to update a notification. - You can only change notifications owned by your user account.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the notification. Use [GET /notifications](#operation/listNotifications) if you need to lookup an ID.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (NotificationResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.NotificationsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.NotificationsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IRecipientsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IRecipientsApi.ResendInvitationsForShare(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body18)">
            <summary>
            Resend invitations to share recipients
            </summary>
            <remarks>
            Resend invitations to one or all recipients attached to specified share. The most recent message that was sent for the share will be re-used for this email.  You can use [GET /shares/{id}](#operation/getShareById) to view the recipient list and message history for a share. Use [PATCH /shares/{id}](#operation/updateShareById) to add or remove recipients.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="shareId">ID of the share to resend invites for.</param>
            <param name="body"> (optional)</param>
            <returns>ShareRecipientsResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRecipientsApi.ResendInvitationsForShareWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body18)">
            <summary>
            Resend invitations to share recipients
            </summary>
            <remarks>
            Resend invitations to one or all recipients attached to specified share. The most recent message that was sent for the share will be re-used for this email.  You can use [GET /shares/{id}](#operation/getShareById) to view the recipient list and message history for a share. Use [PATCH /shares/{id}](#operation/updateShareById) to add or remove recipients.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="shareId">ID of the share to resend invites for.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ShareRecipientsResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRecipientsApi.ResendInvitationsForShareAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body18)">
            <summary>
            Resend invitations to share recipients
            </summary>
            <remarks>
            Resend invitations to one or all recipients attached to specified share. The most recent message that was sent for the share will be re-used for this email.  You can use [GET /shares/{id}](#operation/getShareById) to view the recipient list and message history for a share. Use [PATCH /shares/{id}](#operation/updateShareById) to add or remove recipients.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="shareId">ID of the share to resend invites for.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ShareRecipientsResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IRecipientsApi.ResendInvitationsForShareAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body18)">
            <summary>
            Resend invitations to share recipients
            </summary>
            <remarks>
            Resend invitations to one or all recipients attached to specified share. The most recent message that was sent for the share will be re-used for this email.  You can use [GET /shares/{id}](#operation/getShareById) to view the recipient list and message history for a share. Use [PATCH /shares/{id}](#operation/updateShareById) to add or remove recipients.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="shareId">ID of the share to resend invites for.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ShareRecipientsResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.RecipientsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.RecipientsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.RecipientsApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.RecipientsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.ResendInvitationsForShare(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body18)">
            <summary>
            Resend invitations to share recipients Resend invitations to one or all recipients attached to specified share. The most recent message that was sent for the share will be re-used for this email.  You can use [GET /shares/{id}](#operation/getShareById) to view the recipient list and message history for a share. Use [PATCH /shares/{id}](#operation/updateShareById) to add or remove recipients.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="shareId">ID of the share to resend invites for.</param>
            <param name="body"> (optional)</param>
            <returns>ShareRecipientsResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.ResendInvitationsForShareWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body18)">
            <summary>
            Resend invitations to share recipients Resend invitations to one or all recipients attached to specified share. The most recent message that was sent for the share will be re-used for this email.  You can use [GET /shares/{id}](#operation/getShareById) to view the recipient list and message history for a share. Use [PATCH /shares/{id}](#operation/updateShareById) to add or remove recipients.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="shareId">ID of the share to resend invites for.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ShareRecipientsResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.ResendInvitationsForShareAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body18)">
            <summary>
            Resend invitations to share recipients Resend invitations to one or all recipients attached to specified share. The most recent message that was sent for the share will be re-used for this email.  You can use [GET /shares/{id}](#operation/getShareById) to view the recipient list and message history for a share. Use [PATCH /shares/{id}](#operation/updateShareById) to add or remove recipients.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="shareId">ID of the share to resend invites for.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ShareRecipientsResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.RecipientsApi.ResendInvitationsForShareAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body18)">
            <summary>
            Resend invitations to share recipients Resend invitations to one or all recipients attached to specified share. The most recent message that was sent for the share will be re-used for this email.  You can use [GET /shares/{id}](#operation/getShareById) to view the recipient list and message history for a share. Use [PATCH /shares/{id}](#operation/updateShareById) to add or remove recipients.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="shareId">ID of the share to resend invites for.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ShareRecipientsResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.RecipientsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.RecipientsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IResourcesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.AddFolder(System.String,System.String,IO.Swagger.Model.Body8)">
            <summary>
            Create a folder
            </summary>
            <remarks>
            Create a new empty folder at the specified path. New files can be uploaded via the [/resources/upload](#operation/uploadFile) endpoint.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.AddFolderWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body8)">
            <summary>
            Create a folder
            </summary>
            <remarks>
            Create a new empty folder at the specified path. New files can be uploaded via the [/resources/upload](#operation/uploadFile) endpoint.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.CompressFiles(System.String,System.String,IO.Swagger.Model.Body10)">
            <summary>
            Compress resources
            </summary>
            <remarks>
            Create a zip archive containing the files from given set of paths. Note that this can be a very slow operation if you have indicated many files should be included in the archive.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.CompressFilesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body10)">
            <summary>
            Compress resources
            </summary>
            <remarks>
            Create a zip archive containing the files from given set of paths. Note that this can be a very slow operation if you have indicated many files should be included in the archive.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.CopyResources(System.String,System.String,IO.Swagger.Model.Body12)">
            <summary>
            Copy resources
            </summary>
            <remarks>
            Copies a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be copied to the  root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.CopyResourcesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body12)">
            <summary>
            Copy resources
            </summary>
            <remarks>
            Copies a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be copied to the  root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DeleteResourceById(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Delete a Resource
            </summary>
            <remarks>
            Delete a single file or folder resource. Deleting a folder will also delete all of the contents.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - There is no way to un-delete a deleted resource. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DeleteResourceByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Delete a Resource
            </summary>
            <remarks>
            Delete a single file or folder resource. Deleting a folder will also delete all of the contents.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - There is no way to un-delete a deleted resource. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DeleteResources(System.String,System.String,IO.Swagger.Model.Body9)">
            <summary>
            Delete Resources
            </summary>
            <remarks>
            Delete multiple file or folder resourcess. Deleting a folder resource will also delete any resources in that folder.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - It is not possible to un-delete a deleted resource. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="body"> (optional)</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DeleteResourcesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body9)">
            <summary>
            Delete Resources
            </summary>
            <remarks>
            Delete multiple file or folder resourcess. Deleting a folder resource will also delete any resources in that folder.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - It is not possible to un-delete a deleted resource. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.Download(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Download a file
            </summary>
            <remarks>
            Downloads a file. If more than one path is supplied, the files will be zipped before downloading with the downloadName parameter if supplied. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resources">Path of file or folder to be downloaded, starting from the root. Can also be an array of paths.</param>
            <param name="downloadName">If zipping multiple files, the name of the zip file to create and download. (optional)</param>
            <param name="polling">Used when downloading multiple files so url will be pulled till zip file is created. (optional)</param>
            <param name="pollingZipName">Reference to the previously created zip for polling operation. (optional)</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DownloadWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Download a file
            </summary>
            <remarks>
            Downloads a file. If more than one path is supplied, the files will be zipped before downloading with the downloadName parameter if supplied. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resources">Path of file or folder to be downloaded, starting from the root. Can also be an array of paths.</param>
            <param name="downloadName">If zipping multiple files, the name of the zip file to create and download. (optional)</param>
            <param name="polling">Used when downloading multiple files so url will be pulled till zip file is created. (optional)</param>
            <param name="pollingZipName">Reference to the previously created zip for polling operation. (optional)</param>
            <returns>ApiResponse of byte[]</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ExtractFiles(System.String,System.String,IO.Swagger.Model.Body11)">
            <summary>
            Extract resources
            </summary>
            <remarks>
            Extract the contents of a zip archive to a specified directory. Note that this can be a very slow operation.  **Notes:** - You must have  [modify permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to do this. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ExtractFilesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body11)">
            <summary>
            Extract resources
            </summary>
            <remarks>
            Extract the contents of a zip archive to a specified directory. Note that this can be a very slow operation.  **Notes:** - You must have  [modify permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to do this. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetPreviewImage(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Preview a file
            </summary>
            <remarks>
            Returns a resized image of the specified document for supported file types.  Image data returned is encoded in base64 format and can be viewed using the `&lt;img&gt;` element.   ```&lt;img src='data:image/jpeg;base64' + meta.image/&gt;```  **Notes:** - Supported files types are `'jpg'`, `'jpeg'`, `'gif'`, `'png'`, `'bmp'`, `'pdf'`, `'psd'`, `'doc'` 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="resource">Resource identifier for the image file.</param>
            <param name="size">The size of the image.</param>
            <param name="width">Overrides sizes. Sets to a specific width. (optional)</param>
            <param name="height">Overrides sizes. Sets to a specific height. (optional)</param>
            <param name="page">Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files. (optional, default to 0)</param>
            <returns>PreviewFileResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetPreviewImageWithHttpInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Preview a file
            </summary>
            <remarks>
            Returns a resized image of the specified document for supported file types.  Image data returned is encoded in base64 format and can be viewed using the `&lt;img&gt;` element.   ```&lt;img src='data:image/jpeg;base64' + meta.image/&gt;```  **Notes:** - Supported files types are `'jpg'`, `'jpeg'`, `'gif'`, `'png'`, `'bmp'`, `'pdf'`, `'psd'`, `'doc'` 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="resource">Resource identifier for the image file.</param>
            <param name="size">The size of the image.</param>
            <param name="width">Overrides sizes. Sets to a specific width. (optional)</param>
            <param name="height">Overrides sizes. Sets to a specific height. (optional)</param>
            <param name="page">Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files. (optional, default to 0)</param>
            <returns>ApiResponse of PreviewFileResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetResourceInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Properties
            </summary>
            <remarks>
            Returns details for specified file/folder id or hash, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier of the file or folder to get metadata for.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetResourceInfoWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Properties
            </summary>
            <remarks>
            Returns details for specified file/folder id or hash, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier of the file or folder to get metadata for.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetResourceInfoById(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get resource metadata
            </summary>
            <remarks>
            Returns metadata for specified file/folder path, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetResourceInfoByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get resource metadata
            </summary>
            <remarks>
            Returns metadata for specified file/folder path, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ListResourceContents(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List contents of folder
            </summary>
            <remarks>
            Returns a list of files/folders for the parent resource ID.   You can use this API call to get information about all files and folders at a specified path. By default, the API returns basic metadata on each file/folder. An optional `include` parameter forces the return of additional metadata. As with all API calls, the path should be the full path relative to the user's home directory (e.g. **_/myfiles/some_folder**).  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the parent resource to get a list of resources for.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ListResourceContentsWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List contents of folder
            </summary>
            <remarks>
            Returns a list of files/folders for the parent resource ID.   You can use this API call to get information about all files and folders at a specified path. By default, the API returns basic metadata on each file/folder. An optional `include` parameter forces the return of additional metadata. As with all API calls, the path should be the full path relative to the user's home directory (e.g. **_/myfiles/some_folder**).  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the parent resource to get a list of resources for.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>ApiResponse of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ListResources(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of all resources
            </summary>
            <remarks>
            Returns a list of files and folders in the account. Use the `resource` query parameter to indicate the folder you wish to search in (which can be /).   **Searching for Files and Folders**  Using the `name` parameter triggers search mode, which will search the entire directory structure under the provided `resource` for files or folders with names matching the provided `name`. This supports wildcard matching such as:  - \\*Report\\* would find any files or folders with \"Report\" in the name. - Data\\_202?-09-30.xlsx would match items such as \"Data\\_2020-09-30.xlsx\", \"DATA\\_2021-09-30.xlsx\", \"data\\_2022-09-30.xlsx\" etc. - sales\\* would find any files or folders starting with the word \"Sales\" - \\*.csv would locate any files ending in \".csv\" - \\* matches everything within the directory tree starting at your given `resource`  The search is not case-sensitive. Searching for Clients\\* or clients\\* or CLIENTS\\*, etc. will provide identical results  You cannot use the `type` parameter if you are using the `name` parameter to run a search.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier to get resources for. Can be path/id/name.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset` parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. This is ignored if you are using the name parameter to trigger a search. (optional)</param>
            <param name="name">Text to match resource names. This allows you to filter the results returned. For example, to locate only zip archive files, you can enter `*zip` and only resources ending in \"zip\" will be included in the list of results. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ListResourcesWithHttpInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of all resources
            </summary>
            <remarks>
            Returns a list of files and folders in the account. Use the `resource` query parameter to indicate the folder you wish to search in (which can be /).   **Searching for Files and Folders**  Using the `name` parameter triggers search mode, which will search the entire directory structure under the provided `resource` for files or folders with names matching the provided `name`. This supports wildcard matching such as:  - \\*Report\\* would find any files or folders with \"Report\" in the name. - Data\\_202?-09-30.xlsx would match items such as \"Data\\_2020-09-30.xlsx\", \"DATA\\_2021-09-30.xlsx\", \"data\\_2022-09-30.xlsx\" etc. - sales\\* would find any files or folders starting with the word \"Sales\" - \\*.csv would locate any files ending in \".csv\" - \\* matches everything within the directory tree starting at your given `resource`  The search is not case-sensitive. Searching for Clients\\* or clients\\* or CLIENTS\\*, etc. will provide identical results  You cannot use the `type` parameter if you are using the `name` parameter to run a search.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier to get resources for. Can be path/id/name.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset` parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. This is ignored if you are using the name parameter to trigger a search. (optional)</param>
            <param name="name">Text to match resource names. This allows you to filter the results returned. For example, to locate only zip archive files, you can enter `*zip` and only resources ending in \"zip\" will be included in the list of results. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>ApiResponse of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.MoveResources(System.String,System.String,IO.Swagger.Model.Body13)">
            <summary>
            Move resources
            </summary>
            <remarks>
            Moves a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be moved to the root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.MoveResourcesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body13)">
            <summary>
            Move resources
            </summary>
            <remarks>
            Moves a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be moved to the root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.UpdateResourceById(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body7)">
            <summary>
            Rename a resource.
            </summary>
            <remarks>
            Update the specified file or folder resource record's \"name\" parameter. The resource is identified by the numeric resource ID that is passed in as the last segment of the URI. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="id">ID number of the resource</param>
            <param name="body"> (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.UpdateResourceByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body7)">
            <summary>
            Rename a resource.
            </summary>
            <remarks>
            Update the specified file or folder resource record's \"name\" parameter. The resource is identified by the numeric resource ID that is passed in as the last segment of the URI. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="id">ID number of the resource</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.UploadFile(System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Upload a file
            </summary>
            <remarks>
            Uploads a file to a specified path, with optional support for resuming a partially uploaded existing file. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="path">Destination path for the file being uploaded, including the file name.</param>
            <param name="fileSize">File size, in bits, of the file being uploaded.</param>
            <param name="_file"> (optional)</param>
            <param name="offsetBytes">Allows a file upload to resume at a certain number of bytes. (optional)</param>
            <param name="resume">True if upload resume is supported, false if it isn't.  (optional, default to true)</param>
            <param name="allowOverwrite">True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated.  (optional, default to false)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.UploadFileWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Upload a file
            </summary>
            <remarks>
            Uploads a file to a specified path, with optional support for resuming a partially uploaded existing file. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="path">Destination path for the file being uploaded, including the file name.</param>
            <param name="fileSize">File size, in bits, of the file being uploaded.</param>
            <param name="_file"> (optional)</param>
            <param name="offsetBytes">Allows a file upload to resume at a certain number of bytes. (optional)</param>
            <param name="resume">True if upload resume is supported, false if it isn't.  (optional, default to true)</param>
            <param name="allowOverwrite">True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated.  (optional, default to false)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.AddFolderAsync(System.String,System.String,IO.Swagger.Model.Body8)">
            <summary>
            Create a folder
            </summary>
            <remarks>
            Create a new empty folder at the specified path. New files can be uploaded via the [/resources/upload](#operation/uploadFile) endpoint.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.AddFolderAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body8)">
            <summary>
            Create a folder
            </summary>
            <remarks>
            Create a new empty folder at the specified path. New files can be uploaded via the [/resources/upload](#operation/uploadFile) endpoint.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.CompressFilesAsync(System.String,System.String,IO.Swagger.Model.Body10)">
            <summary>
            Compress resources
            </summary>
            <remarks>
            Create a zip archive containing the files from given set of paths. Note that this can be a very slow operation if you have indicated many files should be included in the archive.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.CompressFilesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body10)">
            <summary>
            Compress resources
            </summary>
            <remarks>
            Create a zip archive containing the files from given set of paths. Note that this can be a very slow operation if you have indicated many files should be included in the archive.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.CopyResourcesAsync(System.String,System.String,IO.Swagger.Model.Body12)">
            <summary>
            Copy resources
            </summary>
            <remarks>
            Copies a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be copied to the  root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.CopyResourcesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body12)">
            <summary>
            Copy resources
            </summary>
            <remarks>
            Copies a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be copied to the  root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceCopyMove)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DeleteResourceByIdAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Delete a Resource
            </summary>
            <remarks>
            Delete a single file or folder resource. Deleting a folder will also delete all of the contents.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - There is no way to un-delete a deleted resource. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DeleteResourceByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Delete a Resource
            </summary>
            <remarks>
            Delete a single file or folder resource. Deleting a folder will also delete all of the contents.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - There is no way to un-delete a deleted resource. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DeleteResourcesAsync(System.String,System.String,IO.Swagger.Model.Body9)">
            <summary>
            Delete Resources
            </summary>
            <remarks>
            Delete multiple file or folder resourcess. Deleting a folder resource will also delete any resources in that folder.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - It is not possible to un-delete a deleted resource. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="body"> (optional)</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DeleteResourcesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body9)">
            <summary>
            Delete Resources
            </summary>
            <remarks>
            Delete multiple file or folder resourcess. Deleting a folder resource will also delete any resources in that folder.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - It is not possible to un-delete a deleted resource. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DownloadAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Download a file
            </summary>
            <remarks>
            Downloads a file. If more than one path is supplied, the files will be zipped before downloading with the downloadName parameter if supplied. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resources">Path of file or folder to be downloaded, starting from the root. Can also be an array of paths.</param>
            <param name="downloadName">If zipping multiple files, the name of the zip file to create and download. (optional)</param>
            <param name="polling">Used when downloading multiple files so url will be pulled till zip file is created. (optional)</param>
            <param name="pollingZipName">Reference to the previously created zip for polling operation. (optional)</param>
            <returns>Task of byte[]</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.DownloadAsyncWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Download a file
            </summary>
            <remarks>
            Downloads a file. If more than one path is supplied, the files will be zipped before downloading with the downloadName parameter if supplied. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resources">Path of file or folder to be downloaded, starting from the root. Can also be an array of paths.</param>
            <param name="downloadName">If zipping multiple files, the name of the zip file to create and download. (optional)</param>
            <param name="polling">Used when downloading multiple files so url will be pulled till zip file is created. (optional)</param>
            <param name="pollingZipName">Reference to the previously created zip for polling operation. (optional)</param>
            <returns>Task of ApiResponse (byte[])</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ExtractFilesAsync(System.String,System.String,IO.Swagger.Model.Body11)">
            <summary>
            Extract resources
            </summary>
            <remarks>
            Extract the contents of a zip archive to a specified directory. Note that this can be a very slow operation.  **Notes:** - You must have  [modify permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to do this. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ExtractFilesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body11)">
            <summary>
            Extract resources
            </summary>
            <remarks>
            Extract the contents of a zip archive to a specified directory. Note that this can be a very slow operation.  **Notes:** - You must have  [modify permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to do this. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetPreviewImageAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Preview a file
            </summary>
            <remarks>
            Returns a resized image of the specified document for supported file types.  Image data returned is encoded in base64 format and can be viewed using the `&lt;img&gt;` element.   ```&lt;img src='data:image/jpeg;base64' + meta.image/&gt;```  **Notes:** - Supported files types are `'jpg'`, `'jpeg'`, `'gif'`, `'png'`, `'bmp'`, `'pdf'`, `'psd'`, `'doc'` 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="resource">Resource identifier for the image file.</param>
            <param name="size">The size of the image.</param>
            <param name="width">Overrides sizes. Sets to a specific width. (optional)</param>
            <param name="height">Overrides sizes. Sets to a specific height. (optional)</param>
            <param name="page">Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files. (optional, default to 0)</param>
            <returns>Task of PreviewFileResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetPreviewImageAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Preview a file
            </summary>
            <remarks>
            Returns a resized image of the specified document for supported file types.  Image data returned is encoded in base64 format and can be viewed using the `&lt;img&gt;` element.   ```&lt;img src='data:image/jpeg;base64' + meta.image/&gt;```  **Notes:** - Supported files types are `'jpg'`, `'jpeg'`, `'gif'`, `'png'`, `'bmp'`, `'pdf'`, `'psd'`, `'doc'` 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="resource">Resource identifier for the image file.</param>
            <param name="size">The size of the image.</param>
            <param name="width">Overrides sizes. Sets to a specific width. (optional)</param>
            <param name="height">Overrides sizes. Sets to a specific height. (optional)</param>
            <param name="page">Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files. (optional, default to 0)</param>
            <returns>Task of ApiResponse (PreviewFileResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetResourceInfoAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Properties
            </summary>
            <remarks>
            Returns details for specified file/folder id or hash, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier of the file or folder to get metadata for.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetResourceInfoAsyncWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Properties
            </summary>
            <remarks>
            Returns details for specified file/folder id or hash, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier of the file or folder to get metadata for.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetResourceInfoByIdAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get resource metadata
            </summary>
            <remarks>
            Returns metadata for specified file/folder path, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.GetResourceInfoByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get resource metadata
            </summary>
            <remarks>
            Returns metadata for specified file/folder path, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ListResourceContentsAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List contents of folder
            </summary>
            <remarks>
            Returns a list of files/folders for the parent resource ID.   You can use this API call to get information about all files and folders at a specified path. By default, the API returns basic metadata on each file/folder. An optional `include` parameter forces the return of additional metadata. As with all API calls, the path should be the full path relative to the user's home directory (e.g. **_/myfiles/some_folder**).  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the parent resource to get a list of resources for.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>Task of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ListResourceContentsAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List contents of folder
            </summary>
            <remarks>
            Returns a list of files/folders for the parent resource ID.   You can use this API call to get information about all files and folders at a specified path. By default, the API returns basic metadata on each file/folder. An optional `include` parameter forces the return of additional metadata. As with all API calls, the path should be the full path relative to the user's home directory (e.g. **_/myfiles/some_folder**).  **Notes:** - Authenticated user should have list permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the parent resource to get a list of resources for.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>Task of ApiResponse (ResourceCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ListResourcesAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of all resources
            </summary>
            <remarks>
            Returns a list of files and folders in the account. Use the `resource` query parameter to indicate the folder you wish to search in (which can be /).   **Searching for Files and Folders**  Using the `name` parameter triggers search mode, which will search the entire directory structure under the provided `resource` for files or folders with names matching the provided `name`. This supports wildcard matching such as:  - \\*Report\\* would find any files or folders with \"Report\" in the name. - Data\\_202?-09-30.xlsx would match items such as \"Data\\_2020-09-30.xlsx\", \"DATA\\_2021-09-30.xlsx\", \"data\\_2022-09-30.xlsx\" etc. - sales\\* would find any files or folders starting with the word \"Sales\" - \\*.csv would locate any files ending in \".csv\" - \\* matches everything within the directory tree starting at your given `resource`  The search is not case-sensitive. Searching for Clients\\* or clients\\* or CLIENTS\\*, etc. will provide identical results  You cannot use the `type` parameter if you are using the `name` parameter to run a search.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier to get resources for. Can be path/id/name.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset` parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. This is ignored if you are using the name parameter to trigger a search. (optional)</param>
            <param name="name">Text to match resource names. This allows you to filter the results returned. For example, to locate only zip archive files, you can enter `*zip` and only resources ending in \"zip\" will be included in the list of results. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>Task of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.ListResourcesAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of all resources
            </summary>
            <remarks>
            Returns a list of files and folders in the account. Use the `resource` query parameter to indicate the folder you wish to search in (which can be /).   **Searching for Files and Folders**  Using the `name` parameter triggers search mode, which will search the entire directory structure under the provided `resource` for files or folders with names matching the provided `name`. This supports wildcard matching such as:  - \\*Report\\* would find any files or folders with \"Report\" in the name. - Data\\_202?-09-30.xlsx would match items such as \"Data\\_2020-09-30.xlsx\", \"DATA\\_2021-09-30.xlsx\", \"data\\_2022-09-30.xlsx\" etc. - sales\\* would find any files or folders starting with the word \"Sales\" - \\*.csv would locate any files ending in \".csv\" - \\* matches everything within the directory tree starting at your given `resource`  The search is not case-sensitive. Searching for Clients\\* or clients\\* or CLIENTS\\*, etc. will provide identical results  You cannot use the `type` parameter if you are using the `name` parameter to run a search.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier to get resources for. Can be path/id/name.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset` parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. This is ignored if you are using the name parameter to trigger a search. (optional)</param>
            <param name="name">Text to match resource names. This allows you to filter the results returned. For example, to locate only zip archive files, you can enter `*zip` and only resources ending in \"zip\" will be included in the list of results. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>Task of ApiResponse (ResourceCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.MoveResourcesAsync(System.String,System.String,IO.Swagger.Model.Body13)">
            <summary>
            Move resources
            </summary>
            <remarks>
            Moves a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be moved to the root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.MoveResourcesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body13)">
            <summary>
            Move resources
            </summary>
            <remarks>
            Moves a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be moved to the root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceCopyMove)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.UpdateResourceByIdAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body7)">
            <summary>
            Rename a resource.
            </summary>
            <remarks>
            Update the specified file or folder resource record's \"name\" parameter. The resource is identified by the numeric resource ID that is passed in as the last segment of the URI. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="id">ID number of the resource</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.UpdateResourceByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body7)">
            <summary>
            Rename a resource.
            </summary>
            <remarks>
            Update the specified file or folder resource record's \"name\" parameter. The resource is identified by the numeric resource ID that is passed in as the last segment of the URI. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="id">ID number of the resource</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.UploadFileAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Upload a file
            </summary>
            <remarks>
            Uploads a file to a specified path, with optional support for resuming a partially uploaded existing file. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="path">Destination path for the file being uploaded, including the file name.</param>
            <param name="fileSize">File size, in bits, of the file being uploaded.</param>
            <param name="_file"> (optional)</param>
            <param name="offsetBytes">Allows a file upload to resume at a certain number of bytes. (optional)</param>
            <param name="resume">True if upload resume is supported, false if it isn't.  (optional, default to true)</param>
            <param name="allowOverwrite">True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated.  (optional, default to false)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IResourcesApi.UploadFileAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Upload a file
            </summary>
            <remarks>
            Uploads a file to a specified path, with optional support for resuming a partially uploaded existing file. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="path">Destination path for the file being uploaded, including the file name.</param>
            <param name="fileSize">File size, in bits, of the file being uploaded.</param>
            <param name="_file"> (optional)</param>
            <param name="offsetBytes">Allows a file upload to resume at a certain number of bytes. (optional)</param>
            <param name="resume">True if upload resume is supported, false if it isn't.  (optional, default to true)</param>
            <param name="allowOverwrite">True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated.  (optional, default to false)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.ResourcesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ResourcesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ResourcesApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.ResourcesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.AddFolder(System.String,System.String,IO.Swagger.Model.Body8)">
            <summary>
            Create a folder Create a new empty folder at the specified path. New files can be uploaded via the [/resources/upload](#operation/uploadFile) endpoint.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.AddFolderWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body8)">
            <summary>
            Create a folder Create a new empty folder at the specified path. New files can be uploaded via the [/resources/upload](#operation/uploadFile) endpoint.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.AddFolderAsync(System.String,System.String,IO.Swagger.Model.Body8)">
            <summary>
            Create a folder Create a new empty folder at the specified path. New files can be uploaded via the [/resources/upload](#operation/uploadFile) endpoint.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.AddFolderAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body8)">
            <summary>
            Create a folder Create a new empty folder at the specified path. New files can be uploaded via the [/resources/upload](#operation/uploadFile) endpoint.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.CompressFiles(System.String,System.String,IO.Swagger.Model.Body10)">
            <summary>
            Compress resources Create a zip archive containing the files from given set of paths. Note that this can be a very slow operation if you have indicated many files should be included in the archive.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.CompressFilesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body10)">
            <summary>
            Compress resources Create a zip archive containing the files from given set of paths. Note that this can be a very slow operation if you have indicated many files should be included in the archive.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.CompressFilesAsync(System.String,System.String,IO.Swagger.Model.Body10)">
            <summary>
            Compress resources Create a zip archive containing the files from given set of paths. Note that this can be a very slow operation if you have indicated many files should be included in the archive.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.CompressFilesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body10)">
            <summary>
            Compress resources Create a zip archive containing the files from given set of paths. Note that this can be a very slow operation if you have indicated many files should be included in the archive.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.CopyResources(System.String,System.String,IO.Swagger.Model.Body12)">
            <summary>
            Copy resources Copies a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be copied to the  root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.CopyResourcesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body12)">
            <summary>
            Copy resources Copies a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be copied to the  root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.CopyResourcesAsync(System.String,System.String,IO.Swagger.Model.Body12)">
            <summary>
            Copy resources Copies a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be copied to the  root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.CopyResourcesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body12)">
            <summary>
            Copy resources Copies a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be copied to the  root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceCopyMove)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DeleteResourceById(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Delete a Resource Delete a single file or folder resource. Deleting a folder will also delete all of the contents.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - There is no way to un-delete a deleted resource. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DeleteResourceByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Delete a Resource Delete a single file or folder resource. Deleting a folder will also delete all of the contents.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - There is no way to un-delete a deleted resource. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DeleteResourceByIdAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Delete a Resource Delete a single file or folder resource. Deleting a folder will also delete all of the contents.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - There is no way to un-delete a deleted resource. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DeleteResourceByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Delete a Resource Delete a single file or folder resource. Deleting a folder will also delete all of the contents.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - There is no way to un-delete a deleted resource. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DeleteResources(System.String,System.String,IO.Swagger.Model.Body9)">
            <summary>
            Delete Resources Delete multiple file or folder resourcess. Deleting a folder resource will also delete any resources in that folder.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - It is not possible to un-delete a deleted resource. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="body"> (optional)</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DeleteResourcesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body9)">
            <summary>
            Delete Resources Delete multiple file or folder resourcess. Deleting a folder resource will also delete any resources in that folder.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - It is not possible to un-delete a deleted resource. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DeleteResourcesAsync(System.String,System.String,IO.Swagger.Model.Body9)">
            <summary>
            Delete Resources Delete multiple file or folder resourcess. Deleting a folder resource will also delete any resources in that folder.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - It is not possible to un-delete a deleted resource. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="body"> (optional)</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DeleteResourcesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body9)">
            <summary>
            Delete Resources Delete multiple file or folder resourcess. Deleting a folder resource will also delete any resources in that folder.  **Notes:** - Authenticated user should have [delete permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - It is not possible to un-delete a deleted resource. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.Download(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Download a file Downloads a file. If more than one path is supplied, the files will be zipped before downloading with the downloadName parameter if supplied. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resources">Path of file or folder to be downloaded, starting from the root. Can also be an array of paths.</param>
            <param name="downloadName">If zipping multiple files, the name of the zip file to create and download. (optional)</param>
            <param name="polling">Used when downloading multiple files so url will be pulled till zip file is created. (optional)</param>
            <param name="pollingZipName">Reference to the previously created zip for polling operation. (optional)</param>
            <returns>byte[]</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DownloadWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Download a file Downloads a file. If more than one path is supplied, the files will be zipped before downloading with the downloadName parameter if supplied. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resources">Path of file or folder to be downloaded, starting from the root. Can also be an array of paths.</param>
            <param name="downloadName">If zipping multiple files, the name of the zip file to create and download. (optional)</param>
            <param name="polling">Used when downloading multiple files so url will be pulled till zip file is created. (optional)</param>
            <param name="pollingZipName">Reference to the previously created zip for polling operation. (optional)</param>
            <returns>ApiResponse of byte[]</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DownloadAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Download a file Downloads a file. If more than one path is supplied, the files will be zipped before downloading with the downloadName parameter if supplied. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resources">Path of file or folder to be downloaded, starting from the root. Can also be an array of paths.</param>
            <param name="downloadName">If zipping multiple files, the name of the zip file to create and download. (optional)</param>
            <param name="polling">Used when downloading multiple files so url will be pulled till zip file is created. (optional)</param>
            <param name="pollingZipName">Reference to the previously created zip for polling operation. (optional)</param>
            <returns>Task of byte[]</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.DownloadAsyncWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Download a file Downloads a file. If more than one path is supplied, the files will be zipped before downloading with the downloadName parameter if supplied. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resources">Path of file or folder to be downloaded, starting from the root. Can also be an array of paths.</param>
            <param name="downloadName">If zipping multiple files, the name of the zip file to create and download. (optional)</param>
            <param name="polling">Used when downloading multiple files so url will be pulled till zip file is created. (optional)</param>
            <param name="pollingZipName">Reference to the previously created zip for polling operation. (optional)</param>
            <returns>Task of ApiResponse (byte[])</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ExtractFiles(System.String,System.String,IO.Swagger.Model.Body11)">
            <summary>
            Extract resources Extract the contents of a zip archive to a specified directory. Note that this can be a very slow operation.  **Notes:** - You must have  [modify permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to do this. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ExtractFilesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body11)">
            <summary>
            Extract resources Extract the contents of a zip archive to a specified directory. Note that this can be a very slow operation.  **Notes:** - You must have  [modify permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to do this. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ExtractFilesAsync(System.String,System.String,IO.Swagger.Model.Body11)">
            <summary>
            Extract resources Extract the contents of a zip archive to a specified directory. Note that this can be a very slow operation.  **Notes:** - You must have  [modify permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to do this. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ExtractFilesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body11)">
            <summary>
            Extract resources Extract the contents of a zip archive to a specified directory. Note that this can be a very slow operation.  **Notes:** - You must have  [modify permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to do this. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetPreviewImage(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Preview a file Returns a resized image of the specified document for supported file types.  Image data returned is encoded in base64 format and can be viewed using the `&lt;img&gt;` element.   ```&lt;img src='data:image/jpeg;base64' + meta.image/&gt;```  **Notes:** - Supported files types are `'jpg'`, `'jpeg'`, `'gif'`, `'png'`, `'bmp'`, `'pdf'`, `'psd'`, `'doc'` 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="resource">Resource identifier for the image file.</param>
            <param name="size">The size of the image.</param>
            <param name="width">Overrides sizes. Sets to a specific width. (optional)</param>
            <param name="height">Overrides sizes. Sets to a specific height. (optional)</param>
            <param name="page">Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files. (optional, default to 0)</param>
            <returns>PreviewFileResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetPreviewImageWithHttpInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Preview a file Returns a resized image of the specified document for supported file types.  Image data returned is encoded in base64 format and can be viewed using the `&lt;img&gt;` element.   ```&lt;img src='data:image/jpeg;base64' + meta.image/&gt;```  **Notes:** - Supported files types are `'jpg'`, `'jpeg'`, `'gif'`, `'png'`, `'bmp'`, `'pdf'`, `'psd'`, `'doc'` 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="resource">Resource identifier for the image file.</param>
            <param name="size">The size of the image.</param>
            <param name="width">Overrides sizes. Sets to a specific width. (optional)</param>
            <param name="height">Overrides sizes. Sets to a specific height. (optional)</param>
            <param name="page">Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files. (optional, default to 0)</param>
            <returns>ApiResponse of PreviewFileResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetPreviewImageAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Preview a file Returns a resized image of the specified document for supported file types.  Image data returned is encoded in base64 format and can be viewed using the `&lt;img&gt;` element.   ```&lt;img src='data:image/jpeg;base64' + meta.image/&gt;```  **Notes:** - Supported files types are `'jpg'`, `'jpeg'`, `'gif'`, `'png'`, `'bmp'`, `'pdf'`, `'psd'`, `'doc'` 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="resource">Resource identifier for the image file.</param>
            <param name="size">The size of the image.</param>
            <param name="width">Overrides sizes. Sets to a specific width. (optional)</param>
            <param name="height">Overrides sizes. Sets to a specific height. (optional)</param>
            <param name="page">Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files. (optional, default to 0)</param>
            <returns>Task of PreviewFileResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetPreviewImageAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Preview a file Returns a resized image of the specified document for supported file types.  Image data returned is encoded in base64 format and can be viewed using the `&lt;img&gt;` element.   ```&lt;img src='data:image/jpeg;base64' + meta.image/&gt;```  **Notes:** - Supported files types are `'jpg'`, `'jpeg'`, `'gif'`, `'png'`, `'bmp'`, `'pdf'`, `'psd'`, `'doc'` 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="resource">Resource identifier for the image file.</param>
            <param name="size">The size of the image.</param>
            <param name="width">Overrides sizes. Sets to a specific width. (optional)</param>
            <param name="height">Overrides sizes. Sets to a specific height. (optional)</param>
            <param name="page">Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files. (optional, default to 0)</param>
            <returns>Task of ApiResponse (PreviewFileResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetResourceInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Properties Returns details for specified file/folder id or hash, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier of the file or folder to get metadata for.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetResourceInfoWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Properties Returns details for specified file/folder id or hash, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier of the file or folder to get metadata for.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetResourceInfoAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Properties Returns details for specified file/folder id or hash, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier of the file or folder to get metadata for.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetResourceInfoAsyncWithHttpInfo(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Properties Returns details for specified file/folder id or hash, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier of the file or folder to get metadata for.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetResourceInfoById(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get resource metadata Returns metadata for specified file/folder path, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetResourceInfoByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get resource metadata Returns metadata for specified file/folder path, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetResourceInfoByIdAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get resource metadata Returns metadata for specified file/folder path, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.GetResourceInfoByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get resource metadata Returns metadata for specified file/folder path, including upload date, size and type. For the full list of returned properties, see the response syntax, below.  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID number of the resource</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ListResourceContents(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List contents of folder Returns a list of files/folders for the parent resource ID.   You can use this API call to get information about all files and folders at a specified path. By default, the API returns basic metadata on each file/folder. An optional `include` parameter forces the return of additional metadata. As with all API calls, the path should be the full path relative to the user's home directory (e.g. **_/myfiles/some_folder**).  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the parent resource to get a list of resources for.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ListResourceContentsWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List contents of folder Returns a list of files/folders for the parent resource ID.   You can use this API call to get information about all files and folders at a specified path. By default, the API returns basic metadata on each file/folder. An optional `include` parameter forces the return of additional metadata. As with all API calls, the path should be the full path relative to the user's home directory (e.g. **_/myfiles/some_folder**).  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the parent resource to get a list of resources for.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>ApiResponse of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ListResourceContentsAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List contents of folder Returns a list of files/folders for the parent resource ID.   You can use this API call to get information about all files and folders at a specified path. By default, the API returns basic metadata on each file/folder. An optional `include` parameter forces the return of additional metadata. As with all API calls, the path should be the full path relative to the user's home directory (e.g. **_/myfiles/some_folder**).  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the parent resource to get a list of resources for.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>Task of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ListResourceContentsAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            List contents of folder Returns a list of files/folders for the parent resource ID.   You can use this API call to get information about all files and folders at a specified path. By default, the API returns basic metadata on each file/folder. An optional `include` parameter forces the return of additional metadata. As with all API calls, the path should be the full path relative to the user's home directory (e.g. **_/myfiles/some_folder**).  **Notes:** - Authenticated user should have list permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call. </param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">ID of the parent resource to get a list of resources for.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerUser**. (optional)</param>
            <returns>Task of ApiResponse (ResourceCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ListResources(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of all resources Returns a list of files and folders in the account. Use the `resource` query parameter to indicate the folder you wish to search in (which can be /).   **Searching for Files and Folders**  Using the `name` parameter triggers search mode, which will search the entire directory structure under the provided `resource` for files or folders with names matching the provided `name`. This supports wildcard matching such as:  - \\*Report\\* would find any files or folders with \"Report\" in the name. - Data\\_202?-09-30.xlsx would match items such as \"Data\\_2020-09-30.xlsx\", \"DATA\\_2021-09-30.xlsx\", \"data\\_2022-09-30.xlsx\" etc. - sales\\* would find any files or folders starting with the word \"Sales\" - \\*.csv would locate any files ending in \".csv\" - \\* matches everything within the directory tree starting at your given `resource`  The search is not case-sensitive. Searching for Clients\\* or clients\\* or CLIENTS\\*, etc. will provide identical results  You cannot use the `type` parameter if you are using the `name` parameter to run a search.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier to get resources for. Can be path/id/name.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset` parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. This is ignored if you are using the name parameter to trigger a search. (optional)</param>
            <param name="name">Text to match resource names. This allows you to filter the results returned. For example, to locate only zip archive files, you can enter `*zip` and only resources ending in \"zip\" will be included in the list of results. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ListResourcesWithHttpInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of all resources Returns a list of files and folders in the account. Use the `resource` query parameter to indicate the folder you wish to search in (which can be /).   **Searching for Files and Folders**  Using the `name` parameter triggers search mode, which will search the entire directory structure under the provided `resource` for files or folders with names matching the provided `name`. This supports wildcard matching such as:  - \\*Report\\* would find any files or folders with \"Report\" in the name. - Data\\_202?-09-30.xlsx would match items such as \"Data\\_2020-09-30.xlsx\", \"DATA\\_2021-09-30.xlsx\", \"data\\_2022-09-30.xlsx\" etc. - sales\\* would find any files or folders starting with the word \"Sales\" - \\*.csv would locate any files ending in \".csv\" - \\* matches everything within the directory tree starting at your given `resource`  The search is not case-sensitive. Searching for Clients\\* or clients\\* or CLIENTS\\*, etc. will provide identical results  You cannot use the `type` parameter if you are using the `name` parameter to run a search.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier to get resources for. Can be path/id/name.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset` parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. This is ignored if you are using the name parameter to trigger a search. (optional)</param>
            <param name="name">Text to match resource names. This allows you to filter the results returned. For example, to locate only zip archive files, you can enter `*zip` and only resources ending in \"zip\" will be included in the list of results. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>ApiResponse of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ListResourcesAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of all resources Returns a list of files and folders in the account. Use the `resource` query parameter to indicate the folder you wish to search in (which can be /).   **Searching for Files and Folders**  Using the `name` parameter triggers search mode, which will search the entire directory structure under the provided `resource` for files or folders with names matching the provided `name`. This supports wildcard matching such as:  - \\*Report\\* would find any files or folders with \"Report\" in the name. - Data\\_202?-09-30.xlsx would match items such as \"Data\\_2020-09-30.xlsx\", \"DATA\\_2021-09-30.xlsx\", \"data\\_2022-09-30.xlsx\" etc. - sales\\* would find any files or folders starting with the word \"Sales\" - \\*.csv would locate any files ending in \".csv\" - \\* matches everything within the directory tree starting at your given `resource`  The search is not case-sensitive. Searching for Clients\\* or clients\\* or CLIENTS\\*, etc. will provide identical results  You cannot use the `type` parameter if you are using the `name` parameter to run a search.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier to get resources for. Can be path/id/name.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset` parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. This is ignored if you are using the name parameter to trigger a search. (optional)</param>
            <param name="name">Text to match resource names. This allows you to filter the results returned. For example, to locate only zip archive files, you can enter `*zip` and only resources ending in \"zip\" will be included in the list of results. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>Task of ResourceCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.ListResourcesAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of all resources Returns a list of files and folders in the account. Use the `resource` query parameter to indicate the folder you wish to search in (which can be /).   **Searching for Files and Folders**  Using the `name` parameter triggers search mode, which will search the entire directory structure under the provided `resource` for files or folders with names matching the provided `name`. This supports wildcard matching such as:  - \\*Report\\* would find any files or folders with \"Report\" in the name. - Data\\_202?-09-30.xlsx would match items such as \"Data\\_2020-09-30.xlsx\", \"DATA\\_2021-09-30.xlsx\", \"data\\_2022-09-30.xlsx\" etc. - sales\\* would find any files or folders starting with the word \"Sales\" - \\*.csv would locate any files ending in \".csv\" - \\* matches everything within the directory tree starting at your given `resource`  The search is not case-sensitive. Searching for Clients\\* or clients\\* or CLIENTS\\*, etc. will provide identical results  You cannot use the `type` parameter if you are using the `name` parameter to run a search.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="resource">Resource identifier to get resources for. Can be path/id/name.</param>
            <param name="sort">Endpoint support multiple sort fields by allowing array of sort params. Sort fields should be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending. (optional)</param>
            <param name="offset">Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list. (optional, default to 0)</param>
            <param name="limit">The number of files to limit the result. Cannot be set higher than 100. If you have more than one hundred files in your directory, make multiple calls, incrementing the `offset` parameter, above. (optional)</param>
            <param name="type">Limit types of resources returned to \"file\" or \"dir\" only. This is ignored if you are using the name parameter to trigger a search. (optional)</param>
            <param name="name">Text to match resource names. This allows you to filter the results returned. For example, to locate only zip archive files, you can enter `*zip` and only resources ending in \"zip\" will be included in the list of results. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **share**, **notifications**, **directFile**, **parentResource**, **ownerUser**, **ownerAccount**. (optional)</param>
            <returns>Task of ApiResponse (ResourceCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.MoveResources(System.String,System.String,IO.Swagger.Model.Body13)">
            <summary>
            Move resources Moves a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be moved to the root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.MoveResourcesWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body13)">
            <summary>
            Move resources Moves a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be moved to the root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.MoveResourcesAsync(System.String,System.String,IO.Swagger.Model.Body13)">
            <summary>
            Move resources Moves a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be moved to the root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceCopyMove</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.MoveResourcesAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body13)">
            <summary>
            Move resources Moves a set of exisiting files/folders (provided by an array `resources`) to the requested `parentResource` in your account. In the `resources` array, you may specify paths pointing files/folders throughout the account, but everything will be moved to the root of the `parentResource`.  **Notes:** - Authenticated user should have modify permission. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceCopyMove)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.UpdateResourceById(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body7)">
            <summary>
            Rename a resource. Update the specified file or folder resource record's \"name\" parameter. The resource is identified by the numeric resource ID that is passed in as the last segment of the URI. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="id">ID number of the resource</param>
            <param name="body"> (optional)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.UpdateResourceByIdWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body7)">
            <summary>
            Rename a resource. Update the specified file or folder resource record's \"name\" parameter. The resource is identified by the numeric resource ID that is passed in as the last segment of the URI. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="id">ID number of the resource</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.UpdateResourceByIdAsync(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body7)">
            <summary>
            Rename a resource. Update the specified file or folder resource record's \"name\" parameter. The resource is identified by the numeric resource ID that is passed in as the last segment of the URI. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="id">ID number of the resource</param>
            <param name="body"> (optional)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.UpdateResourceByIdAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},IO.Swagger.Model.Body7)">
            <summary>
            Rename a resource. Update the specified file or folder resource record's \"name\" parameter. The resource is identified by the numeric resource ID that is passed in as the last segment of the URI. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="id">ID number of the resource</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.UploadFile(System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Upload a file Uploads a file to a specified path, with optional support for resuming a partially uploaded existing file. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="path">Destination path for the file being uploaded, including the file name.</param>
            <param name="fileSize">File size, in bits, of the file being uploaded.</param>
            <param name="_file"> (optional)</param>
            <param name="offsetBytes">Allows a file upload to resume at a certain number of bytes. (optional)</param>
            <param name="resume">True if upload resume is supported, false if it isn't.  (optional, default to true)</param>
            <param name="allowOverwrite">True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated.  (optional, default to false)</param>
            <returns>ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.UploadFileWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Upload a file Uploads a file to a specified path, with optional support for resuming a partially uploaded existing file. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="path">Destination path for the file being uploaded, including the file name.</param>
            <param name="fileSize">File size, in bits, of the file being uploaded.</param>
            <param name="_file"> (optional)</param>
            <param name="offsetBytes">Allows a file upload to resume at a certain number of bytes. (optional)</param>
            <param name="resume">True if upload resume is supported, false if it isn't.  (optional, default to true)</param>
            <param name="allowOverwrite">True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated.  (optional, default to false)</param>
            <returns>ApiResponse of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.UploadFileAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Upload a file Uploads a file to a specified path, with optional support for resuming a partially uploaded existing file. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="path">Destination path for the file being uploaded, including the file name.</param>
            <param name="fileSize">File size, in bits, of the file being uploaded.</param>
            <param name="_file"> (optional)</param>
            <param name="offsetBytes">Allows a file upload to resume at a certain number of bytes. (optional)</param>
            <param name="resume">True if upload resume is supported, false if it isn't.  (optional, default to true)</param>
            <param name="allowOverwrite">True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated.  (optional, default to false)</param>
            <returns>Task of ResourceResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ResourcesApi.UploadFileAsyncWithHttpInfo(System.String,System.String,System.String,System.Nullable{System.Int32},System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Upload a file Uploads a file to a specified path, with optional support for resuming a partially uploaded existing file. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="path">Destination path for the file being uploaded, including the file name.</param>
            <param name="fileSize">File size, in bits, of the file being uploaded.</param>
            <param name="_file"> (optional)</param>
            <param name="offsetBytes">Allows a file upload to resume at a certain number of bytes. (optional)</param>
            <param name="resume">True if upload resume is supported, false if it isn't.  (optional, default to true)</param>
            <param name="allowOverwrite">True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated.  (optional, default to false)</param>
            <returns>Task of ApiResponse (ResourceResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.ResourcesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.ResourcesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.ISharesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.AddShare(System.String,System.String,IO.Swagger.Model.Body16)">
            <summary>
            Creates a share
            </summary>
            <remarks>
            Creates a new share object for the given path in your account. We support three types of shares:    - A **shared folder** allows you to let outside parties access a folder in your account (including any files and nested subfolders) using just a link. Shared folders can be restricted; e.g. with an expiration date, password, download-only, etc. Shared folders are 'live'; if someone makes a change to a file in your shared folder, it will be immediately reflected in your account, and vice-versa.   - A file **send** lets you send one or more files via an easy download link. File sends are different than shared folders because file sends are 'point in time' - - the recipient will get the files as you sent them. If you later make a change to the source file, it will not be updated for the recipient.   - A **receive** folder lets you receive files into your account. You can either send users a link, or optionally [embed a customized form](/docs/account/05-file-sharing/05-upload-widget) on your website.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token**  **Notes:**  Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.AddShareWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body16)">
            <summary>
            Creates a share
            </summary>
            <remarks>
            Creates a new share object for the given path in your account. We support three types of shares:    - A **shared folder** allows you to let outside parties access a folder in your account (including any files and nested subfolders) using just a link. Shared folders can be restricted; e.g. with an expiration date, password, download-only, etc. Shared folders are 'live'; if someone makes a change to a file in your shared folder, it will be immediately reflected in your account, and vice-versa.   - A file **send** lets you send one or more files via an easy download link. File sends are different than shared folders because file sends are 'point in time' - - the recipient will get the files as you sent them. If you later make a change to the source file, it will not be updated for the recipient.   - A **receive** folder lets you receive files into your account. You can either send users a link, or optionally [embed a customized form](/docs/account/05-file-sharing/05-upload-widget) on your website.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token**  **Notes:**  Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.CompleteDirectSend(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Complete send files
            </summary>
            <remarks>
            After uploading the file(s) to be sent, this method will trigger invitation emails and finish the send files setup. If you are not sending files from your own computer in a send, you will not need this step.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token** 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share to trigger invitations for.</param>
            <returns>ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.CompleteDirectSendWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Complete send files
            </summary>
            <remarks>
            After uploading the file(s) to be sent, this method will trigger invitation emails and finish the send files setup. If you are not sending files from your own computer in a send, you will not need this step.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token** 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share to trigger invitations for.</param>
            <returns>ApiResponse of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.DeleteShareById(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Deactivate a share
            </summary>
            <remarks>
            Deactivate a share. Deactivating a share does not remove the underlying files for **shared_folder** and **receive** share types; it merely removes the access URL. Deleting a **send** share type does remove the associated files, as files that have been sent are only associated with the share, and aren't stored anywhere else in the account.  **Notes:**  - You must have [sharing permissons](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - You must have [admin-level access](/docs/account/04-users/01-admin-users), or you must be the owner of the specified share you wish to delete.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.DeleteShareByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Deactivate a share
            </summary>
            <remarks>
            Deactivate a share. Deactivating a share does not remove the underlying files for **shared_folder** and **receive** share types; it merely removes the access URL. Deleting a **send** share type does remove the associated files, as files that have been sent are only associated with the share, and aren't stored anywhere else in the account.  **Notes:**  - You must have [sharing permissons](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - You must have [admin-level access](/docs/account/04-users/01-admin-users), or you must be the owner of the specified share you wish to delete.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.GetShareById(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a share
            </summary>
            <remarks>
            Get the details for a specific share entry. You can use the `include` parameter to also get the details of related records, such as the owning user or the resources involved in the share.  **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <returns>ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.GetShareByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a share
            </summary>
            <remarks>
            Get the details for a specific share entry. You can use the `include` parameter to also get the details of related records, such as the owning user or the resources involved in the share.  **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <returns>ApiResponse of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.ListShares(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of shares
            </summary>
            <remarks>
            Get a list of shares that you would have access to view through the web interface. You can limit which results are returned by specifying specific types of shares you wish to view, finding things shared with a specific email address, as well as finding shares for specific folder names.   **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional, default to 100)</param>
            <param name="scope">Set of shares to return. (**all**=all of them, **active**=shares that are currently active, **curentUser**=shares created by you) (optional)</param>
            <param name="sort">What order the list of matches should be in. (optional)</param>
            <param name="type">Limit the list of matches to only certain types of shares. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <param name="name">When provided, only shares whose names include this value will be in the list. Supports wildcards, such as **send\\*** to return everything starting with \"send\".  Use this parameter if you are searching for shares or receives for a specific folder name. For example **_/Clients/ACME/To Be Processed**. (optional)</param>
            <param name="recipient">Filter the results to include only shares that invited a certain email address. Supports wildcard matching so that **\\*@example.com** will give back entries shared with addresses ending in \"@example.com\".  (optional)</param>
            <param name="message">When provided, only shares with a message that contains the text will be included in the list of matches. Both the subject and the body of all messages will be checked for matches. This will allways be a wildcard match, so that searching for **taxes** will return any shares with a message that contains the word \"taxes\". (optional)</param>
            <param name="username">When provided, only shares created by the user with that `username` will be included in the list. Does not support wildcard searching. (optional)</param>
            <param name="search">Searches the share name, username, recipients, share messages fields for the provided value. Supports wildcard searches. (optional)</param>
            <returns>ShareCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.ListSharesWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of shares
            </summary>
            <remarks>
            Get a list of shares that you would have access to view through the web interface. You can limit which results are returned by specifying specific types of shares you wish to view, finding things shared with a specific email address, as well as finding shares for specific folder names.   **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional, default to 100)</param>
            <param name="scope">Set of shares to return. (**all**=all of them, **active**=shares that are currently active, **curentUser**=shares created by you) (optional)</param>
            <param name="sort">What order the list of matches should be in. (optional)</param>
            <param name="type">Limit the list of matches to only certain types of shares. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <param name="name">When provided, only shares whose names include this value will be in the list. Supports wildcards, such as **send\\*** to return everything starting with \"send\".  Use this parameter if you are searching for shares or receives for a specific folder name. For example **_/Clients/ACME/To Be Processed**. (optional)</param>
            <param name="recipient">Filter the results to include only shares that invited a certain email address. Supports wildcard matching so that **\\*@example.com** will give back entries shared with addresses ending in \"@example.com\".  (optional)</param>
            <param name="message">When provided, only shares with a message that contains the text will be included in the list of matches. Both the subject and the body of all messages will be checked for matches. This will allways be a wildcard match, so that searching for **taxes** will return any shares with a message that contains the word \"taxes\". (optional)</param>
            <param name="username">When provided, only shares created by the user with that `username` will be included in the list. Does not support wildcard searching. (optional)</param>
            <param name="search">Searches the share name, username, recipients, share messages fields for the provided value. Supports wildcard searches. (optional)</param>
            <returns>ApiResponse of ShareCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.UpdateShareById(IO.Swagger.Model.Body17,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Update a share
            </summary>
            <remarks>
            Change the settings on an active share. Any changes made will affect all users that have access to the share.   When updating invitees, pass the `recipients` body paramater with the full list of people who should be included on the share. If you resend the list without an existing recipient, they will be removed from the share.  **Notes:**    - Authenticated user should be the owner of the specified share.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body"></param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share entry</param>
            <returns>ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.UpdateShareByIdWithHttpInfo(IO.Swagger.Model.Body17,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Update a share
            </summary>
            <remarks>
            Change the settings on an active share. Any changes made will affect all users that have access to the share.   When updating invitees, pass the `recipients` body paramater with the full list of people who should be included on the share. If you resend the list without an existing recipient, they will be removed from the share.  **Notes:**    - Authenticated user should be the owner of the specified share.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body"></param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share entry</param>
            <returns>ApiResponse of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.AddShareAsync(System.String,System.String,IO.Swagger.Model.Body16)">
            <summary>
            Creates a share
            </summary>
            <remarks>
            Creates a new share object for the given path in your account. We support three types of shares:    - A **shared folder** allows you to let outside parties access a folder in your account (including any files and nested subfolders) using just a link. Shared folders can be restricted; e.g. with an expiration date, password, download-only, etc. Shared folders are 'live'; if someone makes a change to a file in your shared folder, it will be immediately reflected in your account, and vice-versa.   - A file **send** lets you send one or more files via an easy download link. File sends are different than shared folders because file sends are 'point in time' - - the recipient will get the files as you sent them. If you later make a change to the source file, it will not be updated for the recipient.   - A **receive** folder lets you receive files into your account. You can either send users a link, or optionally [embed a customized form](/docs/account/05-file-sharing/05-upload-widget) on your website.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token**  **Notes:**  Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.AddShareAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body16)">
            <summary>
            Creates a share
            </summary>
            <remarks>
            Creates a new share object for the given path in your account. We support three types of shares:    - A **shared folder** allows you to let outside parties access a folder in your account (including any files and nested subfolders) using just a link. Shared folders can be restricted; e.g. with an expiration date, password, download-only, etc. Shared folders are 'live'; if someone makes a change to a file in your shared folder, it will be immediately reflected in your account, and vice-versa.   - A file **send** lets you send one or more files via an easy download link. File sends are different than shared folders because file sends are 'point in time' - - the recipient will get the files as you sent them. If you later make a change to the source file, it will not be updated for the recipient.   - A **receive** folder lets you receive files into your account. You can either send users a link, or optionally [embed a customized form](/docs/account/05-file-sharing/05-upload-widget) on your website.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token**  **Notes:**  Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ShareResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.CompleteDirectSendAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Complete send files
            </summary>
            <remarks>
            After uploading the file(s) to be sent, this method will trigger invitation emails and finish the send files setup. If you are not sending files from your own computer in a send, you will not need this step.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token** 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share to trigger invitations for.</param>
            <returns>Task of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.CompleteDirectSendAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Complete send files
            </summary>
            <remarks>
            After uploading the file(s) to be sent, this method will trigger invitation emails and finish the send files setup. If you are not sending files from your own computer in a send, you will not need this step.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token** 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share to trigger invitations for.</param>
            <returns>Task of ApiResponse (ShareResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.DeleteShareByIdAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Deactivate a share
            </summary>
            <remarks>
            Deactivate a share. Deactivating a share does not remove the underlying files for **shared_folder** and **receive** share types; it merely removes the access URL. Deleting a **send** share type does remove the associated files, as files that have been sent are only associated with the share, and aren't stored anywhere else in the account.  **Notes:**  - You must have [sharing permissons](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - You must have [admin-level access](/docs/account/04-users/01-admin-users), or you must be the owner of the specified share you wish to delete.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.DeleteShareByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Deactivate a share
            </summary>
            <remarks>
            Deactivate a share. Deactivating a share does not remove the underlying files for **shared_folder** and **receive** share types; it merely removes the access URL. Deleting a **send** share type does remove the associated files, as files that have been sent are only associated with the share, and aren't stored anywhere else in the account.  **Notes:**  - You must have [sharing permissons](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - You must have [admin-level access](/docs/account/04-users/01-admin-users), or you must be the owner of the specified share you wish to delete.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.GetShareByIdAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a share
            </summary>
            <remarks>
            Get the details for a specific share entry. You can use the `include` parameter to also get the details of related records, such as the owning user or the resources involved in the share.  **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <returns>Task of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.GetShareByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a share
            </summary>
            <remarks>
            Get the details for a specific share entry. You can use the `include` parameter to also get the details of related records, such as the owning user or the resources involved in the share.  **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <returns>Task of ApiResponse (ShareResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.ListSharesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of shares
            </summary>
            <remarks>
            Get a list of shares that you would have access to view through the web interface. You can limit which results are returned by specifying specific types of shares you wish to view, finding things shared with a specific email address, as well as finding shares for specific folder names.   **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional, default to 100)</param>
            <param name="scope">Set of shares to return. (**all**=all of them, **active**=shares that are currently active, **curentUser**=shares created by you) (optional)</param>
            <param name="sort">What order the list of matches should be in. (optional)</param>
            <param name="type">Limit the list of matches to only certain types of shares. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <param name="name">When provided, only shares whose names include this value will be in the list. Supports wildcards, such as **send\\*** to return everything starting with \"send\".  Use this parameter if you are searching for shares or receives for a specific folder name. For example **_/Clients/ACME/To Be Processed**. (optional)</param>
            <param name="recipient">Filter the results to include only shares that invited a certain email address. Supports wildcard matching so that **\\*@example.com** will give back entries shared with addresses ending in \"@example.com\".  (optional)</param>
            <param name="message">When provided, only shares with a message that contains the text will be included in the list of matches. Both the subject and the body of all messages will be checked for matches. This will allways be a wildcard match, so that searching for **taxes** will return any shares with a message that contains the word \"taxes\". (optional)</param>
            <param name="username">When provided, only shares created by the user with that `username` will be included in the list. Does not support wildcard searching. (optional)</param>
            <param name="search">Searches the share name, username, recipients, share messages fields for the provided value. Supports wildcard searches. (optional)</param>
            <returns>Task of ShareCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.ListSharesAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of shares
            </summary>
            <remarks>
            Get a list of shares that you would have access to view through the web interface. You can limit which results are returned by specifying specific types of shares you wish to view, finding things shared with a specific email address, as well as finding shares for specific folder names.   **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional, default to 100)</param>
            <param name="scope">Set of shares to return. (**all**=all of them, **active**=shares that are currently active, **curentUser**=shares created by you) (optional)</param>
            <param name="sort">What order the list of matches should be in. (optional)</param>
            <param name="type">Limit the list of matches to only certain types of shares. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <param name="name">When provided, only shares whose names include this value will be in the list. Supports wildcards, such as **send\\*** to return everything starting with \"send\".  Use this parameter if you are searching for shares or receives for a specific folder name. For example **_/Clients/ACME/To Be Processed**. (optional)</param>
            <param name="recipient">Filter the results to include only shares that invited a certain email address. Supports wildcard matching so that **\\*@example.com** will give back entries shared with addresses ending in \"@example.com\".  (optional)</param>
            <param name="message">When provided, only shares with a message that contains the text will be included in the list of matches. Both the subject and the body of all messages will be checked for matches. This will allways be a wildcard match, so that searching for **taxes** will return any shares with a message that contains the word \"taxes\". (optional)</param>
            <param name="username">When provided, only shares created by the user with that `username` will be included in the list. Does not support wildcard searching. (optional)</param>
            <param name="search">Searches the share name, username, recipients, share messages fields for the provided value. Supports wildcard searches. (optional)</param>
            <returns>Task of ApiResponse (ShareCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.UpdateShareByIdAsync(IO.Swagger.Model.Body17,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Update a share
            </summary>
            <remarks>
            Change the settings on an active share. Any changes made will affect all users that have access to the share.   When updating invitees, pass the `recipients` body paramater with the full list of people who should be included on the share. If you resend the list without an existing recipient, they will be removed from the share.  **Notes:**    - Authenticated user should be the owner of the specified share.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body"></param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share entry</param>
            <returns>Task of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.ISharesApi.UpdateShareByIdAsyncWithHttpInfo(IO.Swagger.Model.Body17,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Update a share
            </summary>
            <remarks>
            Change the settings on an active share. Any changes made will affect all users that have access to the share.   When updating invitees, pass the `recipients` body paramater with the full list of people who should be included on the share. If you resend the list without an existing recipient, they will be removed from the share.  **Notes:**    - Authenticated user should be the owner of the specified share.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body"></param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share entry</param>
            <returns>Task of ApiResponse (ShareResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.SharesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.SharesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.SharesApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.SharesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.AddShare(System.String,System.String,IO.Swagger.Model.Body16)">
            <summary>
            Creates a share Creates a new share object for the given path in your account. We support three types of shares:    - A **shared folder** allows you to let outside parties access a folder in your account (including any files and nested subfolders) using just a link. Shared folders can be restricted; e.g. with an expiration date, password, download-only, etc. Shared folders are 'live'; if someone makes a change to a file in your shared folder, it will be immediately reflected in your account, and vice-versa.   - A file **send** lets you send one or more files via an easy download link. File sends are different than shared folders because file sends are 'point in time' - - the recipient will get the files as you sent them. If you later make a change to the source file, it will not be updated for the recipient.   - A **receive** folder lets you receive files into your account. You can either send users a link, or optionally [embed a customized form](/docs/account/05-file-sharing/05-upload-widget) on your website.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token**  **Notes:**  Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.AddShareWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body16)">
            <summary>
            Creates a share Creates a new share object for the given path in your account. We support three types of shares:    - A **shared folder** allows you to let outside parties access a folder in your account (including any files and nested subfolders) using just a link. Shared folders can be restricted; e.g. with an expiration date, password, download-only, etc. Shared folders are 'live'; if someone makes a change to a file in your shared folder, it will be immediately reflected in your account, and vice-versa.   - A file **send** lets you send one or more files via an easy download link. File sends are different than shared folders because file sends are 'point in time' - - the recipient will get the files as you sent them. If you later make a change to the source file, it will not be updated for the recipient.   - A **receive** folder lets you receive files into your account. You can either send users a link, or optionally [embed a customized form](/docs/account/05-file-sharing/05-upload-widget) on your website.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token**  **Notes:**  Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.AddShareAsync(System.String,System.String,IO.Swagger.Model.Body16)">
            <summary>
            Creates a share Creates a new share object for the given path in your account. We support three types of shares:    - A **shared folder** allows you to let outside parties access a folder in your account (including any files and nested subfolders) using just a link. Shared folders can be restricted; e.g. with an expiration date, password, download-only, etc. Shared folders are 'live'; if someone makes a change to a file in your shared folder, it will be immediately reflected in your account, and vice-versa.   - A file **send** lets you send one or more files via an easy download link. File sends are different than shared folders because file sends are 'point in time' - - the recipient will get the files as you sent them. If you later make a change to the source file, it will not be updated for the recipient.   - A **receive** folder lets you receive files into your account. You can either send users a link, or optionally [embed a customized form](/docs/account/05-file-sharing/05-upload-widget) on your website.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token**  **Notes:**  Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.AddShareAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body16)">
            <summary>
            Creates a share Creates a new share object for the given path in your account. We support three types of shares:    - A **shared folder** allows you to let outside parties access a folder in your account (including any files and nested subfolders) using just a link. Shared folders can be restricted; e.g. with an expiration date, password, download-only, etc. Shared folders are 'live'; if someone makes a change to a file in your shared folder, it will be immediately reflected in your account, and vice-versa.   - A file **send** lets you send one or more files via an easy download link. File sends are different than shared folders because file sends are 'point in time' - - the recipient will get the files as you sent them. If you later make a change to the source file, it will not be updated for the recipient.   - A **receive** folder lets you receive files into your account. You can either send users a link, or optionally [embed a customized form](/docs/account/05-file-sharing/05-upload-widget) on your website.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token**  **Notes:**  Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (ShareResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.CompleteDirectSend(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Complete send files After uploading the file(s) to be sent, this method will trigger invitation emails and finish the send files setup. If you are not sending files from your own computer in a send, you will not need this step.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token** 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share to trigger invitations for.</param>
            <returns>ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.CompleteDirectSendWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Complete send files After uploading the file(s) to be sent, this method will trigger invitation emails and finish the send files setup. If you are not sending files from your own computer in a send, you will not need this step.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token** 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share to trigger invitations for.</param>
            <returns>ApiResponse of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.CompleteDirectSendAsync(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Complete send files After uploading the file(s) to be sent, this method will trigger invitation emails and finish the send files setup. If you are not sending files from your own computer in a send, you will not need this step.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token** 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share to trigger invitations for.</param>
            <returns>Task of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.CompleteDirectSendAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Complete send files After uploading the file(s) to be sent, this method will trigger invitation emails and finish the send files setup. If you are not sending files from your own computer in a send, you will not need this step.    **How to send files from your computer using the API**:  In order to use the API to send files which are not already stored in your account, you'll need to follow a three-step process:  1. Use the [POST /shares](#operation/addShare) endpoint to set up your send, including password, recipients, expiration, etc. You must include **upload** among the permissions in the `accessMode` and set the `sendingLocalFiles` paramter to **true**. The response that is returned will include a \"meta\" attribute, which contains an **accessToken** attribute. This new access token is valid only for the send. 2. Use the [POST /resources/upload](#operation/uploadFile) endpoint to upload your files to the send you've created. The \"/\" path represents the root of the share, not your home directory. **You must send the access token that you received from the first step in the `ev-access-token` header** 3. Use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to indicate that you have finished uploading files to your send. This will trigger the system to remove the **upload** permission from the share and send any invitation emails you set up in the first step of the process. **You must send YOUR access token in the `ev-access-token` header, not the temporary access token** 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share to trigger invitations for.</param>
            <returns>Task of ApiResponse (ShareResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.DeleteShareById(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Deactivate a share Deactivate a share. Deactivating a share does not remove the underlying files for **shared_folder** and **receive** share types; it merely removes the access URL. Deleting a **send** share type does remove the associated files, as files that have been sent are only associated with the share, and aren't stored anywhere else in the account.  **Notes:**  - You must have [sharing permissons](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - You must have [admin-level access](/docs/account/04-users/01-admin-users), or you must be the owner of the specified share you wish to delete.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.DeleteShareByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Deactivate a share Deactivate a share. Deactivating a share does not remove the underlying files for **shared_folder** and **receive** share types; it merely removes the access URL. Deleting a **send** share type does remove the associated files, as files that have been sent are only associated with the share, and aren't stored anywhere else in the account.  **Notes:**  - You must have [sharing permissons](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - You must have [admin-level access](/docs/account/04-users/01-admin-users), or you must be the owner of the specified share you wish to delete.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.DeleteShareByIdAsync(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Deactivate a share Deactivate a share. Deactivating a share does not remove the underlying files for **shared_folder** and **receive** share types; it merely removes the access URL. Deleting a **send** share type does remove the associated files, as files that have been sent are only associated with the share, and aren't stored anywhere else in the account.  **Notes:**  - You must have [sharing permissons](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - You must have [admin-level access](/docs/account/04-users/01-admin-users), or you must be the owner of the specified share you wish to delete.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.DeleteShareByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Deactivate a share Deactivate a share. Deactivating a share does not remove the underlying files for **shared_folder** and **receive** share types; it merely removes the access URL. Deleting a **send** share type does remove the associated files, as files that have been sent are only associated with the share, and aren't stored anywhere else in the account.  **Notes:**  - You must have [sharing permissons](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - You must have [admin-level access](/docs/account/04-users/01-admin-users), or you must be the owner of the specified share you wish to delete.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.GetShareById(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a share Get the details for a specific share entry. You can use the `include` parameter to also get the details of related records, such as the owning user or the resources involved in the share.  **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <returns>ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.GetShareByIdWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a share Get the details for a specific share entry. You can use the `include` parameter to also get the details of related records, such as the owning user or the resources involved in the share.  **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <returns>ApiResponse of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.GetShareByIdAsync(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a share Get the details for a specific share entry. You can use the `include` parameter to also get the details of related records, such as the owning user or the resources involved in the share.  **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <returns>Task of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.GetShareByIdAsyncWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a share Get the details for a specific share entry. You can use the `include` parameter to also get the details of related records, such as the owning user or the resources involved in the share.  **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">ID of the share entry</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <returns>Task of ApiResponse (ShareResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.ListShares(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of shares Get a list of shares that you would have access to view through the web interface. You can limit which results are returned by specifying specific types of shares you wish to view, finding things shared with a specific email address, as well as finding shares for specific folder names.   **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional, default to 100)</param>
            <param name="scope">Set of shares to return. (**all**=all of them, **active**=shares that are currently active, **curentUser**=shares created by you) (optional)</param>
            <param name="sort">What order the list of matches should be in. (optional)</param>
            <param name="type">Limit the list of matches to only certain types of shares. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <param name="name">When provided, only shares whose names include this value will be in the list. Supports wildcards, such as **send\\*** to return everything starting with \"send\".  Use this parameter if you are searching for shares or receives for a specific folder name. For example **_/Clients/ACME/To Be Processed**. (optional)</param>
            <param name="recipient">Filter the results to include only shares that invited a certain email address. Supports wildcard matching so that **\\*@example.com** will give back entries shared with addresses ending in \"@example.com\".  (optional)</param>
            <param name="message">When provided, only shares with a message that contains the text will be included in the list of matches. Both the subject and the body of all messages will be checked for matches. This will allways be a wildcard match, so that searching for **taxes** will return any shares with a message that contains the word \"taxes\". (optional)</param>
            <param name="username">When provided, only shares created by the user with that `username` will be included in the list. Does not support wildcard searching. (optional)</param>
            <param name="search">Searches the share name, username, recipients, share messages fields for the provided value. Supports wildcard searches. (optional)</param>
            <returns>ShareCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.ListSharesWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of shares Get a list of shares that you would have access to view through the web interface. You can limit which results are returned by specifying specific types of shares you wish to view, finding things shared with a specific email address, as well as finding shares for specific folder names.   **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional, default to 100)</param>
            <param name="scope">Set of shares to return. (**all**=all of them, **active**=shares that are currently active, **curentUser**=shares created by you) (optional)</param>
            <param name="sort">What order the list of matches should be in. (optional)</param>
            <param name="type">Limit the list of matches to only certain types of shares. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <param name="name">When provided, only shares whose names include this value will be in the list. Supports wildcards, such as **send\\*** to return everything starting with \"send\".  Use this parameter if you are searching for shares or receives for a specific folder name. For example **_/Clients/ACME/To Be Processed**. (optional)</param>
            <param name="recipient">Filter the results to include only shares that invited a certain email address. Supports wildcard matching so that **\\*@example.com** will give back entries shared with addresses ending in \"@example.com\".  (optional)</param>
            <param name="message">When provided, only shares with a message that contains the text will be included in the list of matches. Both the subject and the body of all messages will be checked for matches. This will allways be a wildcard match, so that searching for **taxes** will return any shares with a message that contains the word \"taxes\". (optional)</param>
            <param name="username">When provided, only shares created by the user with that `username` will be included in the list. Does not support wildcard searching. (optional)</param>
            <param name="search">Searches the share name, username, recipients, share messages fields for the provided value. Supports wildcard searches. (optional)</param>
            <returns>ApiResponse of ShareCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.ListSharesAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of shares Get a list of shares that you would have access to view through the web interface. You can limit which results are returned by specifying specific types of shares you wish to view, finding things shared with a specific email address, as well as finding shares for specific folder names.   **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional, default to 100)</param>
            <param name="scope">Set of shares to return. (**all**=all of them, **active**=shares that are currently active, **curentUser**=shares created by you) (optional)</param>
            <param name="sort">What order the list of matches should be in. (optional)</param>
            <param name="type">Limit the list of matches to only certain types of shares. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <param name="name">When provided, only shares whose names include this value will be in the list. Supports wildcards, such as **send\\*** to return everything starting with \"send\".  Use this parameter if you are searching for shares or receives for a specific folder name. For example **_/Clients/ACME/To Be Processed**. (optional)</param>
            <param name="recipient">Filter the results to include only shares that invited a certain email address. Supports wildcard matching so that **\\*@example.com** will give back entries shared with addresses ending in \"@example.com\".  (optional)</param>
            <param name="message">When provided, only shares with a message that contains the text will be included in the list of matches. Both the subject and the body of all messages will be checked for matches. This will allways be a wildcard match, so that searching for **taxes** will return any shares with a message that contains the word \"taxes\". (optional)</param>
            <param name="username">When provided, only shares created by the user with that `username` will be included in the list. Does not support wildcard searching. (optional)</param>
            <param name="search">Searches the share name, username, recipients, share messages fields for the provided value. Supports wildcard searches. (optional)</param>
            <returns>Task of ShareCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.ListSharesAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of shares Get a list of shares that you would have access to view through the web interface. You can limit which results are returned by specifying specific types of shares you wish to view, finding things shared with a specific email address, as well as finding shares for specific folder names.   **Notes:**  - Authenticated user requires [share permission](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). - To get share objects with type send, authenticated user's role must be admin or master.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="offset">Current offset of records (for pagination) (optional)</param>
            <param name="limit">Limit of records to be returned (for pagination) (optional, default to 100)</param>
            <param name="scope">Set of shares to return. (**all**=all of them, **active**=shares that are currently active, **curentUser**=shares created by you) (optional)</param>
            <param name="sort">What order the list of matches should be in. (optional)</param>
            <param name="type">Limit the list of matches to only certain types of shares. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Possible values are **owner**, **resources**, **notifications**, **activity**. (optional)</param>
            <param name="name">When provided, only shares whose names include this value will be in the list. Supports wildcards, such as **send\\*** to return everything starting with \"send\".  Use this parameter if you are searching for shares or receives for a specific folder name. For example **_/Clients/ACME/To Be Processed**. (optional)</param>
            <param name="recipient">Filter the results to include only shares that invited a certain email address. Supports wildcard matching so that **\\*@example.com** will give back entries shared with addresses ending in \"@example.com\".  (optional)</param>
            <param name="message">When provided, only shares with a message that contains the text will be included in the list of matches. Both the subject and the body of all messages will be checked for matches. This will allways be a wildcard match, so that searching for **taxes** will return any shares with a message that contains the word \"taxes\". (optional)</param>
            <param name="username">When provided, only shares created by the user with that `username` will be included in the list. Does not support wildcard searching. (optional)</param>
            <param name="search">Searches the share name, username, recipients, share messages fields for the provided value. Supports wildcard searches. (optional)</param>
            <returns>Task of ApiResponse (ShareCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.UpdateShareById(IO.Swagger.Model.Body17,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Update a share Change the settings on an active share. Any changes made will affect all users that have access to the share.   When updating invitees, pass the `recipients` body paramater with the full list of people who should be included on the share. If you resend the list without an existing recipient, they will be removed from the share.  **Notes:**    - Authenticated user should be the owner of the specified share.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body"></param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share entry</param>
            <returns>ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.UpdateShareByIdWithHttpInfo(IO.Swagger.Model.Body17,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Update a share Change the settings on an active share. Any changes made will affect all users that have access to the share.   When updating invitees, pass the `recipients` body paramater with the full list of people who should be included on the share. If you resend the list without an existing recipient, they will be removed from the share.  **Notes:**    - Authenticated user should be the owner of the specified share.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body"></param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share entry</param>
            <returns>ApiResponse of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.UpdateShareByIdAsync(IO.Swagger.Model.Body17,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Update a share Change the settings on an active share. Any changes made will affect all users that have access to the share.   When updating invitees, pass the `recipients` body paramater with the full list of people who should be included on the share. If you resend the list without an existing recipient, they will be removed from the share.  **Notes:**    - Authenticated user should be the owner of the specified share.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body"></param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share entry</param>
            <returns>Task of ShareResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.SharesApi.UpdateShareByIdAsyncWithHttpInfo(IO.Swagger.Model.Body17,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Update a share Change the settings on an active share. Any changes made will affect all users that have access to the share.   When updating invitees, pass the `recipients` body paramater with the full list of people who should be included on the share. If you resend the list without an existing recipient, they will be removed from the share.  **Notes:**    - Authenticated user should be the owner of the specified share.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="body"></param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access Token</param>
            <param name="id">ID of the share entry</param>
            <returns>Task of ApiResponse (ShareResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.SharesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.SharesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Api.IUsersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.AddUser(System.String,System.String,IO.Swagger.Model.Body5)">
            <summary>
            Create a user
            </summary>
            <remarks>
            Adds a new user to the account. The user may be configured as an admin or standard user, and (if a standard user) may be assigned a restricted [home directory](/docs/account/04-users/00-introduction#setting-the-user-s-home-directory) and restricted [permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).   **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.AddUserWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body5)">
            <summary>
            Create a user
            </summary>
            <remarks>
            Adds a new user to the account. The user may be configured as an admin or standard user, and (if a standard user) may be assigned a restricted [home directory](/docs/account/04-users/00-introduction#setting-the-user-s-home-directory) and restricted [permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).   **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.DeleteUser(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Delete a user
            </summary>
            <remarks>
            Delete a user from the account. Deleting a user does **NOT** delete any files from the account; it merely removes a user's access. Aternatively, locking a user via the [PATCH /users/{id}](#operation/updateUser) will keep the user in your account, but make it unable to log in.   Resources and shares owned by the deleted user will be owned by the master user after the deletion.  **Notes:**   - You must have [admin-level access](/docs/account/04-users/01-admin-users) to delete a user. - The primary owner of the account cannot be deleted. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.DeleteUserWithHttpInfo(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Delete a user
            </summary>
            <remarks>
            Delete a user from the account. Deleting a user does **NOT** delete any files from the account; it merely removes a user's access. Aternatively, locking a user via the [PATCH /users/{id}](#operation/updateUser) will keep the user in your account, but make it unable to log in.   Resources and shares owned by the deleted user will be owned by the master user after the deletion.  **Notes:**   - You must have [admin-level access](/docs/account/04-users/01-admin-users) to delete a user. - The primary owner of the account cannot be deleted. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.GetUserById(System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            Get info for a user
            </summary>
            <remarks>
            Get the details for a specific user. You can use the `include` parameter to also get the details of related records, such as the account or the home directory.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to use this.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma-separated list of relationships to include in response. Possible values include **homeResource** and **ownerAccount**. (optional)</param>
            <returns>UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.GetUserByIdWithHttpInfo(System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            Get info for a user
            </summary>
            <remarks>
            Get the details for a specific user. You can use the `include` parameter to also get the details of related records, such as the account or the home directory.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to use this.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma-separated list of relationships to include in response. Possible values include **homeResource** and **ownerAccount**. (optional)</param>
            <returns>ApiResponse of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.ListUsers(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of users
            </summary>
            <remarks>
            Get a list of the users in your account. There are three main types of searches you can do with this method:  1. Search for a user by username. If you provide the `username` parameter in your call, then only the user who exactly matches that username will be in the list of matches. Any other parameters are ignored. 1. Search for a user by individual filter fields (`nickname`,`email`,`role`,`status`,`homeDir`). Users in the list will be ones who match all of the filters you choose to search by. For example, you could look for users with the \"admin\" `role` AND `email` addresses ending in \"*@acme.com\".  1. Search for a user by search string. If you provide the `search` parameter, users whose nickname OR email OR role OR homeDir match value your provide.  **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - The homeDir is the full path to the user's home directory, not a resource ID or hash.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches. (optional)</param>
            <param name="nickname">Nickname to search for. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="email">Email to search for. Ignored if `username` is provided. Supports wildcard searches (optional)</param>
            <param name="role">Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user** (optional)</param>
            <param name="status">Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked.  (optional)</param>
            <param name="homeDir">Path for user's home directory. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="search">Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="offset">Starting user record in the result set. Can be used for pagination. (optional)</param>
            <param name="sort">Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  Valid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified** (optional)</param>
            <param name="limit">Number of users to return. Can be used for pagination. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**. (optional)</param>
            <returns>UserCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.ListUsersWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of users
            </summary>
            <remarks>
            Get a list of the users in your account. There are three main types of searches you can do with this method:  1. Search for a user by username. If you provide the `username` parameter in your call, then only the user who exactly matches that username will be in the list of matches. Any other parameters are ignored. 1. Search for a user by individual filter fields (`nickname`,`email`,`role`,`status`,`homeDir`). Users in the list will be ones who match all of the filters you choose to search by. For example, you could look for users with the \"admin\" `role` AND `email` addresses ending in \"*@acme.com\".  1. Search for a user by search string. If you provide the `search` parameter, users whose nickname OR email OR role OR homeDir match value your provide.  **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - The homeDir is the full path to the user's home directory, not a resource ID or hash.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches. (optional)</param>
            <param name="nickname">Nickname to search for. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="email">Email to search for. Ignored if `username` is provided. Supports wildcard searches (optional)</param>
            <param name="role">Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user** (optional)</param>
            <param name="status">Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked.  (optional)</param>
            <param name="homeDir">Path for user's home directory. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="search">Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="offset">Starting user record in the result set. Can be used for pagination. (optional)</param>
            <param name="sort">Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  Valid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified** (optional)</param>
            <param name="limit">Number of users to return. Can be used for pagination. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**. (optional)</param>
            <returns>ApiResponse of UserCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.UpdateUser(System.String,System.String,System.Nullable{System.Decimal},IO.Swagger.Model.Body6)">
            <summary>
            Update a user
            </summary>
            <remarks>
            Updates the settings for the user. Note that the unique key for this API call is our internal ID, and _not_ the username, as the username can be changed.  In the request body, you should only send the parameters for values that you wish to change for the user.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to edit other users. If you have user-level access, you can only update your own user settings. - You cannot edit a master user with this method.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="body"> (optional)</param>
            <returns>UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.UpdateUserWithHttpInfo(System.String,System.String,System.Nullable{System.Decimal},IO.Swagger.Model.Body6)">
            <summary>
            Update a user
            </summary>
            <remarks>
            Updates the settings for the user. Note that the unique key for this API call is our internal ID, and _not_ the username, as the username can be changed.  In the request body, you should only send the parameters for values that you wish to change for the user.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to edit other users. If you have user-level access, you can only update your own user settings. - You cannot edit a master user with this method.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.AddUserAsync(System.String,System.String,IO.Swagger.Model.Body5)">
            <summary>
            Create a user
            </summary>
            <remarks>
            Adds a new user to the account. The user may be configured as an admin or standard user, and (if a standard user) may be assigned a restricted [home directory](/docs/account/04-users/00-introduction#setting-the-user-s-home-directory) and restricted [permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).   **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.AddUserAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body5)">
            <summary>
            Create a user
            </summary>
            <remarks>
            Adds a new user to the account. The user may be configured as an admin or standard user, and (if a standard user) may be assigned a restricted [home directory](/docs/account/04-users/00-introduction#setting-the-user-s-home-directory) and restricted [permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).   **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (UserResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.DeleteUserAsync(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Delete a user
            </summary>
            <remarks>
            Delete a user from the account. Deleting a user does **NOT** delete any files from the account; it merely removes a user's access. Aternatively, locking a user via the [PATCH /users/{id}](#operation/updateUser) will keep the user in your account, but make it unable to log in.   Resources and shares owned by the deleted user will be owned by the master user after the deletion.  **Notes:**   - You must have [admin-level access](/docs/account/04-users/01-admin-users) to delete a user. - The primary owner of the account cannot be deleted. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.DeleteUserAsyncWithHttpInfo(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Delete a user
            </summary>
            <remarks>
            Delete a user from the account. Deleting a user does **NOT** delete any files from the account; it merely removes a user's access. Aternatively, locking a user via the [PATCH /users/{id}](#operation/updateUser) will keep the user in your account, but make it unable to log in.   Resources and shares owned by the deleted user will be owned by the master user after the deletion.  **Notes:**   - You must have [admin-level access](/docs/account/04-users/01-admin-users) to delete a user. - The primary owner of the account cannot be deleted. 
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.GetUserByIdAsync(System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            Get info for a user
            </summary>
            <remarks>
            Get the details for a specific user. You can use the `include` parameter to also get the details of related records, such as the account or the home directory.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to use this.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma-separated list of relationships to include in response. Possible values include **homeResource** and **ownerAccount**. (optional)</param>
            <returns>Task of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.GetUserByIdAsyncWithHttpInfo(System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            Get info for a user
            </summary>
            <remarks>
            Get the details for a specific user. You can use the `include` parameter to also get the details of related records, such as the account or the home directory.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to use this.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma-separated list of relationships to include in response. Possible values include **homeResource** and **ownerAccount**. (optional)</param>
            <returns>Task of ApiResponse (UserResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.ListUsersAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of users
            </summary>
            <remarks>
            Get a list of the users in your account. There are three main types of searches you can do with this method:  1. Search for a user by username. If you provide the `username` parameter in your call, then only the user who exactly matches that username will be in the list of matches. Any other parameters are ignored. 1. Search for a user by individual filter fields (`nickname`,`email`,`role`,`status`,`homeDir`). Users in the list will be ones who match all of the filters you choose to search by. For example, you could look for users with the \"admin\" `role` AND `email` addresses ending in \"*@acme.com\".  1. Search for a user by search string. If you provide the `search` parameter, users whose nickname OR email OR role OR homeDir match value your provide.  **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - The homeDir is the full path to the user's home directory, not a resource ID or hash.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches. (optional)</param>
            <param name="nickname">Nickname to search for. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="email">Email to search for. Ignored if `username` is provided. Supports wildcard searches (optional)</param>
            <param name="role">Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user** (optional)</param>
            <param name="status">Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked.  (optional)</param>
            <param name="homeDir">Path for user's home directory. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="search">Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="offset">Starting user record in the result set. Can be used for pagination. (optional)</param>
            <param name="sort">Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  Valid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified** (optional)</param>
            <param name="limit">Number of users to return. Can be used for pagination. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**. (optional)</param>
            <returns>Task of UserCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.ListUsersAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of users
            </summary>
            <remarks>
            Get a list of the users in your account. There are three main types of searches you can do with this method:  1. Search for a user by username. If you provide the `username` parameter in your call, then only the user who exactly matches that username will be in the list of matches. Any other parameters are ignored. 1. Search for a user by individual filter fields (`nickname`,`email`,`role`,`status`,`homeDir`). Users in the list will be ones who match all of the filters you choose to search by. For example, you could look for users with the \"admin\" `role` AND `email` addresses ending in \"*@acme.com\".  1. Search for a user by search string. If you provide the `search` parameter, users whose nickname OR email OR role OR homeDir match value your provide.  **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - The homeDir is the full path to the user's home directory, not a resource ID or hash.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches. (optional)</param>
            <param name="nickname">Nickname to search for. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="email">Email to search for. Ignored if `username` is provided. Supports wildcard searches (optional)</param>
            <param name="role">Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user** (optional)</param>
            <param name="status">Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked.  (optional)</param>
            <param name="homeDir">Path for user's home directory. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="search">Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="offset">Starting user record in the result set. Can be used for pagination. (optional)</param>
            <param name="sort">Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  Valid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified** (optional)</param>
            <param name="limit">Number of users to return. Can be used for pagination. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**. (optional)</param>
            <returns>Task of ApiResponse (UserCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.UpdateUserAsync(System.String,System.String,System.Nullable{System.Decimal},IO.Swagger.Model.Body6)">
            <summary>
            Update a user
            </summary>
            <remarks>
            Updates the settings for the user. Note that the unique key for this API call is our internal ID, and _not_ the username, as the username can be changed.  In the request body, you should only send the parameters for values that you wish to change for the user.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to edit other users. If you have user-level access, you can only update your own user settings. - You cannot edit a master user with this method.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="body"> (optional)</param>
            <returns>Task of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.IUsersApi.UpdateUserAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Decimal},IO.Swagger.Model.Body6)">
            <summary>
            Update a user
            </summary>
            <remarks>
            Updates the settings for the user. Note that the unique key for this API call is our internal ID, and _not_ the username, as the username can be changed.  In the request body, you should only send the parameters for values that you wish to change for the user.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to edit other users. If you have user-level access, you can only update your own user settings. - You cannot edit a master user with this method.
            </remarks>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (UserResponse)</returns>
        </member>
        <member name="T:IO.Swagger.Api.UsersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.UsersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.UsersApi"/> class
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Api.UsersApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.SetBasePath(System.String)">
            <summary>
            Sets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <returns>Dictionary of HTTP header</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.AddUser(System.String,System.String,IO.Swagger.Model.Body5)">
            <summary>
            Create a user Adds a new user to the account. The user may be configured as an admin or standard user, and (if a standard user) may be assigned a restricted [home directory](/docs/account/04-users/00-introduction#setting-the-user-s-home-directory) and restricted [permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).   **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.AddUserWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body5)">
            <summary>
            Create a user Adds a new user to the account. The user may be configured as an admin or standard user, and (if a standard user) may be assigned a restricted [home directory](/docs/account/04-users/00-introduction#setting-the-user-s-home-directory) and restricted [permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).   **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.AddUserAsync(System.String,System.String,IO.Swagger.Model.Body5)">
            <summary>
            Create a user Adds a new user to the account. The user may be configured as an admin or standard user, and (if a standard user) may be assigned a restricted [home directory](/docs/account/04-users/00-introduction#setting-the-user-s-home-directory) and restricted [permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).   **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.AddUserAsyncWithHttpInfo(System.String,System.String,IO.Swagger.Model.Body5)">
            <summary>
            Create a user Adds a new user to the account. The user may be configured as an admin or standard user, and (if a standard user) may be assigned a restricted [home directory](/docs/account/04-users/00-introduction#setting-the-user-s-home-directory) and restricted [permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions).   **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (UserResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.DeleteUser(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Delete a user Delete a user from the account. Deleting a user does **NOT** delete any files from the account; it merely removes a user's access. Aternatively, locking a user via the [PATCH /users/{id}](#operation/updateUser) will keep the user in your account, but make it unable to log in.   Resources and shares owned by the deleted user will be owned by the master user after the deletion.  **Notes:**   - You must have [admin-level access](/docs/account/04-users/01-admin-users) to delete a user. - The primary owner of the account cannot be deleted. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.DeleteUserWithHttpInfo(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Delete a user Delete a user from the account. Deleting a user does **NOT** delete any files from the account; it merely removes a user's access. Aternatively, locking a user via the [PATCH /users/{id}](#operation/updateUser) will keep the user in your account, but make it unable to log in.   Resources and shares owned by the deleted user will be owned by the master user after the deletion.  **Notes:**   - You must have [admin-level access](/docs/account/04-users/01-admin-users) to delete a user. - The primary owner of the account cannot be deleted. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>ApiResponse of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.DeleteUserAsync(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Delete a user Delete a user from the account. Deleting a user does **NOT** delete any files from the account; it merely removes a user's access. Aternatively, locking a user via the [PATCH /users/{id}](#operation/updateUser) will keep the user in your account, but make it unable to log in.   Resources and shares owned by the deleted user will be owned by the master user after the deletion.  **Notes:**   - You must have [admin-level access](/docs/account/04-users/01-admin-users) to delete a user. - The primary owner of the account cannot be deleted. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of EmptyResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.DeleteUserAsyncWithHttpInfo(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            Delete a user Delete a user from the account. Deleting a user does **NOT** delete any files from the account; it merely removes a user's access. Aternatively, locking a user via the [PATCH /users/{id}](#operation/updateUser) will keep the user in your account, but make it unable to log in.   Resources and shares owned by the deleted user will be owned by the master user after the deletion.  **Notes:**   - You must have [admin-level access](/docs/account/04-users/01-admin-users) to delete a user. - The primary owner of the account cannot be deleted. 
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <returns>Task of ApiResponse (EmptyResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.GetUserById(System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            Get info for a user Get the details for a specific user. You can use the `include` parameter to also get the details of related records, such as the account or the home directory.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to use this.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma-separated list of relationships to include in response. Possible values include **homeResource** and **ownerAccount**. (optional)</param>
            <returns>UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.GetUserByIdWithHttpInfo(System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            Get info for a user Get the details for a specific user. You can use the `include` parameter to also get the details of related records, such as the account or the home directory.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to use this.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma-separated list of relationships to include in response. Possible values include **homeResource** and **ownerAccount**. (optional)</param>
            <returns>ApiResponse of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.GetUserByIdAsync(System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            Get info for a user Get the details for a specific user. You can use the `include` parameter to also get the details of related records, such as the account or the home directory.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to use this.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma-separated list of relationships to include in response. Possible values include **homeResource** and **ownerAccount**. (optional)</param>
            <returns>Task of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.GetUserByIdAsyncWithHttpInfo(System.Nullable{System.Decimal},System.String,System.String,System.String)">
            <summary>
            Get info for a user Get the details for a specific user. You can use the `include` parameter to also get the details of related records, such as the account or the home directory.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to use this.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="evApiKey">API Key</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="include">Comma-separated list of relationships to include in response. Possible values include **homeResource** and **ownerAccount**. (optional)</param>
            <returns>Task of ApiResponse (UserResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.ListUsers(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of users Get a list of the users in your account. There are three main types of searches you can do with this method:  1. Search for a user by username. If you provide the `username` parameter in your call, then only the user who exactly matches that username will be in the list of matches. Any other parameters are ignored. 1. Search for a user by individual filter fields (`nickname`,`email`,`role`,`status`,`homeDir`). Users in the list will be ones who match all of the filters you choose to search by. For example, you could look for users with the \"admin\" `role` AND `email` addresses ending in \"*@acme.com\".  1. Search for a user by search string. If you provide the `search` parameter, users whose nickname OR email OR role OR homeDir match value your provide.  **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - The homeDir is the full path to the user's home directory, not a resource ID or hash.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches. (optional)</param>
            <param name="nickname">Nickname to search for. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="email">Email to search for. Ignored if `username` is provided. Supports wildcard searches (optional)</param>
            <param name="role">Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user** (optional)</param>
            <param name="status">Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked.  (optional)</param>
            <param name="homeDir">Path for user's home directory. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="search">Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="offset">Starting user record in the result set. Can be used for pagination. (optional)</param>
            <param name="sort">Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  Valid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified** (optional)</param>
            <param name="limit">Number of users to return. Can be used for pagination. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**. (optional)</param>
            <returns>UserCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.ListUsersWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of users Get a list of the users in your account. There are three main types of searches you can do with this method:  1. Search for a user by username. If you provide the `username` parameter in your call, then only the user who exactly matches that username will be in the list of matches. Any other parameters are ignored. 1. Search for a user by individual filter fields (`nickname`,`email`,`role`,`status`,`homeDir`). Users in the list will be ones who match all of the filters you choose to search by. For example, you could look for users with the \"admin\" `role` AND `email` addresses ending in \"*@acme.com\".  1. Search for a user by search string. If you provide the `search` parameter, users whose nickname OR email OR role OR homeDir match value your provide.  **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - The homeDir is the full path to the user's home directory, not a resource ID or hash.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches. (optional)</param>
            <param name="nickname">Nickname to search for. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="email">Email to search for. Ignored if `username` is provided. Supports wildcard searches (optional)</param>
            <param name="role">Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user** (optional)</param>
            <param name="status">Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked.  (optional)</param>
            <param name="homeDir">Path for user's home directory. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="search">Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="offset">Starting user record in the result set. Can be used for pagination. (optional)</param>
            <param name="sort">Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  Valid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified** (optional)</param>
            <param name="limit">Number of users to return. Can be used for pagination. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**. (optional)</param>
            <returns>ApiResponse of UserCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.ListUsersAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of users Get a list of the users in your account. There are three main types of searches you can do with this method:  1. Search for a user by username. If you provide the `username` parameter in your call, then only the user who exactly matches that username will be in the list of matches. Any other parameters are ignored. 1. Search for a user by individual filter fields (`nickname`,`email`,`role`,`status`,`homeDir`). Users in the list will be ones who match all of the filters you choose to search by. For example, you could look for users with the \"admin\" `role` AND `email` addresses ending in \"*@acme.com\".  1. Search for a user by search string. If you provide the `search` parameter, users whose nickname OR email OR role OR homeDir match value your provide.  **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - The homeDir is the full path to the user's home directory, not a resource ID or hash.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches. (optional)</param>
            <param name="nickname">Nickname to search for. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="email">Email to search for. Ignored if `username` is provided. Supports wildcard searches (optional)</param>
            <param name="role">Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user** (optional)</param>
            <param name="status">Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked.  (optional)</param>
            <param name="homeDir">Path for user's home directory. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="search">Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="offset">Starting user record in the result set. Can be used for pagination. (optional)</param>
            <param name="sort">Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  Valid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified** (optional)</param>
            <param name="limit">Number of users to return. Can be used for pagination. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**. (optional)</param>
            <returns>Task of UserCollectionResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.ListUsersAsyncWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of users Get a list of the users in your account. There are three main types of searches you can do with this method:  1. Search for a user by username. If you provide the `username` parameter in your call, then only the user who exactly matches that username will be in the list of matches. Any other parameters are ignored. 1. Search for a user by individual filter fields (`nickname`,`email`,`role`,`status`,`homeDir`). Users in the list will be ones who match all of the filters you choose to search by. For example, you could look for users with the \"admin\" `role` AND `email` addresses ending in \"*@acme.com\".  1. Search for a user by search string. If you provide the `search` parameter, users whose nickname OR email OR role OR homeDir match value your provide.  **Notes:**  - You must be an [admin-level user](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) to use this. - The homeDir is the full path to the user's home directory, not a resource ID or hash.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="username">The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches. (optional)</param>
            <param name="nickname">Nickname to search for. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="email">Email to search for. Ignored if `username` is provided. Supports wildcard searches (optional)</param>
            <param name="role">Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user** (optional)</param>
            <param name="status">Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked.  (optional)</param>
            <param name="homeDir">Path for user's home directory. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="search">Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches. (optional)</param>
            <param name="offset">Starting user record in the result set. Can be used for pagination. (optional)</param>
            <param name="sort">Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.  Valid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified** (optional)</param>
            <param name="limit">Number of users to return. Can be used for pagination. (optional)</param>
            <param name="include">Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**. (optional)</param>
            <returns>Task of ApiResponse (UserCollectionResponse)</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.UpdateUser(System.String,System.String,System.Nullable{System.Decimal},IO.Swagger.Model.Body6)">
            <summary>
            Update a user Updates the settings for the user. Note that the unique key for this API call is our internal ID, and _not_ the username, as the username can be changed.  In the request body, you should only send the parameters for values that you wish to change for the user.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to edit other users. If you have user-level access, you can only update your own user settings. - You cannot edit a master user with this method.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="body"> (optional)</param>
            <returns>UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.UpdateUserWithHttpInfo(System.String,System.String,System.Nullable{System.Decimal},IO.Swagger.Model.Body6)">
            <summary>
            Update a user Updates the settings for the user. Note that the unique key for this API call is our internal ID, and _not_ the username, as the username can be changed.  In the request body, you should only send the parameters for values that you wish to change for the user.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to edit other users. If you have user-level access, you can only update your own user settings. - You cannot edit a master user with this method.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="body"> (optional)</param>
            <returns>ApiResponse of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.UpdateUserAsync(System.String,System.String,System.Nullable{System.Decimal},IO.Swagger.Model.Body6)">
            <summary>
            Update a user Updates the settings for the user. Note that the unique key for this API call is our internal ID, and _not_ the username, as the username can be changed.  In the request body, you should only send the parameters for values that you wish to change for the user.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to edit other users. If you have user-level access, you can only update your own user settings. - You cannot edit a master user with this method.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="body"> (optional)</param>
            <returns>Task of UserResponse</returns>
        </member>
        <member name="M:IO.Swagger.Api.UsersApi.UpdateUserAsyncWithHttpInfo(System.String,System.String,System.Nullable{System.Decimal},IO.Swagger.Model.Body6)">
            <summary>
            Update a user Updates the settings for the user. Note that the unique key for this API call is our internal ID, and _not_ the username, as the username can be changed.  In the request body, you should only send the parameters for values that you wish to change for the user.  **Notes:**  - You must have [admin or master](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions) access to edit other users. If you have user-level access, you can only update your own user settings. - You cannot edit a master user with this method.
            </summary>
            <exception cref="T:IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="evApiKey">API key required to make the API call.</param>
            <param name="evAccessToken">Access token required to make the API call.</param>
            <param name="id">The user's ID. Note that this is our internal ID, and _not the username_. You can obtain it by calling the [GET /users](#operation/listUsers) method.</param>
            <param name="body"> (optional)</param>
            <returns>Task of ApiResponse (UserResponse)</returns>
        </member>
        <member name="P:IO.Swagger.Api.UsersApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:IO.Swagger.Api.UsersApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:IO.Swagger.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient"/> class
            with default configuration.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor(IO.Swagger.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient"/> class
            with default base path (https://accountname.exavault.com/api/v2).
            </summary>
            <param name="config">An instance of Configuration.</param>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiClient"/> class
            with default configuration.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="F:IO.Swagger.Client.ApiClient.Default">
            <summary>
            Gets or sets the default API client for making HTTP calls.
            </summary>
            <value>The default API client.</value>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            </summary>
            <param name="fromObject">Object to be casted</param>
            <param name="toObject">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs. 
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A list of KeyValuePairs</returns>
        </member>
        <member name="M:IO.Swagger.Client.ApiClient.IsCollection(System.Object)">
            <summary>
            Check if generic object is a collection.
            </summary>
            <param name="value"></param>
            <returns>True if object is a collection type</returns>
        </member>
        <member name="P:IO.Swagger.Client.ApiClient.Configuration">
            <summary>
            Gets or sets an instance of the IReadableConfiguration.
            </summary>
            <value>An instance of the IReadableConfiguration.</value>
            <remarks>
            <see cref="T:IO.Swagger.Client.IReadableConfiguration"/> helps us to avoid modifying possibly global
            configuration values from within a given client. It does not guarantee thread-safety
            of the <see cref="P:IO.Swagger.Client.ApiClient.Configuration"/> instance in any way.
            </remarks>
        </member>
        <member name="P:IO.Swagger.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="T:IO.Swagger.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:IO.Swagger.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:IO.Swagger.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="T:IO.Swagger.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.ApiResponse`1"/> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:IO.Swagger.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:IO.Swagger.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="T:IO.Swagger.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time foramt.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Timeout">
            <summary>
            Gets the HTTP connection timeout (in milliseconds)
            </summary>
            <value>HTTP connection timeout.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:IO.Swagger.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="F:IO.Swagger.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:IO.Swagger.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:IO.Swagger.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="F:IO.Swagger.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:IO.Swagger.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration"/> class
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor(IO.Swagger.Client.ApiClient,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.Configuration"/> class with different settings
            </summary>
            <param name="apiClient">Api client</param>
            <param name="defaultHeader">Dictionary of default HTTP header</param>
            <param name="username">Username</param>
            <param name="password">Password</param>
            <param name="accessToken">accessToken</param>
            <param name="apiKey">Dictionary of API key</param>
            <param name="apiKeyPrefix">Dictionary of API key prefix</param>
            <param name="tempFolderPath">Temp folder path</param>
            <param name="dateTimeFormat">DateTime format string</param>
            <param name="timeout">HTTP connection timeout (in milliseconds)</param>
            <param name="userAgent">HTTP user agent</param>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.#ctor(IO.Swagger.Client.ApiClient)">
            <summary>
            Initializes a new instance of the Configuration class.
            </summary>
            <param name="apiClient">Api client.</param>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.AddDefaultHeader(System.String,System.String)">
            <summary>
            Add default header.
            </summary>
            <param name="key">Header field name.</param>
            <param name="value">Header field value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.CreateApiClient">
            <summary>
            Creates a new <see cref="P:IO.Swagger.Client.Configuration.ApiClient"/> based on this <see cref="T:IO.Swagger.Client.Configuration"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:IO.Swagger.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Default">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiClient">
            <summary>
            Gets an instance of an ApiClient for this configuration
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Timeout">
            <summary>
            Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
            </summary>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.AccessToken">
            <summary>
            Gets or sets the access token for OAuth2 authentication.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="P:IO.Swagger.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="T:IO.Swagger.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:IO.Swagger.Client.GlobalConfiguration">
            <summary>
            <see cref="T:IO.Swagger.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .swagger-codegen-ignore file.
            </remarks>
        </member>
        <member name="T:IO.Swagger.Client.SwaggerDateConverter">
            <summary>
            Formatter for 'date' swagger formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
            </summary>
        </member>
        <member name="M:IO.Swagger.Client.SwaggerDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Client.SwaggerDateConverter"/> class.
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Account">
            <summary>
            Object contains all account properties.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Account.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.Account.TypeEnum},IO.Swagger.Model.AccountAttributes,IO.Swagger.Model.MasterUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Account"/> class.
            </summary>
            <param name="id">Account ID.</param>
            <param name="type">Type of item. \"account\".</param>
            <param name="attributes">attributes.</param>
            <param name="relationships">relationships.</param>
        </member>
        <member name="M:IO.Swagger.Model.Account.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Account.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Account.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Account.Equals(IO.Swagger.Model.Account)">
            <summary>
            Returns true if Account instances are equal
            </summary>
            <param name="input">Instance of Account to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Account.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Account.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Account.Type">
            <summary>
            Type of item. \&quot;account\&quot;
            </summary>
            <value>Type of item. \&quot;account\&quot;</value>
        </member>
        <member name="P:IO.Swagger.Model.Account.Id">
            <summary>
            Account ID
            </summary>
            <value>Account ID</value>
        </member>
        <member name="P:IO.Swagger.Model.Account.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Account.Relationships">
            <summary>
            Gets or Sets Relationships
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Account.TypeEnum">
            <summary>
            Type of item. \&quot;account\&quot;
            </summary>
            <value>Type of item. \&quot;account\&quot;</value>
        </member>
        <member name="F:IO.Swagger.Model.Account.TypeEnum.Account">
            <summary>
            Enum Account for value: account
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.AccountAllowedIpRanges">
            <summary>
            AccountAllowedIpRanges
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.AccountAllowedIpRanges.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.AccountAllowedIpRanges"/> class.
            </summary>
            <param name="ipStart">ipStart.</param>
            <param name="ipEnd">ipEnd.</param>
        </member>
        <member name="M:IO.Swagger.Model.AccountAllowedIpRanges.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAllowedIpRanges.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAllowedIpRanges.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAllowedIpRanges.Equals(IO.Swagger.Model.AccountAllowedIpRanges)">
            <summary>
            Returns true if AccountAllowedIpRanges instances are equal
            </summary>
            <param name="input">Instance of AccountAllowedIpRanges to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAllowedIpRanges.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAllowedIpRanges.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.AccountAllowedIpRanges.IpStart">
            <summary>
            Gets or Sets IpStart
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AccountAllowedIpRanges.IpEnd">
            <summary>
            Gets or Sets IpEnd
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.AccountAttributes">
            <summary>
            AccountAttributes
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributes.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.AccountAttributes.StatusEnum},System.Nullable{System.Boolean},System.Nullable{System.Boolean},IO.Swagger.Model.Quota,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.List{System.String},System.Collections.Generic.List{IO.Swagger.Model.AccountAttributesAllowedIp},IO.Swagger.Model.CallbackSettings,IO.Swagger.Model.BrandingSettings,System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.AccountAttributes"/> class.
            </summary>
            <param name="accountName">Name of the account.</param>
            <param name="username">Name of account's master user.</param>
            <param name="maxUsers">Maximum number of users the account can have. This can be increased by contacting ExaVault Support..</param>
            <param name="userCount">Current number of users on the account..</param>
            <param name="status">Account status flag. A one (1) means the account is active; zero (0) means it is suspended..</param>
            <param name="branding">Branding flag. Set to `true` if the account has branding functionality enabled..</param>
            <param name="customDomain">Custom domain flag. Set to `true` if account type allows custom domain functionality..</param>
            <param name="quota">quota.</param>
            <param name="secureOnly">Flag to indicate whether the account disables connections via insecure protocols (e.g. FTP). Set to `true` to disable all traffic over port 21..</param>
            <param name="complexPasswords">Flag to indicate whether the account requires complex passwords. Set to `true` to require complex passwords on all users and shares..</param>
            <param name="showReferralLinks">Flag to indicate showing of referrals links in the account. Set to `true` to include marketing messages in share invitations..</param>
            <param name="externalDomains">Custom domain used to brand this account..</param>
            <param name="allowedIp">Range of IP addresses allowed to access this account..</param>
            <param name="callbackSettings">callbackSettings.</param>
            <param name="brandingSettings">brandingSettings.</param>
            <param name="clientId">(ExaVault Use Only) Internal ID of the account in CMS..</param>
            <param name="welcomeEmailContent">Content of welcome email each new user will receive..</param>
            <param name="welcomeEmailSubject">Subject of welcome email each new user will receive..</param>
            <param name="customSignature">Custom signature for all account emails users or recipients will receive..</param>
            <param name="accountOnboarding">Whether the web application onboarding help is enabled for new users in the account..</param>
            <param name="created">Timestamp of account creation..</param>
            <param name="modified">Timestamp of account modification..</param>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributes.Equals(IO.Swagger.Model.AccountAttributes)">
            <summary>
            Returns true if AccountAttributes instances are equal
            </summary>
            <param name="input">Instance of AccountAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.Status">
            <summary>
            Account status flag. A one (1) means the account is active; zero (0) means it is suspended.
            </summary>
            <value>Account status flag. A one (1) means the account is active; zero (0) means it is suspended.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.AccountName">
            <summary>
            Name of the account
            </summary>
            <value>Name of the account</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.Username">
            <summary>
            Name of account&#x27;s master user
            </summary>
            <value>Name of account&#x27;s master user</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.MaxUsers">
            <summary>
            Maximum number of users the account can have. This can be increased by contacting ExaVault Support.
            </summary>
            <value>Maximum number of users the account can have. This can be increased by contacting ExaVault Support.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.UserCount">
            <summary>
            Current number of users on the account.
            </summary>
            <value>Current number of users on the account.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.Branding">
            <summary>
            Branding flag. Set to &#x60;true&#x60; if the account has branding functionality enabled.
            </summary>
            <value>Branding flag. Set to &#x60;true&#x60; if the account has branding functionality enabled.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.CustomDomain">
            <summary>
            Custom domain flag. Set to &#x60;true&#x60; if account type allows custom domain functionality.
            </summary>
            <value>Custom domain flag. Set to &#x60;true&#x60; if account type allows custom domain functionality.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.Quota">
            <summary>
            Gets or Sets Quota
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.SecureOnly">
            <summary>
            Flag to indicate whether the account disables connections via insecure protocols (e.g. FTP). Set to &#x60;true&#x60; to disable all traffic over port 21.
            </summary>
            <value>Flag to indicate whether the account disables connections via insecure protocols (e.g. FTP). Set to &#x60;true&#x60; to disable all traffic over port 21.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.ComplexPasswords">
            <summary>
            Flag to indicate whether the account requires complex passwords. Set to &#x60;true&#x60; to require complex passwords on all users and shares.
            </summary>
            <value>Flag to indicate whether the account requires complex passwords. Set to &#x60;true&#x60; to require complex passwords on all users and shares.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.ShowReferralLinks">
            <summary>
            Flag to indicate showing of referrals links in the account. Set to &#x60;true&#x60; to include marketing messages in share invitations.
            </summary>
            <value>Flag to indicate showing of referrals links in the account. Set to &#x60;true&#x60; to include marketing messages in share invitations.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.ExternalDomains">
            <summary>
            Custom domain used to brand this account.
            </summary>
            <value>Custom domain used to brand this account.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.AllowedIp">
            <summary>
            Range of IP addresses allowed to access this account.
            </summary>
            <value>Range of IP addresses allowed to access this account.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.CallbackSettings">
            <summary>
            Gets or Sets CallbackSettings
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.BrandingSettings">
            <summary>
            Gets or Sets BrandingSettings
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.ClientId">
            <summary>
            (ExaVault Use Only) Internal ID of the account in CMS.
            </summary>
            <value>(ExaVault Use Only) Internal ID of the account in CMS.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.WelcomeEmailContent">
            <summary>
            Content of welcome email each new user will receive.
            </summary>
            <value>Content of welcome email each new user will receive.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.WelcomeEmailSubject">
            <summary>
            Subject of welcome email each new user will receive.
            </summary>
            <value>Subject of welcome email each new user will receive.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.CustomSignature">
            <summary>
            Custom signature for all account emails users or recipients will receive.
            </summary>
            <value>Custom signature for all account emails users or recipients will receive.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.AccountOnboarding">
            <summary>
            Whether the web application onboarding help is enabled for new users in the account.
            </summary>
            <value>Whether the web application onboarding help is enabled for new users in the account.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.Created">
            <summary>
            Timestamp of account creation.
            </summary>
            <value>Timestamp of account creation.</value>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributes.Modified">
            <summary>
            Timestamp of account modification.
            </summary>
            <value>Timestamp of account modification.</value>
        </member>
        <member name="T:IO.Swagger.Model.AccountAttributes.StatusEnum">
            <summary>
            Account status flag. A one (1) means the account is active; zero (0) means it is suspended.
            </summary>
            <value>Account status flag. A one (1) means the account is active; zero (0) means it is suspended.</value>
        </member>
        <member name="F:IO.Swagger.Model.AccountAttributes.StatusEnum.NUMBER_1">
            <summary>
            Enum NUMBER_1 for value: 1
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.AccountAttributes.StatusEnum.NUMBER_0">
            <summary>
            Enum NUMBER_0 for value: 0
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.AccountAttributesAllowedIp">
            <summary>
            AccountAttributesAllowedIp
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributesAllowedIp.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.AccountAttributesAllowedIp"/> class.
            </summary>
            <param name="ipStart">ipStart.</param>
            <param name="ipEnd">ipEnd.</param>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributesAllowedIp.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributesAllowedIp.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributesAllowedIp.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributesAllowedIp.Equals(IO.Swagger.Model.AccountAttributesAllowedIp)">
            <summary>
            Returns true if AccountAttributesAllowedIp instances are equal
            </summary>
            <param name="input">Instance of AccountAttributesAllowedIp to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributesAllowedIp.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountAttributesAllowedIp.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributesAllowedIp.IpStart">
            <summary>
            Gets or Sets IpStart
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AccountAttributesAllowedIp.IpEnd">
            <summary>
            Gets or Sets IpEnd
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.AccountResponse">
            <summary>
            AccountResponse
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.AccountResponse.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.Account,System.Collections.Generic.List{IO.Swagger.Model.OneOfAccountResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.AccountResponse"/> class.
            </summary>
            <param name="responseStatus">responseStatus.</param>
            <param name="data">data.</param>
            <param name="included">Array can contain objects specified in include param of the get call e.g User object.</param>
        </member>
        <member name="M:IO.Swagger.Model.AccountResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountResponse.Equals(IO.Swagger.Model.AccountResponse)">
            <summary>
            Returns true if AccountResponse instances are equal
            </summary>
            <param name="input">Instance of AccountResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.AccountResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.AccountResponse.ResponseStatus">
            <summary>
            Gets or Sets ResponseStatus
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AccountResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.AccountResponse.Included">
            <summary>
            Array can contain objects specified in include param of the get call e.g User object
            </summary>
            <value>Array can contain objects specified in include param of the get call e.g User object</value>
        </member>
        <member name="T:IO.Swagger.Model.Body">
            <summary>
            Body
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body"/> class.
            </summary>
            <param name="name">Name of the email list.  (required).</param>
            <param name="emails">Array of email addresses to include in the email list.  (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.Body.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body.Equals(IO.Swagger.Model.Body)">
            <summary>
            Returns true if Body instances are equal
            </summary>
            <param name="input">Instance of Body to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body.Name">
            <summary>
            Name of the email list. 
            </summary>
            <value>Name of the email list. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body.Emails">
            <summary>
            Array of email addresses to include in the email list. 
            </summary>
            <value>Array of email addresses to include in the email list. </value>
        </member>
        <member name="T:IO.Swagger.Model.Body1">
            <summary>
            Body1
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body1.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body1"/> class.
            </summary>
            <param name="name">Name of the email list..</param>
            <param name="emails">Array of email addresses to add to the email list..</param>
        </member>
        <member name="M:IO.Swagger.Model.Body1.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body1.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body1.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body1.Equals(IO.Swagger.Model.Body1)">
            <summary>
            Returns true if Body1 instances are equal
            </summary>
            <param name="input">Instance of Body1 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body1.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body1.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body1.Name">
            <summary>
            Name of the email list.
            </summary>
            <value>Name of the email list.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body1.Emails">
            <summary>
            Array of email addresses to add to the email list.
            </summary>
            <value>Array of email addresses to add to the email list.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body10">
            <summary>
            Body10
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body10.#ctor(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body10"/> class.
            </summary>
            <param name="resources">Resource identifiers for file(s)/folder(s) to include in new zip file (required).</param>
            <param name="parentResource">Full path to folder new archive will be created in. If left blank, \"/\" will be used..</param>
            <param name="archiveName">Name of the zip archive to create. If left blank, current date will be used..</param>
        </member>
        <member name="M:IO.Swagger.Model.Body10.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body10.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body10.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body10.Equals(IO.Swagger.Model.Body10)">
            <summary>
            Returns true if Body10 instances are equal
            </summary>
            <param name="input">Instance of Body10 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body10.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body10.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body10.Resources">
            <summary>
            Resource identifiers for file(s)/folder(s) to include in new zip file
            </summary>
            <value>Resource identifiers for file(s)/folder(s) to include in new zip file</value>
        </member>
        <member name="P:IO.Swagger.Model.Body10.ParentResource">
            <summary>
            Full path to folder new archive will be created in. If left blank, \&quot;/\&quot; will be used.
            </summary>
            <value>Full path to folder new archive will be created in. If left blank, \&quot;/\&quot; will be used.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body10.ArchiveName">
            <summary>
            Name of the zip archive to create. If left blank, current date will be used.
            </summary>
            <value>Name of the zip archive to create. If left blank, current date will be used.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body11">
            <summary>
            Body11
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body11.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body11"/> class.
            </summary>
            <param name="resource">Resource identifier of zip archive to be extracted. (required).</param>
            <param name="parentResource">Resource identifier for folder files should be extracted to. (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.Body11.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body11.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body11.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body11.Equals(IO.Swagger.Model.Body11)">
            <summary>
            Returns true if Body11 instances are equal
            </summary>
            <param name="input">Instance of Body11 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body11.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body11.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body11.Resource">
            <summary>
            Resource identifier of zip archive to be extracted.
            </summary>
            <value>Resource identifier of zip archive to be extracted.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body11.ParentResource">
            <summary>
            Resource identifier for folder files should be extracted to.
            </summary>
            <value>Resource identifier for folder files should be extracted to.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body12">
            <summary>
            Body12
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body12.#ctor(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body12"/> class.
            </summary>
            <param name="resources">Resource identifier(s) of items to be copied to a new location (required).</param>
            <param name="parentResource">Resource identifier for folder where items will be copied to. (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.Body12.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body12.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body12.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body12.Equals(IO.Swagger.Model.Body12)">
            <summary>
            Returns true if Body12 instances are equal
            </summary>
            <param name="input">Instance of Body12 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body12.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body12.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body12.Resources">
            <summary>
            Resource identifier(s) of items to be copied to a new location
            </summary>
            <value>Resource identifier(s) of items to be copied to a new location</value>
        </member>
        <member name="P:IO.Swagger.Model.Body12.ParentResource">
            <summary>
            Resource identifier for folder where items will be copied to.
            </summary>
            <value>Resource identifier for folder where items will be copied to.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body13">
            <summary>
            Body13
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body13.#ctor(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body13"/> class.
            </summary>
            <param name="resources">Array containing file/folder paths to move. (required).</param>
            <param name="parentResource">Remote destination path to move files/folders to. (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.Body13.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body13.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body13.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body13.Equals(IO.Swagger.Model.Body13)">
            <summary>
            Returns true if Body13 instances are equal
            </summary>
            <param name="input">Instance of Body13 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body13.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body13.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body13.Resources">
            <summary>
            Array containing file/folder paths to move.
            </summary>
            <value>Array containing file/folder paths to move.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body13.ParentResource">
            <summary>
            Remote destination path to move files/folders to.
            </summary>
            <value>Remote destination path to move files/folders to.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body14">
            <summary>
            Body14
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body14.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body14"/> class.
            </summary>
            <param name="_file">_file.</param>
        </member>
        <member name="M:IO.Swagger.Model.Body14.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body14.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body14.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body14.Equals(IO.Swagger.Model.Body14)">
            <summary>
            Returns true if Body14 instances are equal
            </summary>
            <param name="input">Instance of Body14 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body14.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body14.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body14.File">
            <summary>
            Gets or Sets File
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Body15">
            <summary>
            Body15
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body15.#ctor(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body15"/> class.
            </summary>
            <param name="emails">emails (required).</param>
            <param name="message">message (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.Body15.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body15.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body15.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body15.Equals(IO.Swagger.Model.Body15)">
            <summary>
            Returns true if Body15 instances are equal
            </summary>
            <param name="input">Instance of Body15 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body15.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body15.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body15.Emails">
            <summary>
            Gets or Sets Emails
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Body15.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Body16">
            <summary>
            Body16
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body16.#ctor(IO.Swagger.Model.Body16.TypeEnum,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean},System.Collections.Generic.List{IO.Swagger.Model.SharesRecipients},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body16"/> class.
            </summary>
            <param name="type">The type of share to create. See above for a description of each. (required).</param>
            <param name="name">A name for the share. This will be visible on the page that recipients visit.  (required).</param>
            <param name="resources">Array of resources for this share. See details on [how to specify resources](#section/Identifying-Resources) above.  **shared_folder** and **receive** shares must have only one `resource`, which is a directory that does not have a current share attached.  **send** shares may have multiple `resource` parameters. You can also leave this parameter null if you are planning to upload files to the send. If you are planning to upload files to the send that are not yet in your account, you will also need to call the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to finish the send operation. .</param>
            <param name="accessMode">Array of permissions that describes what people can do when they visit the share. Valid options are `upload` `download` `modify` and `delete`  Not all permissions work with all shares - **receive** shares must always have the permission to **upload** and never provide a method for visitors to **download**.  If you are creating a share of type **send** and plan to upload files from your own computer before completing the send with [POST /shares/complete-send/{id}](#operation/completeDirectSend), use the access mode **upload** (required).</param>
            <param name="embed">Whether this share can be embedded within a web page..</param>
            <param name="recipients">People you want to invite to the share. **Note**: unless you also set the `subject` and `message` for the new share, invitation emails will not be sent to these recipients..</param>
            <param name="expiration">Expiration date for the share. If someone attempts to use the share after this date, they will receive an error that the share is not available..</param>
            <param name="hasNotification">Whether delivery receipts should be sent..</param>
            <param name="isPublic">Whether someone can visit the share without following a personalized recipient link..</param>
            <param name="message">The message to be included in email invitations for your recipients. Ignored if you have not also provided `recipients` and `subject`.</param>
            <param name="notificationEmails">Emails that will receive delivery receipts for this share. `hasNotification` must be **true** for delivery receipts will be sent..</param>
            <param name="password">Set a password for recipients to access the share. All recipients will use the same password..</param>
            <param name="requireEmail">True if recipients must provide their email to view the share..</param>
            <param name="subject">Subject to use on emails inviting recipients to the share. Ignored if you have not also provided `recipients` and a `message`.</param>
            <param name="fileDropCreateFolders">Only used for **receive** shares. If true, uploads will be automatically placed into sub-folders of the folder, named after the chosen field on your form. .</param>
            <param name="sendingLocalFiles">Use this only for **send** shares. Flag to indicate that you are going to upload additional files from your computer to the share. If this is **true**, you will also need to use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) call to finish setting up your share after the files are uploaded..</param>
        </member>
        <member name="M:IO.Swagger.Model.Body16.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body16.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body16.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body16.Equals(IO.Swagger.Model.Body16)">
            <summary>
            Returns true if Body16 instances are equal
            </summary>
            <param name="input">Instance of Body16 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body16.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body16.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body16.Type">
            <summary>
            The type of share to create. See above for a description of each.
            </summary>
            <value>The type of share to create. See above for a description of each.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.Name">
            <summary>
            A name for the share. This will be visible on the page that recipients visit. 
            </summary>
            <value>A name for the share. This will be visible on the page that recipients visit. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.Resources">
            <summary>
            Array of resources for this share. See details on [how to specify resources](#section/Identifying-Resources) above.  **shared_folder** and **receive** shares must have only one &#x60;resource&#x60;, which is a directory that does not have a current share attached.  **send** shares may have multiple &#x60;resource&#x60; parameters. You can also leave this parameter null if you are planning to upload files to the send. If you are planning to upload files to the send that are not yet in your account, you will also need to call the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to finish the send operation. 
            </summary>
            <value>Array of resources for this share. See details on [how to specify resources](#section/Identifying-Resources) above.  **shared_folder** and **receive** shares must have only one &#x60;resource&#x60;, which is a directory that does not have a current share attached.  **send** shares may have multiple &#x60;resource&#x60; parameters. You can also leave this parameter null if you are planning to upload files to the send. If you are planning to upload files to the send that are not yet in your account, you will also need to call the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to finish the send operation. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.AccessMode">
            <summary>
            Array of permissions that describes what people can do when they visit the share. Valid options are &#x60;upload&#x60; &#x60;download&#x60; &#x60;modify&#x60; and &#x60;delete&#x60;  Not all permissions work with all shares - **receive** shares must always have the permission to **upload** and never provide a method for visitors to **download**.  If you are creating a share of type **send** and plan to upload files from your own computer before completing the send with [POST /shares/complete-send/{id}](#operation/completeDirectSend), use the access mode **upload**
            </summary>
            <value>Array of permissions that describes what people can do when they visit the share. Valid options are &#x60;upload&#x60; &#x60;download&#x60; &#x60;modify&#x60; and &#x60;delete&#x60;  Not all permissions work with all shares - **receive** shares must always have the permission to **upload** and never provide a method for visitors to **download**.  If you are creating a share of type **send** and plan to upload files from your own computer before completing the send with [POST /shares/complete-send/{id}](#operation/completeDirectSend), use the access mode **upload**</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.Embed">
            <summary>
            Whether this share can be embedded within a web page.
            </summary>
            <value>Whether this share can be embedded within a web page.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.Recipients">
            <summary>
            People you want to invite to the share. **Note**: unless you also set the &#x60;subject&#x60; and &#x60;message&#x60; for the new share, invitation emails will not be sent to these recipients.
            </summary>
            <value>People you want to invite to the share. **Note**: unless you also set the &#x60;subject&#x60; and &#x60;message&#x60; for the new share, invitation emails will not be sent to these recipients.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.Expiration">
            <summary>
            Expiration date for the share. If someone attempts to use the share after this date, they will receive an error that the share is not available.
            </summary>
            <value>Expiration date for the share. If someone attempts to use the share after this date, they will receive an error that the share is not available.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.HasNotification">
            <summary>
            Whether delivery receipts should be sent.
            </summary>
            <value>Whether delivery receipts should be sent.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.IsPublic">
            <summary>
            Whether someone can visit the share without following a personalized recipient link.
            </summary>
            <value>Whether someone can visit the share without following a personalized recipient link.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.Message">
            <summary>
            The message to be included in email invitations for your recipients. Ignored if you have not also provided &#x60;recipients&#x60; and &#x60;subject&#x60;
            </summary>
            <value>The message to be included in email invitations for your recipients. Ignored if you have not also provided &#x60;recipients&#x60; and &#x60;subject&#x60;</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.NotificationEmails">
            <summary>
            Emails that will receive delivery receipts for this share. &#x60;hasNotification&#x60; must be **true** for delivery receipts will be sent.
            </summary>
            <value>Emails that will receive delivery receipts for this share. &#x60;hasNotification&#x60; must be **true** for delivery receipts will be sent.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.Password">
            <summary>
            Set a password for recipients to access the share. All recipients will use the same password.
            </summary>
            <value>Set a password for recipients to access the share. All recipients will use the same password.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.RequireEmail">
            <summary>
            True if recipients must provide their email to view the share.
            </summary>
            <value>True if recipients must provide their email to view the share.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.Subject">
            <summary>
            Subject to use on emails inviting recipients to the share. Ignored if you have not also provided &#x60;recipients&#x60; and a &#x60;message&#x60;
            </summary>
            <value>Subject to use on emails inviting recipients to the share. Ignored if you have not also provided &#x60;recipients&#x60; and a &#x60;message&#x60;</value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.FileDropCreateFolders">
            <summary>
            Only used for **receive** shares. If true, uploads will be automatically placed into sub-folders of the folder, named after the chosen field on your form. 
            </summary>
            <value>Only used for **receive** shares. If true, uploads will be automatically placed into sub-folders of the folder, named after the chosen field on your form. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body16.SendingLocalFiles">
            <summary>
            Use this only for **send** shares. Flag to indicate that you are going to upload additional files from your computer to the share. If this is **true**, you will also need to use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) call to finish setting up your share after the files are uploaded.
            </summary>
            <value>Use this only for **send** shares. Flag to indicate that you are going to upload additional files from your computer to the share. If this is **true**, you will also need to use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) call to finish setting up your share after the files are uploaded.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body16.TypeEnum">
            <summary>
            The type of share to create. See above for a description of each.
            </summary>
            <value>The type of share to create. See above for a description of each.</value>
        </member>
        <member name="F:IO.Swagger.Model.Body16.TypeEnum.Sharedfolder">
            <summary>
            Enum Sharedfolder for value: shared_folder
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body16.TypeEnum.Receive">
            <summary>
            Enum Receive for value: receive
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body16.TypeEnum.Send">
            <summary>
            Enum Send for value: send
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Body17">
            <summary>
            Body17
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body17.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean},System.Collections.Generic.List{IO.Swagger.Model.SharesRecipients},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.List{System.String},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body17"/> class.
            </summary>
            <param name="name">Name of the share..</param>
            <param name="resources">Array of resources for this share. See details on [how to specify resources](#section/Identifying-Resources) above.  **shared_folder** and **receive** shares must have only one `resource`, which is a directory that does not have a current share attached.  **send** shares may have multiple `resource` parameters.   **NOTE**: Sending this parameter will **REPLACE** the existing resources with the resources included in this request..</param>
            <param name="accessMode">What visitors who view this share can do. Valid options include **download**, **upload**, **delete**, **modify**.</param>
            <param name="embed">Whether the share can be embedded in another web page..</param>
            <param name="recipients">People you want to invite to the share.   **Note**: unless you also set the `subject` and `message` for the new share, invitation emails will not be sent to these recipients.  **Note**: Recipients in this list will **REPLACE** the recipients already assigned to this share. .</param>
            <param name="expiration">New expiration date and time for the share.</param>
            <param name="hasNotification">Whether delivery receipts should be sent for this share..</param>
            <param name="isPublic">Whether people can visit the share without following a link from an invitation email.</param>
            <param name="message">Message content to use for emails inviting recipients to the share. Ignored if you have not also provided `recipients` and a `subject`.</param>
            <param name="notificationEmails">List of email addresses to send delivery receipts to. Ignored if `hasNotification` is false. .</param>
            <param name="password">New password for the share. To leave the password unchanged, do not send this parameter..</param>
            <param name="requireEmail">Whether visitors to the share will be required to enter their email in order to access the share..</param>
            <param name="subject">Subject to use on emails inviting recipients to the share. Ignored if you have not also provided `recipients` and a `message`.</param>
            <param name="fileDropCreateFolders">Whether uploads to a receive folder should be automatically placed into subfolders. See our [receive folder documentation](/docs/account/05-file-sharing/05-form-builder#advanced-form-settings).</param>
            <param name="status">New status for the share. You can set an active share to inactive by setting the status to **0**.</param>
        </member>
        <member name="M:IO.Swagger.Model.Body17.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body17.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body17.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body17.Equals(IO.Swagger.Model.Body17)">
            <summary>
            Returns true if Body17 instances are equal
            </summary>
            <param name="input">Instance of Body17 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body17.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body17.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body17.Name">
            <summary>
            Name of the share.
            </summary>
            <value>Name of the share.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.Resources">
            <summary>
            Array of resources for this share. See details on [how to specify resources](#section/Identifying-Resources) above.  **shared_folder** and **receive** shares must have only one &#x60;resource&#x60;, which is a directory that does not have a current share attached.  **send** shares may have multiple &#x60;resource&#x60; parameters.   **NOTE**: Sending this parameter will **REPLACE** the existing resources with the resources included in this request.
            </summary>
            <value>Array of resources for this share. See details on [how to specify resources](#section/Identifying-Resources) above.  **shared_folder** and **receive** shares must have only one &#x60;resource&#x60;, which is a directory that does not have a current share attached.  **send** shares may have multiple &#x60;resource&#x60; parameters.   **NOTE**: Sending this parameter will **REPLACE** the existing resources with the resources included in this request.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.AccessMode">
            <summary>
            What visitors who view this share can do. Valid options include **download**, **upload**, **delete**, **modify**
            </summary>
            <value>What visitors who view this share can do. Valid options include **download**, **upload**, **delete**, **modify**</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.Embed">
            <summary>
            Whether the share can be embedded in another web page.
            </summary>
            <value>Whether the share can be embedded in another web page.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.Recipients">
            <summary>
            People you want to invite to the share.   **Note**: unless you also set the &#x60;subject&#x60; and &#x60;message&#x60; for the new share, invitation emails will not be sent to these recipients.  **Note**: Recipients in this list will **REPLACE** the recipients already assigned to this share. 
            </summary>
            <value>People you want to invite to the share.   **Note**: unless you also set the &#x60;subject&#x60; and &#x60;message&#x60; for the new share, invitation emails will not be sent to these recipients.  **Note**: Recipients in this list will **REPLACE** the recipients already assigned to this share. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.Expiration">
            <summary>
            New expiration date and time for the share
            </summary>
            <value>New expiration date and time for the share</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.HasNotification">
            <summary>
            Whether delivery receipts should be sent for this share.
            </summary>
            <value>Whether delivery receipts should be sent for this share.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.IsPublic">
            <summary>
            Whether people can visit the share without following a link from an invitation email
            </summary>
            <value>Whether people can visit the share without following a link from an invitation email</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.Message">
            <summary>
            Message content to use for emails inviting recipients to the share. Ignored if you have not also provided &#x60;recipients&#x60; and a &#x60;subject&#x60;
            </summary>
            <value>Message content to use for emails inviting recipients to the share. Ignored if you have not also provided &#x60;recipients&#x60; and a &#x60;subject&#x60;</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.NotificationEmails">
            <summary>
            List of email addresses to send delivery receipts to. Ignored if &#x60;hasNotification&#x60; is false. 
            </summary>
            <value>List of email addresses to send delivery receipts to. Ignored if &#x60;hasNotification&#x60; is false. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.Password">
            <summary>
            New password for the share. To leave the password unchanged, do not send this parameter.
            </summary>
            <value>New password for the share. To leave the password unchanged, do not send this parameter.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.RequireEmail">
            <summary>
            Whether visitors to the share will be required to enter their email in order to access the share.
            </summary>
            <value>Whether visitors to the share will be required to enter their email in order to access the share.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.Subject">
            <summary>
            Subject to use on emails inviting recipients to the share. Ignored if you have not also provided &#x60;recipients&#x60; and a &#x60;message&#x60;
            </summary>
            <value>Subject to use on emails inviting recipients to the share. Ignored if you have not also provided &#x60;recipients&#x60; and a &#x60;message&#x60;</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.FileDropCreateFolders">
            <summary>
            Whether uploads to a receive folder should be automatically placed into subfolders. See our [receive folder documentation](/docs/account/05-file-sharing/05-form-builder#advanced-form-settings)
            </summary>
            <value>Whether uploads to a receive folder should be automatically placed into subfolders. See our [receive folder documentation](/docs/account/05-file-sharing/05-form-builder#advanced-form-settings)</value>
        </member>
        <member name="P:IO.Swagger.Model.Body17.Status">
            <summary>
            New status for the share. You can set an active share to inactive by setting the status to **0**
            </summary>
            <value>New status for the share. You can set an active share to inactive by setting the status to **0**</value>
        </member>
        <member name="T:IO.Swagger.Model.Body18">
            <summary>
            Body18
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body18.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body18"/> class.
            </summary>
            <param name="recipientId">ID number of recipient to send a new invitation to..</param>
        </member>
        <member name="M:IO.Swagger.Model.Body18.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body18.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body18.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body18.Equals(IO.Swagger.Model.Body18)">
            <summary>
            Returns true if Body18 instances are equal
            </summary>
            <param name="input">Instance of Body18 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body18.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body18.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body18.RecipientId">
            <summary>
            ID number of recipient to send a new invitation to.
            </summary>
            <value>ID number of recipient to send a new invitation to.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body2">
            <summary>
            CSS Styles of the form.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body2.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.FormsidElements},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body2"/> class.
            </summary>
            <param name="formDescription">Set a description for the form that will be visible to recipients. .</param>
            <param name="submitButtonText">Text to be displayed on the submission button..</param>
            <param name="successMessage">Text to be displayed when a recipient has submitted the form. .</param>
            <param name="elements">elements.</param>
            <param name="cssStyles">cssStyles.</param>
        </member>
        <member name="M:IO.Swagger.Model.Body2.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body2.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body2.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body2.Equals(IO.Swagger.Model.Body2)">
            <summary>
            Returns true if Body2 instances are equal
            </summary>
            <param name="input">Instance of Body2 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body2.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body2.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body2.FormDescription">
            <summary>
            Set a description for the form that will be visible to recipients. 
            </summary>
            <value>Set a description for the form that will be visible to recipients. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body2.SubmitButtonText">
            <summary>
            Text to be displayed on the submission button.
            </summary>
            <value>Text to be displayed on the submission button.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body2.SuccessMessage">
            <summary>
            Text to be displayed when a recipient has submitted the form. 
            </summary>
            <value>Text to be displayed when a recipient has submitted the form. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body2.Elements">
            <summary>
            Gets or Sets Elements
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Body2.CssStyles">
            <summary>
            Gets or Sets CssStyles
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Body3">
            <summary>
            Body3
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body3.#ctor(System.Nullable{IO.Swagger.Model.Body3.ActionEnum},System.Collections.Generic.List{System.String},System.Nullable{System.Boolean},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body3"/> class.
            </summary>
            <param name="action">Type of action be notified about. Notifications will only be sent for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete).</param>
            <param name="usernames">Determines which users' actions should trigger the notification.   Rather than listing  individual users, you can also use 3 special options:  - **notice\\_user\\_all** for activity by any user or share recipient - **notice\\_user\\_all\\_users** for activity only by user accounts - **notice\\_user\\_all\\_recipient** for activity only by share recipients.</param>
            <param name="sendEmail">Whether an email should be sent to the recipients when matching activity happens..</param>
            <param name="recipients">Email addresses to send notification emails to. If empty, sends to the current user's email address..</param>
            <param name="message">Custom message to insert into the notification emails, along with the matching activity..</param>
        </member>
        <member name="M:IO.Swagger.Model.Body3.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body3.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body3.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body3.Equals(IO.Swagger.Model.Body3)">
            <summary>
            Returns true if Body3 instances are equal
            </summary>
            <param name="input">Instance of Body3 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body3.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body3.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body3.Action">
            <summary>
            Type of action be notified about. Notifications will only be sent for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)
            </summary>
            <value>Type of action be notified about. Notifications will only be sent for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)</value>
        </member>
        <member name="P:IO.Swagger.Model.Body3.Usernames">
            <summary>
            Determines which users&#x27; actions should trigger the notification.   Rather than listing  individual users, you can also use 3 special options:  - **notice\\_user\\_all** for activity by any user or share recipient - **notice\\_user\\_all\\_users** for activity only by user accounts - **notice\\_user\\_all\\_recipient** for activity only by share recipients
            </summary>
            <value>Determines which users&#x27; actions should trigger the notification.   Rather than listing  individual users, you can also use 3 special options:  - **notice\\_user\\_all** for activity by any user or share recipient - **notice\\_user\\_all\\_users** for activity only by user accounts - **notice\\_user\\_all\\_recipient** for activity only by share recipients</value>
        </member>
        <member name="P:IO.Swagger.Model.Body3.SendEmail">
            <summary>
            Whether an email should be sent to the recipients when matching activity happens.
            </summary>
            <value>Whether an email should be sent to the recipients when matching activity happens.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body3.Recipients">
            <summary>
            Email addresses to send notification emails to. If empty, sends to the current user&#x27;s email address.
            </summary>
            <value>Email addresses to send notification emails to. If empty, sends to the current user&#x27;s email address.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body3.Message">
            <summary>
            Custom message to insert into the notification emails, along with the matching activity.
            </summary>
            <value>Custom message to insert into the notification emails, along with the matching activity.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body3.ActionEnum">
            <summary>
            Type of action be notified about. Notifications will only be sent for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)
            </summary>
            <value>Type of action be notified about. Notifications will only be sent for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)</value>
        </member>
        <member name="F:IO.Swagger.Model.Body3.ActionEnum.Upload">
            <summary>
            Enum Upload for value: upload
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body3.ActionEnum.Download">
            <summary>
            Enum Download for value: download
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body3.ActionEnum.Delete">
            <summary>
            Enum Delete for value: delete
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body3.ActionEnum.All">
            <summary>
            Enum All for value: all
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Body4">
            <summary>
            Body4
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body4.#ctor(IO.Swagger.Model.Body4.TypeEnum,System.String,IO.Swagger.Model.Body4.ActionEnum,System.Collections.Generic.List{System.String},System.Nullable{System.Boolean},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body4"/> class.
            </summary>
            <param name="type">What kind of notification you're making. Valid choices are:  - **file** to monitor activity for a file resource - **folder** to monitor activity for a folder resource (required).</param>
            <param name="resource">Resources for this notification. See details on [how to specify resources](#section/Identifying-Resources) above. (required).</param>
            <param name="action">Type of action be notified about. Notifications will only be fired for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete) (required).</param>
            <param name="usernames">Determines which users' actions should trigger the notification.   Rather than listing  individual users, you can also use 3 special options:  - **notice\\_user\\_all** for activity by any user or share recipient - **notice\\_user\\_all\\_users** for activity only by user accounts - **notice\\_user\\_all\\_recipient** for activity only by share recipients (required).</param>
            <param name="sendEmail">Set to true if the user should be notified by email when the notification is triggered. (required).</param>
            <param name="recipients">Email addresses to send notification emails to. If not specified, sends to the current user's email address..</param>
            <param name="message">Custom message to include in notification emails..</param>
        </member>
        <member name="M:IO.Swagger.Model.Body4.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body4.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body4.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body4.Equals(IO.Swagger.Model.Body4)">
            <summary>
            Returns true if Body4 instances are equal
            </summary>
            <param name="input">Instance of Body4 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body4.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body4.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body4.Type">
            <summary>
            What kind of notification you&#x27;re making. Valid choices are:  - **file** to monitor activity for a file resource - **folder** to monitor activity for a folder resource
            </summary>
            <value>What kind of notification you&#x27;re making. Valid choices are:  - **file** to monitor activity for a file resource - **folder** to monitor activity for a folder resource</value>
        </member>
        <member name="P:IO.Swagger.Model.Body4.Action">
            <summary>
            Type of action be notified about. Notifications will only be fired for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)
            </summary>
            <value>Type of action be notified about. Notifications will only be fired for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)</value>
        </member>
        <member name="P:IO.Swagger.Model.Body4.Resource">
            <summary>
            Resources for this notification. See details on [how to specify resources](#section/Identifying-Resources) above.
            </summary>
            <value>Resources for this notification. See details on [how to specify resources](#section/Identifying-Resources) above.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body4.Usernames">
            <summary>
            Determines which users&#x27; actions should trigger the notification.   Rather than listing  individual users, you can also use 3 special options:  - **notice\\_user\\_all** for activity by any user or share recipient - **notice\\_user\\_all\\_users** for activity only by user accounts - **notice\\_user\\_all\\_recipient** for activity only by share recipients
            </summary>
            <value>Determines which users&#x27; actions should trigger the notification.   Rather than listing  individual users, you can also use 3 special options:  - **notice\\_user\\_all** for activity by any user or share recipient - **notice\\_user\\_all\\_users** for activity only by user accounts - **notice\\_user\\_all\\_recipient** for activity only by share recipients</value>
        </member>
        <member name="P:IO.Swagger.Model.Body4.SendEmail">
            <summary>
            Set to true if the user should be notified by email when the notification is triggered.
            </summary>
            <value>Set to true if the user should be notified by email when the notification is triggered.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body4.Recipients">
            <summary>
            Email addresses to send notification emails to. If not specified, sends to the current user&#x27;s email address.
            </summary>
            <value>Email addresses to send notification emails to. If not specified, sends to the current user&#x27;s email address.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body4.Message">
            <summary>
            Custom message to include in notification emails.
            </summary>
            <value>Custom message to include in notification emails.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body4.TypeEnum">
            <summary>
            What kind of notification you&#x27;re making. Valid choices are:  - **file** to monitor activity for a file resource - **folder** to monitor activity for a folder resource
            </summary>
            <value>What kind of notification you&#x27;re making. Valid choices are:  - **file** to monitor activity for a file resource - **folder** to monitor activity for a folder resource</value>
        </member>
        <member name="F:IO.Swagger.Model.Body4.TypeEnum.File">
            <summary>
            Enum File for value: file
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body4.TypeEnum.Folder">
            <summary>
            Enum Folder for value: folder
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Body4.ActionEnum">
            <summary>
            Type of action be notified about. Notifications will only be fired for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)
            </summary>
            <value>Type of action be notified about. Notifications will only be fired for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)</value>
        </member>
        <member name="F:IO.Swagger.Model.Body4.ActionEnum.Upload">
            <summary>
            Enum Upload for value: upload
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body4.ActionEnum.Download">
            <summary>
            Enum Download for value: download
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body4.ActionEnum.Delete">
            <summary>
            Enum Delete for value: delete
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body4.ActionEnum.All">
            <summary>
            Enum All for value: all
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Body5">
            <summary>
            Body5
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body5.#ctor(System.String,System.String,System.String,System.String,System.String,IO.Swagger.Model.Body5.RoleEnum,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body5"/> class.
            </summary>
            <param name="username">Username of the user to create. This should follow standard username conventions - spaces are not allowed, etc. We do allow email addresses as usernames.  **Note** Usernames must be unique across all ExaVault accounts. (required).</param>
            <param name="nickname">An optional nickname (e.g. 'David from Sales')..</param>
            <param name="homeResource">Resource identifier for the user's home folder. See details on [how to specify resources](#section/Identifying-Resources) above.  The user will be locked to this directory and unable to move 'up' in the account. If the folder does not exist in the account, it will be created when the user is created.   This setting is ignored for users with the `role` **admin**. (required).</param>
            <param name="email">Email address for the user (required).</param>
            <param name="password">Password for the user (required).</param>
            <param name="role">The type of user to create. Note that admin users cannot have a `homeResource` other than '/', and will have full permissions, but you must provide at least \"download,upload,list,delete\" in the `permissions` parameter. (required).</param>
            <param name="permissions">A CSV string of [user permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). For example: **upload,download,list**. Note that users will be unable to see any files in the account unless you include **list** permission.   Valid permissions are **list**, **download**, **upload**, **modify**, **delete**, **changePassword**, **share**, **notification**, **viewFormData**, **deleteFormData**  (required).</param>
            <param name="timeZone">Time zone, used for accurate time display within the application. See &lt;a href='https://php.net/manual/en/timezones.php' target='blank'&gt;this page&lt;/a&gt; for allowed values.  (required).</param>
            <param name="expiration">Optional timestamp when the user should expire, formatted in date-time..</param>
            <param name="locked">If true, the user will not be able to log in.</param>
            <param name="welcomeEmail">If **true**, send this new user a welcome email upon creation. The content of the welcome email can be configured with the [PATCH /accounts](#operation/updateAccount) method..</param>
            <param name="onboarding">Set this to **true** to enable extra help popups in the web file manager for this user..</param>
        </member>
        <member name="M:IO.Swagger.Model.Body5.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body5.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body5.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body5.Equals(IO.Swagger.Model.Body5)">
            <summary>
            Returns true if Body5 instances are equal
            </summary>
            <param name="input">Instance of Body5 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body5.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body5.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body5.Role">
            <summary>
            The type of user to create. Note that admin users cannot have a &#x60;homeResource&#x60; other than &#x27;/&#x27;, and will have full permissions, but you must provide at least \&quot;download,upload,list,delete\&quot; in the &#x60;permissions&#x60; parameter.
            </summary>
            <value>The type of user to create. Note that admin users cannot have a &#x60;homeResource&#x60; other than &#x27;/&#x27;, and will have full permissions, but you must provide at least \&quot;download,upload,list,delete\&quot; in the &#x60;permissions&#x60; parameter.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.Username">
            <summary>
            Username of the user to create. This should follow standard username conventions - spaces are not allowed, etc. We do allow email addresses as usernames.  **Note** Usernames must be unique across all ExaVault accounts.
            </summary>
            <value>Username of the user to create. This should follow standard username conventions - spaces are not allowed, etc. We do allow email addresses as usernames.  **Note** Usernames must be unique across all ExaVault accounts.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.Nickname">
            <summary>
            An optional nickname (e.g. &#x27;David from Sales&#x27;).
            </summary>
            <value>An optional nickname (e.g. &#x27;David from Sales&#x27;).</value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.HomeResource">
            <summary>
            Resource identifier for the user&#x27;s home folder. See details on [how to specify resources](#section/Identifying-Resources) above.  The user will be locked to this directory and unable to move &#x27;up&#x27; in the account. If the folder does not exist in the account, it will be created when the user is created.   This setting is ignored for users with the &#x60;role&#x60; **admin**.
            </summary>
            <value>Resource identifier for the user&#x27;s home folder. See details on [how to specify resources](#section/Identifying-Resources) above.  The user will be locked to this directory and unable to move &#x27;up&#x27; in the account. If the folder does not exist in the account, it will be created when the user is created.   This setting is ignored for users with the &#x60;role&#x60; **admin**.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.Email">
            <summary>
            Email address for the user
            </summary>
            <value>Email address for the user</value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.Password">
            <summary>
            Password for the user
            </summary>
            <value>Password for the user</value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.Permissions">
            <summary>
            A CSV string of [user permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). For example: **upload,download,list**. Note that users will be unable to see any files in the account unless you include **list** permission.   Valid permissions are **list**, **download**, **upload**, **modify**, **delete**, **changePassword**, **share**, **notification**, **viewFormData**, **deleteFormData** 
            </summary>
            <value>A CSV string of [user permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). For example: **upload,download,list**. Note that users will be unable to see any files in the account unless you include **list** permission.   Valid permissions are **list**, **download**, **upload**, **modify**, **delete**, **changePassword**, **share**, **notification**, **viewFormData**, **deleteFormData** </value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.TimeZone">
            <summary>
            Time zone, used for accurate time display within the application. See &lt;a href&#x3D;&#x27;https://php.net/manual/en/timezones.php&#x27; target&#x3D;&#x27;blank&#x27;&gt;this page&lt;/a&gt; for allowed values. 
            </summary>
            <value>Time zone, used for accurate time display within the application. See &lt;a href&#x3D;&#x27;https://php.net/manual/en/timezones.php&#x27; target&#x3D;&#x27;blank&#x27;&gt;this page&lt;/a&gt; for allowed values. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.Expiration">
            <summary>
            Optional timestamp when the user should expire, formatted in date-time.
            </summary>
            <value>Optional timestamp when the user should expire, formatted in date-time.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.Locked">
            <summary>
            If true, the user will not be able to log in
            </summary>
            <value>If true, the user will not be able to log in</value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.WelcomeEmail">
            <summary>
            If **true**, send this new user a welcome email upon creation. The content of the welcome email can be configured with the [PATCH /accounts](#operation/updateAccount) method.
            </summary>
            <value>If **true**, send this new user a welcome email upon creation. The content of the welcome email can be configured with the [PATCH /accounts](#operation/updateAccount) method.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body5.Onboarding">
            <summary>
            Set this to **true** to enable extra help popups in the web file manager for this user.
            </summary>
            <value>Set this to **true** to enable extra help popups in the web file manager for this user.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body5.RoleEnum">
            <summary>
            The type of user to create. Note that admin users cannot have a &#x60;homeResource&#x60; other than &#x27;/&#x27;, and will have full permissions, but you must provide at least \&quot;download,upload,list,delete\&quot; in the &#x60;permissions&#x60; parameter.
            </summary>
            <value>The type of user to create. Note that admin users cannot have a &#x60;homeResource&#x60; other than &#x27;/&#x27;, and will have full permissions, but you must provide at least \&quot;download,upload,list,delete\&quot; in the &#x60;permissions&#x60; parameter.</value>
        </member>
        <member name="F:IO.Swagger.Model.Body5.RoleEnum.User">
            <summary>
            Enum User for value: user
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body5.RoleEnum.Admin">
            <summary>
            Enum Admin for value: admin
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Body6">
            <summary>
            Body6
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body6.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{IO.Swagger.Model.Body6.RoleEnum},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body6"/> class.
            </summary>
            <param name="username">New username for the user. This should follow standard username conventions - spaces are not allowed, etc. We do allow email addresses as usernames.  **Note** Usernames must be unique across all ExaVault accounts..</param>
            <param name="nickname">An optional nickname (e.g. 'David from Sales')..</param>
            <param name="homeResource">Resource identifier for the user's home folder. See details on [how to specify resources](#section/Identifying-Resources) above.  The user will be locked to this directory and unable to move 'up' in the account. If the folder does not exist in the account, it will be created when the user logs in.  This setting is ignored for users with the `role` **admin**..</param>
            <param name="email">Email address for the user.</param>
            <param name="password">New password for the user.</param>
            <param name="role">The type of user (**admin** or **user**). Note that admin users cannot have a `homeResource` other than '/', and will have full permissions, but you must provide at least \"download,upload,list,delete\" in the `permissions` parameter..</param>
            <param name="permissions">A CSV string of [user permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). For example: **upload,download,list**. Note that users will be unable to see any files in the account unless you include **list** permission.   Valid permissions are **list**, **download**, **upload**, **modify**, **delete**, **changePassword**, **share**, **notification**, **viewFormData**, **deleteFormData** .</param>
            <param name="timeZone">Time zone, used for accurate time display within the application. See &lt;a href='https://php.net/manual/en/timezones.php' target='blank'&gt;this page&lt;/a&gt; for allowed values. .</param>
            <param name="expiration">Optional timestamp when the user should expire..</param>
            <param name="locked">If true, the user will be prevented from logging in.</param>
            <param name="onboarding">Set this to **true** to enable extra help popups in the web file manager for this user..</param>
        </member>
        <member name="M:IO.Swagger.Model.Body6.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body6.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body6.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body6.Equals(IO.Swagger.Model.Body6)">
            <summary>
            Returns true if Body6 instances are equal
            </summary>
            <param name="input">Instance of Body6 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body6.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body6.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body6.Role">
            <summary>
            The type of user (**admin** or **user**). Note that admin users cannot have a &#x60;homeResource&#x60; other than &#x27;/&#x27;, and will have full permissions, but you must provide at least \&quot;download,upload,list,delete\&quot; in the &#x60;permissions&#x60; parameter.
            </summary>
            <value>The type of user (**admin** or **user**). Note that admin users cannot have a &#x60;homeResource&#x60; other than &#x27;/&#x27;, and will have full permissions, but you must provide at least \&quot;download,upload,list,delete\&quot; in the &#x60;permissions&#x60; parameter.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.Username">
            <summary>
            New username for the user. This should follow standard username conventions - spaces are not allowed, etc. We do allow email addresses as usernames.  **Note** Usernames must be unique across all ExaVault accounts.
            </summary>
            <value>New username for the user. This should follow standard username conventions - spaces are not allowed, etc. We do allow email addresses as usernames.  **Note** Usernames must be unique across all ExaVault accounts.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.Nickname">
            <summary>
            An optional nickname (e.g. &#x27;David from Sales&#x27;).
            </summary>
            <value>An optional nickname (e.g. &#x27;David from Sales&#x27;).</value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.HomeResource">
            <summary>
            Resource identifier for the user&#x27;s home folder. See details on [how to specify resources](#section/Identifying-Resources) above.  The user will be locked to this directory and unable to move &#x27;up&#x27; in the account. If the folder does not exist in the account, it will be created when the user logs in.  This setting is ignored for users with the &#x60;role&#x60; **admin**.
            </summary>
            <value>Resource identifier for the user&#x27;s home folder. See details on [how to specify resources](#section/Identifying-Resources) above.  The user will be locked to this directory and unable to move &#x27;up&#x27; in the account. If the folder does not exist in the account, it will be created when the user logs in.  This setting is ignored for users with the &#x60;role&#x60; **admin**.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.Email">
            <summary>
            Email address for the user
            </summary>
            <value>Email address for the user</value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.Password">
            <summary>
            New password for the user
            </summary>
            <value>New password for the user</value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.Permissions">
            <summary>
            A CSV string of [user permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). For example: **upload,download,list**. Note that users will be unable to see any files in the account unless you include **list** permission.   Valid permissions are **list**, **download**, **upload**, **modify**, **delete**, **changePassword**, **share**, **notification**, **viewFormData**, **deleteFormData** 
            </summary>
            <value>A CSV string of [user permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). For example: **upload,download,list**. Note that users will be unable to see any files in the account unless you include **list** permission.   Valid permissions are **list**, **download**, **upload**, **modify**, **delete**, **changePassword**, **share**, **notification**, **viewFormData**, **deleteFormData** </value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.TimeZone">
            <summary>
            Time zone, used for accurate time display within the application. See &lt;a href&#x3D;&#x27;https://php.net/manual/en/timezones.php&#x27; target&#x3D;&#x27;blank&#x27;&gt;this page&lt;/a&gt; for allowed values. 
            </summary>
            <value>Time zone, used for accurate time display within the application. See &lt;a href&#x3D;&#x27;https://php.net/manual/en/timezones.php&#x27; target&#x3D;&#x27;blank&#x27;&gt;this page&lt;/a&gt; for allowed values. </value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.Expiration">
            <summary>
            Optional timestamp when the user should expire.
            </summary>
            <value>Optional timestamp when the user should expire.</value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.Locked">
            <summary>
            If true, the user will be prevented from logging in
            </summary>
            <value>If true, the user will be prevented from logging in</value>
        </member>
        <member name="P:IO.Swagger.Model.Body6.Onboarding">
            <summary>
            Set this to **true** to enable extra help popups in the web file manager for this user.
            </summary>
            <value>Set this to **true** to enable extra help popups in the web file manager for this user.</value>
        </member>
        <member name="T:IO.Swagger.Model.Body6.RoleEnum">
            <summary>
            The type of user (**admin** or **user**). Note that admin users cannot have a &#x60;homeResource&#x60; other than &#x27;/&#x27;, and will have full permissions, but you must provide at least \&quot;download,upload,list,delete\&quot; in the &#x60;permissions&#x60; parameter.
            </summary>
            <value>The type of user (**admin** or **user**). Note that admin users cannot have a &#x60;homeResource&#x60; other than &#x27;/&#x27;, and will have full permissions, but you must provide at least \&quot;download,upload,list,delete\&quot; in the &#x60;permissions&#x60; parameter.</value>
        </member>
        <member name="F:IO.Swagger.Model.Body6.RoleEnum.User">
            <summary>
            Enum User for value: user
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.Body6.RoleEnum.Admin">
            <summary>
            Enum Admin for value: admin
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Body7">
            <summary>
            Body7
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body7.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body7"/> class.
            </summary>
            <param name="newName">The new name for the resource (file or folder)..</param>
        </member>
        <member name="M:IO.Swagger.Model.Body7.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body7.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body7.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body7.Equals(IO.Swagger.Model.Body7)">
            <summary>
            Returns true if Body7 instances are equal
            </summary>
            <param name="input">Instance of Body7 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body7.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body7.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body7.NewName">
            <summary>
            The new name for the resource (file or folder).
            </summary>
            <value>The new name for the resource (file or folder).</value>
        </member>
        <member name="T:IO.Swagger.Model.Body8">
            <summary>
            Body8
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body8.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body8"/> class.
            </summary>
            <param name="path">Path to the newly created folder including new ame.</param>
            <param name="folderName">Name of the folder to create. Required if **path** is not used.</param>
            <param name="parentResource">Resource identifier where to create a folder. Required if **path** is not used.</param>
        </member>
        <member name="M:IO.Swagger.Model.Body8.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body8.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body8.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body8.Equals(IO.Swagger.Model.Body8)">
            <summary>
            Returns true if Body8 instances are equal
            </summary>
            <param name="input">Instance of Body8 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body8.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body8.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body8.Path">
            <summary>
            Path to the newly created folder including new ame
            </summary>
            <value>Path to the newly created folder including new ame</value>
        </member>
        <member name="P:IO.Swagger.Model.Body8.FolderName">
            <summary>
            Name of the folder to create. Required if **path** is not used
            </summary>
            <value>Name of the folder to create. Required if **path** is not used</value>
        </member>
        <member name="P:IO.Swagger.Model.Body8.ParentResource">
            <summary>
            Resource identifier where to create a folder. Required if **path** is not used
            </summary>
            <value>Resource identifier where to create a folder. Required if **path** is not used</value>
        </member>
        <member name="T:IO.Swagger.Model.Body9">
            <summary>
            Body9
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Body9.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Body9"/> class.
            </summary>
            <param name="resources">Resource identifiers of items to delete. (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.Body9.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body9.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body9.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body9.Equals(IO.Swagger.Model.Body9)">
            <summary>
            Returns true if Body9 instances are equal
            </summary>
            <param name="input">Instance of Body9 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body9.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Body9.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Body9.Resources">
            <summary>
            Resource identifiers of items to delete.
            </summary>
            <value>Resource identifiers of items to delete.</value>
        </member>
        <member name="T:IO.Swagger.Model.BrandingSettings">
            <summary>
            BrandingSettings
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.BrandingSettings"/> class.
            </summary>
            <param name="companyName">null.</param>
            <param name="customEmail">null.</param>
            <param name="logo">null.</param>
            <param name="logoExt">null.</param>
            <param name="theme">null.</param>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings.Equals(IO.Swagger.Model.BrandingSettings)">
            <summary>
            Returns true if BrandingSettings instances are equal
            </summary>
            <param name="input">Instance of BrandingSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.BrandingSettings.CompanyName">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="P:IO.Swagger.Model.BrandingSettings.CustomEmail">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="P:IO.Swagger.Model.BrandingSettings.Logo">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="P:IO.Swagger.Model.BrandingSettings.LogoExt">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="P:IO.Swagger.Model.BrandingSettings.Theme">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="T:IO.Swagger.Model.BrandingSettings1">
            <summary>
            BrandingSettings1
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings1.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.BrandingSettings1"/> class.
            </summary>
            <param name="companyName">Custom company name to include in copyright and title bar..</param>
            <param name="customEmail">Address to use as sender of email messages generated by ExaVault.</param>
            <param name="theme">Color scheme for web file manager. Valid options are **default**, **light** and **dark**.</param>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings1.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings1.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings1.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings1.Equals(IO.Swagger.Model.BrandingSettings1)">
            <summary>
            Returns true if BrandingSettings1 instances are equal
            </summary>
            <param name="input">Instance of BrandingSettings1 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings1.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.BrandingSettings1.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.BrandingSettings1.CompanyName">
            <summary>
            Custom company name to include in copyright and title bar.
            </summary>
            <value>Custom company name to include in copyright and title bar.</value>
        </member>
        <member name="P:IO.Swagger.Model.BrandingSettings1.CustomEmail">
            <summary>
            Address to use as sender of email messages generated by ExaVault
            </summary>
            <value>Address to use as sender of email messages generated by ExaVault</value>
        </member>
        <member name="P:IO.Swagger.Model.BrandingSettings1.Theme">
            <summary>
            Color scheme for web file manager. Valid options are **default**, **light** and **dark**
            </summary>
            <value>Color scheme for web file manager. Valid options are **default**, **light** and **dark**</value>
        </member>
        <member name="T:IO.Swagger.Model.CallbackSettings">
            <summary>
            CallbackSettings
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings.#ctor(System.String,System.String,System.String,IO.Swagger.Model.CallbackSettingsTriggers)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.CallbackSettings"/> class.
            </summary>
            <param name="accountId">ID of the account these settings belongs to..</param>
            <param name="endpointUrl">Where callback settings object sent to..</param>
            <param name="token">Verification token for the request authentication..</param>
            <param name="triggers">triggers.</param>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings.Equals(IO.Swagger.Model.CallbackSettings)">
            <summary>
            Returns true if CallbackSettings instances are equal
            </summary>
            <param name="input">Instance of CallbackSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings.AccountId">
            <summary>
            ID of the account these settings belongs to.
            </summary>
            <value>ID of the account these settings belongs to.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings.EndpointUrl">
            <summary>
            Where callback settings object sent to.
            </summary>
            <value>Where callback settings object sent to.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings.Token">
            <summary>
            Verification token for the request authentication.
            </summary>
            <value>Verification token for the request authentication.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings.Triggers">
            <summary>
            Gets or Sets Triggers
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.CallbackSettings1">
            <summary>
            CallbackSettings1
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1.#ctor(System.String,IO.Swagger.Model.CallbackSettings1Triggers)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.CallbackSettings1"/> class.
            </summary>
            <param name="endpointUrl">endpointUrl.</param>
            <param name="triggers">triggers.</param>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1.Equals(IO.Swagger.Model.CallbackSettings1)">
            <summary>
            Returns true if CallbackSettings1 instances are equal
            </summary>
            <param name="input">Instance of CallbackSettings1 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1.EndpointUrl">
            <summary>
            Gets or Sets EndpointUrl
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1.Triggers">
            <summary>
            Gets or Sets Triggers
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.CallbackSettings1Triggers">
            <summary>
            Whether a webhook should be sent for various operations.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1Triggers.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.CallbackSettings1Triggers"/> class.
            </summary>
            <param name="download">download.</param>
            <param name="upload">upload.</param>
            <param name="delete">delete.</param>
            <param name="createFolder">createFolder.</param>
            <param name="rename">rename.</param>
            <param name="move">move.</param>
            <param name="copy">copy.</param>
            <param name="compress">compress.</param>
            <param name="extract">extract.</param>
            <param name="shareFolder">shareFolder.</param>
            <param name="sendFiles">sendFiles.</param>
            <param name="receiveFiles">receiveFiles.</param>
            <param name="updateShare">updateShare.</param>
            <param name="updateReceive">updateReceive.</param>
            <param name="deleteSend">deleteSend.</param>
            <param name="deleteReceive">deleteReceive.</param>
            <param name="deleteShare">deleteShare.</param>
            <param name="createNotification">createNotification.</param>
            <param name="updateNotification">updateNotification.</param>
            <param name="deleteNotification">deleteNotification.</param>
            <param name="createUser">createUser.</param>
            <param name="updateUser">updateUser.</param>
            <param name="deleteUser">deleteUser.</param>
            <param name="userConnect">userConnect.</param>
            <param name="userDisconnect">userDisconnect.</param>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1Triggers.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1Triggers.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1Triggers.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1Triggers.Equals(IO.Swagger.Model.CallbackSettings1Triggers)">
            <summary>
            Returns true if CallbackSettings1Triggers instances are equal
            </summary>
            <param name="input">Instance of CallbackSettings1Triggers to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1Triggers.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettings1Triggers.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.Download">
            <summary>
            Gets or Sets Download
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.Upload">
            <summary>
            Gets or Sets Upload
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.Delete">
            <summary>
            Gets or Sets Delete
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.CreateFolder">
            <summary>
            Gets or Sets CreateFolder
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.Rename">
            <summary>
            Gets or Sets Rename
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.Move">
            <summary>
            Gets or Sets Move
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.Copy">
            <summary>
            Gets or Sets Copy
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.Compress">
            <summary>
            Gets or Sets Compress
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.Extract">
            <summary>
            Gets or Sets Extract
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.ShareFolder">
            <summary>
            Gets or Sets ShareFolder
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.SendFiles">
            <summary>
            Gets or Sets SendFiles
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.ReceiveFiles">
            <summary>
            Gets or Sets ReceiveFiles
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.UpdateShare">
            <summary>
            Gets or Sets UpdateShare
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.UpdateReceive">
            <summary>
            Gets or Sets UpdateReceive
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.DeleteSend">
            <summary>
            Gets or Sets DeleteSend
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.DeleteReceive">
            <summary>
            Gets or Sets DeleteReceive
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.DeleteShare">
            <summary>
            Gets or Sets DeleteShare
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.CreateNotification">
            <summary>
            Gets or Sets CreateNotification
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.UpdateNotification">
            <summary>
            Gets or Sets UpdateNotification
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.DeleteNotification">
            <summary>
            Gets or Sets DeleteNotification
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.CreateUser">
            <summary>
            Gets or Sets CreateUser
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.UpdateUser">
            <summary>
            Gets or Sets UpdateUser
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.DeleteUser">
            <summary>
            Gets or Sets DeleteUser
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.UserConnect">
            <summary>
            Gets or Sets UserConnect
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettings1Triggers.UserDisconnect">
            <summary>
            Gets or Sets UserDisconnect
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.CallbackSettingsTriggers">
            <summary>
            CallbackSettingsTriggers
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettingsTriggers.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.CallbackSettingsTriggers"/> class.
            </summary>
            <param name="upload">Trigger callback on upload..</param>
            <param name="download">Trigger callback on download..</param>
            <param name="delete">Trigger callback on delete..</param>
            <param name="createFolder">Trigger callback on fodler create..</param>
            <param name="rename">Trigger callback on rename..</param>
            <param name="move">Trigger callback on move..</param>
            <param name="copy">Trigger callback on copy..</param>
            <param name="compress">Trigger callback on compress..</param>
            <param name="extract">Trigger callback on extract..</param>
            <param name="shareFolder">Trigger callback on share folder create..</param>
            <param name="sendFiles">Trigger callback on send files..</param>
            <param name="receiveFiles">Trigger callback on receive folder create..</param>
            <param name="updateShare">Trigger callback on share folder update..</param>
            <param name="updateReceive">Trigger callback on receive folder update..</param>
            <param name="deleteSend">Trigger callback on send files delete..</param>
            <param name="deleteReceive">Trigger callback on receive folder delete..</param>
            <param name="deleteShare">Trigger callback on share folder delete..</param>
            <param name="createNotification">Trigger callback on notification create..</param>
            <param name="updateNotification">Trigger callback on notification update..</param>
            <param name="deleteNotification">Trigger callback on notification delete..</param>
            <param name="createUser">Trigger callback on user create..</param>
            <param name="updateUser">Trigger callback on user update..</param>
            <param name="deleteUser">Trigger callback on user delete..</param>
            <param name="userConnect">Trigger callback on user connect..</param>
            <param name="userDisconnect">Trigger callback on user disconnect..</param>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettingsTriggers.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettingsTriggers.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettingsTriggers.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettingsTriggers.Equals(IO.Swagger.Model.CallbackSettingsTriggers)">
            <summary>
            Returns true if CallbackSettingsTriggers instances are equal
            </summary>
            <param name="input">Instance of CallbackSettingsTriggers to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettingsTriggers.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.CallbackSettingsTriggers.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.Upload">
            <summary>
            Trigger callback on upload.
            </summary>
            <value>Trigger callback on upload.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.Download">
            <summary>
            Trigger callback on download.
            </summary>
            <value>Trigger callback on download.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.Delete">
            <summary>
            Trigger callback on delete.
            </summary>
            <value>Trigger callback on delete.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.CreateFolder">
            <summary>
            Trigger callback on fodler create.
            </summary>
            <value>Trigger callback on fodler create.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.Rename">
            <summary>
            Trigger callback on rename.
            </summary>
            <value>Trigger callback on rename.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.Move">
            <summary>
            Trigger callback on move.
            </summary>
            <value>Trigger callback on move.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.Copy">
            <summary>
            Trigger callback on copy.
            </summary>
            <value>Trigger callback on copy.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.Compress">
            <summary>
            Trigger callback on compress.
            </summary>
            <value>Trigger callback on compress.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.Extract">
            <summary>
            Trigger callback on extract.
            </summary>
            <value>Trigger callback on extract.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.ShareFolder">
            <summary>
            Trigger callback on share folder create.
            </summary>
            <value>Trigger callback on share folder create.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.SendFiles">
            <summary>
            Trigger callback on send files.
            </summary>
            <value>Trigger callback on send files.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.ReceiveFiles">
            <summary>
            Trigger callback on receive folder create.
            </summary>
            <value>Trigger callback on receive folder create.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.UpdateShare">
            <summary>
            Trigger callback on share folder update.
            </summary>
            <value>Trigger callback on share folder update.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.UpdateReceive">
            <summary>
            Trigger callback on receive folder update.
            </summary>
            <value>Trigger callback on receive folder update.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.DeleteSend">
            <summary>
            Trigger callback on send files delete.
            </summary>
            <value>Trigger callback on send files delete.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.DeleteReceive">
            <summary>
            Trigger callback on receive folder delete.
            </summary>
            <value>Trigger callback on receive folder delete.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.DeleteShare">
            <summary>
            Trigger callback on share folder delete.
            </summary>
            <value>Trigger callback on share folder delete.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.CreateNotification">
            <summary>
            Trigger callback on notification create.
            </summary>
            <value>Trigger callback on notification create.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.UpdateNotification">
            <summary>
            Trigger callback on notification update.
            </summary>
            <value>Trigger callback on notification update.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.DeleteNotification">
            <summary>
            Trigger callback on notification delete.
            </summary>
            <value>Trigger callback on notification delete.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.CreateUser">
            <summary>
            Trigger callback on user create.
            </summary>
            <value>Trigger callback on user create.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.UpdateUser">
            <summary>
            Trigger callback on user update.
            </summary>
            <value>Trigger callback on user update.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.DeleteUser">
            <summary>
            Trigger callback on user delete.
            </summary>
            <value>Trigger callback on user delete.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.UserConnect">
            <summary>
            Trigger callback on user connect.
            </summary>
            <value>Trigger callback on user connect.</value>
        </member>
        <member name="P:IO.Swagger.Model.CallbackSettingsTriggers.UserDisconnect">
            <summary>
            Trigger callback on user disconnect.
            </summary>
            <value>Trigger callback on user disconnect.</value>
        </member>
        <member name="T:IO.Swagger.Model.DownloadPolling">
            <summary>
            Object contains infromation about ongoing arhivation of files for download.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPolling.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.DownloadPolling"/> class.
            </summary>
            <param name="zip">Name of the zip file..</param>
            <param name="percent">Indicates archiving process completeness..</param>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPolling.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPolling.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPolling.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPolling.Equals(IO.Swagger.Model.DownloadPolling)">
            <summary>
            Returns true if DownloadPolling instances are equal
            </summary>
            <param name="input">Instance of DownloadPolling to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPolling.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPolling.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.DownloadPolling.Zip">
            <summary>
            Name of the zip file.
            </summary>
            <value>Name of the zip file.</value>
        </member>
        <member name="P:IO.Swagger.Model.DownloadPolling.Percent">
            <summary>
            Indicates archiving process completeness.
            </summary>
            <value>Indicates archiving process completeness.</value>
        </member>
        <member name="T:IO.Swagger.Model.DownloadPollingResponse">
            <summary>
            DownloadPollingResponse
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPollingResponse.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.DownloadPolling)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.DownloadPollingResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response. .</param>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPollingResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPollingResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPollingResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPollingResponse.Equals(IO.Swagger.Model.DownloadPollingResponse)">
            <summary>
            Returns true if DownloadPollingResponse instances are equal
            </summary>
            <param name="input">Instance of DownloadPollingResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPollingResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.DownloadPollingResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.DownloadPollingResponse.ResponseStatus">
            <summary>
            Http status code of the response. 
            </summary>
            <value>Http status code of the response. </value>
        </member>
        <member name="P:IO.Swagger.Model.DownloadPollingResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.EmailList">
            <summary>
            A single email group list
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.EmailList.#ctor(System.Nullable{System.Int32},System.String,IO.Swagger.Model.EmailListAttributes,IO.Swagger.Model.EmailListRelationships)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.EmailList"/> class.
            </summary>
            <param name="id">ID of the email list.</param>
            <param name="type">Type of record. \"EmailList\".</param>
            <param name="attributes">attributes.</param>
            <param name="relationships">relationships.</param>
        </member>
        <member name="M:IO.Swagger.Model.EmailList.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailList.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailList.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailList.Equals(IO.Swagger.Model.EmailList)">
            <summary>
            Returns true if EmailList instances are equal
            </summary>
            <param name="input">Instance of EmailList to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailList.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailList.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.EmailList.Id">
            <summary>
            ID of the email list
            </summary>
            <value>ID of the email list</value>
        </member>
        <member name="P:IO.Swagger.Model.EmailList.Type">
            <summary>
            Type of record. \&quot;EmailList\&quot;
            </summary>
            <value>Type of record. \&quot;EmailList\&quot;</value>
        </member>
        <member name="P:IO.Swagger.Model.EmailList.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.EmailList.Relationships">
            <summary>
            Gets or Sets Relationships
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.EmailListAttributes">
            <summary>
            Information for the email list, including its short title and recipient emails
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.EmailListAttributes.#ctor(System.String,System.Collections.Generic.List{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.EmailListAttributes"/> class.
            </summary>
            <param name="name">Short title for email list.</param>
            <param name="members">Recipient emails in the email list.</param>
            <param name="created">Created datetime.</param>
            <param name="modified">Modified datetime.</param>
        </member>
        <member name="M:IO.Swagger.Model.EmailListAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListAttributes.Equals(IO.Swagger.Model.EmailListAttributes)">
            <summary>
            Returns true if EmailListAttributes instances are equal
            </summary>
            <param name="input">Instance of EmailListAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.EmailListAttributes.Name">
            <summary>
            Short title for email list
            </summary>
            <value>Short title for email list</value>
        </member>
        <member name="P:IO.Swagger.Model.EmailListAttributes.Members">
            <summary>
            Recipient emails in the email list
            </summary>
            <value>Recipient emails in the email list</value>
        </member>
        <member name="P:IO.Swagger.Model.EmailListAttributes.Created">
            <summary>
            Created datetime
            </summary>
            <value>Created datetime</value>
        </member>
        <member name="P:IO.Swagger.Model.EmailListAttributes.Modified">
            <summary>
            Modified datetime
            </summary>
            <value>Modified datetime</value>
        </member>
        <member name="T:IO.Swagger.Model.EmailListCollectionResponse">
            <summary>
            Response object for list of email lists
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.EmailListCollectionResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.EmailList},System.Collections.Generic.List{IO.Swagger.Model.Included})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.EmailListCollectionResponse"/> class.
            </summary>
            <param name="responseStatus">Http status of response.</param>
            <param name="totalResults">totalResults.</param>
            <param name="returnedResults">returnedResults.</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.EmailListCollectionResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListCollectionResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListCollectionResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListCollectionResponse.Equals(IO.Swagger.Model.EmailListCollectionResponse)">
            <summary>
            Returns true if EmailListCollectionResponse instances are equal
            </summary>
            <param name="input">Instance of EmailListCollectionResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListCollectionResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListCollectionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.EmailListCollectionResponse.ResponseStatus">
            <summary>
            Http status of response
            </summary>
            <value>Http status of response</value>
        </member>
        <member name="P:IO.Swagger.Model.EmailListCollectionResponse.TotalResults">
            <summary>
            Gets or Sets TotalResults
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.EmailListCollectionResponse.ReturnedResults">
            <summary>
            Gets or Sets ReturnedResults
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.EmailListCollectionResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.EmailListCollectionResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.EmailListOwnerUser">
            <summary>
            Information for user who owns the email list
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.EmailListOwnerUser.#ctor(IO.Swagger.Model.RelationshipData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.EmailListOwnerUser"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.EmailListOwnerUser.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListOwnerUser.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListOwnerUser.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListOwnerUser.Equals(IO.Swagger.Model.EmailListOwnerUser)">
            <summary>
            Returns true if EmailListOwnerUser instances are equal
            </summary>
            <param name="input">Instance of EmailListOwnerUser to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListOwnerUser.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListOwnerUser.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.EmailListOwnerUser.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.EmailListRelationships">
            <summary>
            Related record summary info
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.EmailListRelationships.#ctor(IO.Swagger.Model.EmailListOwnerUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.EmailListRelationships"/> class.
            </summary>
            <param name="ownerUser">ownerUser.</param>
        </member>
        <member name="M:IO.Swagger.Model.EmailListRelationships.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListRelationships.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListRelationships.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListRelationships.Equals(IO.Swagger.Model.EmailListRelationships)">
            <summary>
            Returns true if EmailListRelationships instances are equal
            </summary>
            <param name="input">Instance of EmailListRelationships to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListRelationships.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListRelationships.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.EmailListRelationships.OwnerUser">
            <summary>
            Gets or Sets OwnerUser
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.EmailListResponse">
            <summary>
            Response object for a single email list.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.EmailListResponse.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.EmailList,System.Collections.Generic.List{IO.Swagger.Model.User})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.EmailListResponse"/> class.
            </summary>
            <param name="responseStatus">Http Status code.</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.EmailListResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListResponse.Equals(IO.Swagger.Model.EmailListResponse)">
            <summary>
            Returns true if EmailListResponse instances are equal
            </summary>
            <param name="input">Instance of EmailListResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmailListResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.EmailListResponse.ResponseStatus">
            <summary>
            Http Status code
            </summary>
            <value>Http Status code</value>
        </member>
        <member name="P:IO.Swagger.Model.EmailListResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.EmailListResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.EmptyResponse">
            <summary>
            EmptyResponse
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.EmptyResponse.#ctor(System.Nullable{System.Int32},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.EmptyResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response. .</param>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.EmptyResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmptyResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmptyResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmptyResponse.Equals(IO.Swagger.Model.EmptyResponse)">
            <summary>
            Returns true if EmptyResponse instances are equal
            </summary>
            <param name="input">Instance of EmptyResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmptyResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.EmptyResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.EmptyResponse.ResponseStatus">
            <summary>
            Http status code of the response. 
            </summary>
            <value>Http status code of the response. </value>
        </member>
        <member name="P:IO.Swagger.Model.EmptyResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Error.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Error"/> class.
            </summary>
            <param name="code">Specific internal error string..</param>
            <param name="title">Human readable summary of the problem..</param>
            <param name="detail">human-readable explanation specific to this occurrence of the problem..</param>
            <param name="meta">Meta object containing non-standard meta-information about the error..</param>
        </member>
        <member name="M:IO.Swagger.Model.Error.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.Equals(IO.Swagger.Model.Error)">
            <summary>
            Returns true if Error instances are equal
            </summary>
            <param name="input">Instance of Error to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Error.Code">
            <summary>
            Specific internal error string.
            </summary>
            <value>Specific internal error string.</value>
        </member>
        <member name="P:IO.Swagger.Model.Error.Title">
            <summary>
            Human readable summary of the problem.
            </summary>
            <value>Human readable summary of the problem.</value>
        </member>
        <member name="P:IO.Swagger.Model.Error.Detail">
            <summary>
            human-readable explanation specific to this occurrence of the problem.
            </summary>
            <value>human-readable explanation specific to this occurrence of the problem.</value>
        </member>
        <member name="P:IO.Swagger.Model.Error.Meta">
            <summary>
            Meta object containing non-standard meta-information about the error.
            </summary>
            <value>Meta object containing non-standard meta-information about the error.</value>
        </member>
        <member name="T:IO.Swagger.Model.Error401">
            <summary>
            Error401
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Error401.#ctor(System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.Error401Errors})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Error401"/> class.
            </summary>
            <param name="responseStatus">HTTP Status Code (required).</param>
            <param name="errors">errors.</param>
        </member>
        <member name="M:IO.Swagger.Model.Error401.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.Equals(IO.Swagger.Model.Error401)">
            <summary>
            Returns true if Error401 instances are equal
            </summary>
            <param name="input">Instance of Error401 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Error401.ResponseStatus">
            <summary>
            HTTP Status Code
            </summary>
            <value>HTTP Status Code</value>
        </member>
        <member name="P:IO.Swagger.Model.Error401.Errors">
            <summary>
            Gets or Sets Errors
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Error401Errors">
            <summary>
            Error401Errors
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Error401Errors.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Error401Errors"/> class.
            </summary>
            <param name="code">Error Code (required).</param>
            <param name="detail">Additional Details (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.Error401Errors.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401Errors.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401Errors.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401Errors.Equals(IO.Swagger.Model.Error401Errors)">
            <summary>
            Returns true if Error401Errors instances are equal
            </summary>
            <param name="input">Instance of Error401Errors to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401Errors.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error401Errors.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Error401Errors.Code">
            <summary>
            Error Code
            </summary>
            <value>Error Code</value>
        </member>
        <member name="P:IO.Swagger.Model.Error401Errors.Detail">
            <summary>
            Additional Details
            </summary>
            <value>Additional Details</value>
        </member>
        <member name="T:IO.Swagger.Model.Error403">
            <summary>
            Error403
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Error403.#ctor(System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.Error403Errors})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Error403"/> class.
            </summary>
            <param name="responseStatus">responseStatus (required).</param>
            <param name="errors">errors.</param>
        </member>
        <member name="M:IO.Swagger.Model.Error403.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.Equals(IO.Swagger.Model.Error403)">
            <summary>
            Returns true if Error403 instances are equal
            </summary>
            <param name="input">Instance of Error403 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Error403.ResponseStatus">
            <summary>
            Gets or Sets ResponseStatus
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Error403.Errors">
            <summary>
            Gets or Sets Errors
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Error403Errors">
            <summary>
            Error403Errors
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Error403Errors.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Error403Errors"/> class.
            </summary>
            <param name="code">Error code (required).</param>
            <param name="detail">Additional Detail (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.Error403Errors.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403Errors.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403Errors.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403Errors.Equals(IO.Swagger.Model.Error403Errors)">
            <summary>
            Returns true if Error403Errors instances are equal
            </summary>
            <param name="input">Instance of Error403Errors to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403Errors.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Error403Errors.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Error403Errors.Code">
            <summary>
            Error code
            </summary>
            <value>Error code</value>
        </member>
        <member name="P:IO.Swagger.Model.Error403Errors.Detail">
            <summary>
            Additional Detail
            </summary>
            <value>Additional Detail</value>
        </member>
        <member name="T:IO.Swagger.Model.Form">
            <summary>
            Regular form object.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Form.#ctor(System.String,System.Nullable{System.Int32},IO.Swagger.Model.FormAttributes,IO.Swagger.Model.FormRelationships)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Form"/> class.
            </summary>
            <param name="type">Type is \"form\"..</param>
            <param name="id">ID of the form..</param>
            <param name="attributes">attributes.</param>
            <param name="relationships">relationships.</param>
        </member>
        <member name="M:IO.Swagger.Model.Form.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Form.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Form.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Form.Equals(IO.Swagger.Model.Form)">
            <summary>
            Returns true if Form instances are equal
            </summary>
            <param name="input">Instance of Form to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Form.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Form.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Form.Type">
            <summary>
            Type is \&quot;form\&quot;.
            </summary>
            <value>Type is \&quot;form\&quot;.</value>
        </member>
        <member name="P:IO.Swagger.Model.Form.Id">
            <summary>
            ID of the form.
            </summary>
            <value>ID of the form.</value>
        </member>
        <member name="P:IO.Swagger.Model.Form.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Form.Relationships">
            <summary>
            Gets or Sets Relationships
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormAttributes">
            <summary>
            Attributes of the form including it&#x27;s included fields and css styles
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormAttributes.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.FormField})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormAttributes"/> class.
            </summary>
            <param name="formDescription">Text that appears at the top of a receive form.</param>
            <param name="submitButtonText">Text that appears on the submit button for the form.</param>
            <param name="successMessage">Message displayed to submitter after files are uploaded.</param>
            <param name="cssStyles">CSS Styles of the form..</param>
            <param name="elements">Array of form fields defined for the form.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormAttributes.Equals(IO.Swagger.Model.FormAttributes)">
            <summary>
            Returns true if FormAttributes instances are equal
            </summary>
            <param name="input">Instance of FormAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormAttributes.FormDescription">
            <summary>
            Text that appears at the top of a receive form
            </summary>
            <value>Text that appears at the top of a receive form</value>
        </member>
        <member name="P:IO.Swagger.Model.FormAttributes.SubmitButtonText">
            <summary>
            Text that appears on the submit button for the form
            </summary>
            <value>Text that appears on the submit button for the form</value>
        </member>
        <member name="P:IO.Swagger.Model.FormAttributes.SuccessMessage">
            <summary>
            Message displayed to submitter after files are uploaded
            </summary>
            <value>Message displayed to submitter after files are uploaded</value>
        </member>
        <member name="P:IO.Swagger.Model.FormAttributes.CssStyles">
            <summary>
            CSS Styles of the form.
            </summary>
            <value>CSS Styles of the form.</value>
        </member>
        <member name="P:IO.Swagger.Model.FormAttributes.Elements">
            <summary>
            Array of form fields defined for the form
            </summary>
            <value>Array of form fields defined for the form</value>
        </member>
        <member name="T:IO.Swagger.Model.FormEntry">
            <summary>
            Contains the data submitted for a form.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormEntry.#ctor(System.Nullable{System.Int32},System.String,IO.Swagger.Model.FormEntryAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormEntry"/> class.
            </summary>
            <param name="id">Form entry id.</param>
            <param name="type">Type of item. \"formEntry\".</param>
            <param name="attributes">attributes.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormEntry.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntry.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntry.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntry.Equals(IO.Swagger.Model.FormEntry)">
            <summary>
            Returns true if FormEntry instances are equal
            </summary>
            <param name="input">Instance of FormEntry to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntry.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntry.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormEntry.Id">
            <summary>
            Form entry id
            </summary>
            <value>Form entry id</value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntry.Type">
            <summary>
            Type of item. \&quot;formEntry\&quot;
            </summary>
            <value>Type of item. \&quot;formEntry\&quot;</value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntry.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormEntryAttributes">
            <summary>
            FormEntryAttributes
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryAttributes.#ctor(System.Collections.Generic.List{IO.Swagger.Model.FormEntryField},System.Collections.Generic.List{System.String},System.Nullable{IO.Swagger.Model.FormEntryAttributes.StatusEnum},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormEntryAttributes"/> class.
            </summary>
            <param name="fields">fields.</param>
            <param name="paths">Full paths to files associated with the form submission.</param>
            <param name="status">Form entry status.</param>
            <param name="created">Timestamp of the submission.</param>
            <param name="modified">Timestamp of the field modified date.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryAttributes.Equals(IO.Swagger.Model.FormEntryAttributes)">
            <summary>
            Returns true if FormEntryAttributes instances are equal
            </summary>
            <param name="input">Instance of FormEntryAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryAttributes.Status">
            <summary>
            Form entry status
            </summary>
            <value>Form entry status</value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryAttributes.Fields">
            <summary>
            Gets or Sets Fields
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryAttributes.Paths">
            <summary>
            Full paths to files associated with the form submission
            </summary>
            <value>Full paths to files associated with the form submission</value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryAttributes.Created">
            <summary>
            Timestamp of the submission
            </summary>
            <value>Timestamp of the submission</value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryAttributes.Modified">
            <summary>
            Timestamp of the field modified date
            </summary>
            <value>Timestamp of the field modified date</value>
        </member>
        <member name="T:IO.Swagger.Model.FormEntryAttributes.StatusEnum">
            <summary>
            Form entry status
            </summary>
            <value>Form entry status</value>
        </member>
        <member name="F:IO.Swagger.Model.FormEntryAttributes.StatusEnum.Pending">
            <summary>
            Enum Pending for value: pending
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.FormEntryAttributes.StatusEnum.Completed">
            <summary>
            Enum Completed for value: completed
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormEntryField">
            <summary>
            Contains the data of form field
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryField.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormEntryField"/> class.
            </summary>
            <param name="name">Field name.</param>
            <param name="value">Field value.</param>
            <param name="order">Field order in the form.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryField.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryField.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryField.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryField.Equals(IO.Swagger.Model.FormEntryField)">
            <summary>
            Returns true if FormEntryField instances are equal
            </summary>
            <param name="input">Instance of FormEntryField to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryField.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryField.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryField.Name">
            <summary>
            Field name
            </summary>
            <value>Field name</value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryField.Value">
            <summary>
            Field value
            </summary>
            <value>Field value</value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryField.Order">
            <summary>
            Field order in the form
            </summary>
            <value>Field order in the form</value>
        </member>
        <member name="T:IO.Swagger.Model.FormEntryResponse">
            <summary>
            Response object of the form data.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.FormEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormEntryResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response. .</param>
            <param name="totalResults">Total results found. .</param>
            <param name="returnedResults">Number of returned results. .</param>
            <param name="data">Object submissions data for form..</param>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryResponse.Equals(IO.Swagger.Model.FormEntryResponse)">
            <summary>
            Returns true if FormEntryResponse instances are equal
            </summary>
            <param name="input">Instance of FormEntryResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormEntryResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryResponse.ResponseStatus">
            <summary>
            Http status code of the response. 
            </summary>
            <value>Http status code of the response. </value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryResponse.TotalResults">
            <summary>
            Total results found. 
            </summary>
            <value>Total results found. </value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryResponse.ReturnedResults">
            <summary>
            Number of returned results. 
            </summary>
            <value>Number of returned results. </value>
        </member>
        <member name="P:IO.Swagger.Model.FormEntryResponse.Data">
            <summary>
            Object submissions data for form.
            </summary>
            <value>Object submissions data for form.</value>
        </member>
        <member name="T:IO.Swagger.Model.FormField">
            <summary>
            FormField
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormField.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,IO.Swagger.Model.FormFieldSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormField"/> class.
            </summary>
            <param name="id">ID of the form field. .</param>
            <param name="name">Label of the field..</param>
            <param name="order">Order that field appears on the form, starting from 0.</param>
            <param name="type">Field type.</param>
            <param name="settings">settings.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormField.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormField.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormField.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormField.Equals(IO.Swagger.Model.FormField)">
            <summary>
            Returns true if FormField instances are equal
            </summary>
            <param name="input">Instance of FormField to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormField.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormField.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormField.Id">
            <summary>
            ID of the form field. 
            </summary>
            <value>ID of the form field. </value>
        </member>
        <member name="P:IO.Swagger.Model.FormField.Name">
            <summary>
            Label of the field.
            </summary>
            <value>Label of the field.</value>
        </member>
        <member name="P:IO.Swagger.Model.FormField.Order">
            <summary>
            Order that field appears on the form, starting from 0
            </summary>
            <value>Order that field appears on the form, starting from 0</value>
        </member>
        <member name="P:IO.Swagger.Model.FormField.Type">
            <summary>
            Field type
            </summary>
            <value>Field type</value>
        </member>
        <member name="P:IO.Swagger.Model.FormField.Settings">
            <summary>
            Gets or Sets Settings
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormFieldSettings">
            <summary>
            Advanced field settings
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldSettings.#ctor(System.String,System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormFieldSettings"/> class.
            </summary>
            <param name="description">Secondary description of field..</param>
            <param name="width">How much of the available width the field should occupy.</param>
            <param name="isRequired">Whether this field must be completed before form can be submitted.</param>
            <param name="useAsFolderName">Whether to place submitted files into a subfolder named the contents of this field. Only takes effect when the `fileDropCreateFolders` parameter on the receive folder is `true`. `isRequired` must be set to `true` if this setting is `true`..</param>
            <param name="senderEmail">senderEmail.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldSettings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldSettings.Equals(IO.Swagger.Model.FormFieldSettings)">
            <summary>
            Returns true if FormFieldSettings instances are equal
            </summary>
            <param name="input">Instance of FormFieldSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldSettings.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldSettings.Description">
            <summary>
            Secondary description of field.
            </summary>
            <value>Secondary description of field.</value>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldSettings.Width">
            <summary>
            How much of the available width the field should occupy
            </summary>
            <value>How much of the available width the field should occupy</value>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldSettings.IsRequired">
            <summary>
            Whether this field must be completed before form can be submitted
            </summary>
            <value>Whether this field must be completed before form can be submitted</value>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldSettings.UseAsFolderName">
            <summary>
            Whether to place submitted files into a subfolder named the contents of this field. Only takes effect when the &#x60;fileDropCreateFolders&#x60; parameter on the receive folder is &#x60;true&#x60;. &#x60;isRequired&#x60; must be set to &#x60;true&#x60; if this setting is &#x60;true&#x60;.
            </summary>
            <value>Whether to place submitted files into a subfolder named the contents of this field. Only takes effect when the &#x60;fileDropCreateFolders&#x60; parameter on the receive folder is &#x60;true&#x60;. &#x60;isRequired&#x60; must be set to &#x60;true&#x60; if this setting is &#x60;true&#x60;.</value>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldSettings.SenderEmail">
            <summary>
            Gets or Sets SenderEmail
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormFieldUploadArea">
            <summary>
            FormFieldUploadArea
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadArea.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,IO.Swagger.Model.FormFieldUploadAreaSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormFieldUploadArea"/> class.
            </summary>
            <param name="id">ID of the form field. .</param>
            <param name="name">Label of the field (not used)..</param>
            <param name="order">Order that field appears on the form, starting from 0.</param>
            <param name="type">Type is upload_area..</param>
            <param name="settings">settings.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadArea.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadArea.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadArea.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadArea.Equals(IO.Swagger.Model.FormFieldUploadArea)">
            <summary>
            Returns true if FormFieldUploadArea instances are equal
            </summary>
            <param name="input">Instance of FormFieldUploadArea to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadArea.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadArea.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldUploadArea.Id">
            <summary>
            ID of the form field. 
            </summary>
            <value>ID of the form field. </value>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldUploadArea.Name">
            <summary>
            Label of the field (not used).
            </summary>
            <value>Label of the field (not used).</value>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldUploadArea.Order">
            <summary>
            Order that field appears on the form, starting from 0
            </summary>
            <value>Order that field appears on the form, starting from 0</value>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldUploadArea.Type">
            <summary>
            Type is upload_area.
            </summary>
            <value>Type is upload_area.</value>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldUploadArea.Settings">
            <summary>
            Gets or Sets Settings
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormFieldUploadAreaSettings">
            <summary>
            Advanced field settings
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadAreaSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormFieldUploadAreaSettings"/> class.
            </summary>
            <param name="fileTypes">File types that can be uploaded. Comma-delimited string of MIME file types..</param>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadAreaSettings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadAreaSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadAreaSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadAreaSettings.Equals(IO.Swagger.Model.FormFieldUploadAreaSettings)">
            <summary>
            Returns true if FormFieldUploadAreaSettings instances are equal
            </summary>
            <param name="input">Instance of FormFieldUploadAreaSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadAreaSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormFieldUploadAreaSettings.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormFieldUploadAreaSettings.FileTypes">
            <summary>
            File types that can be uploaded. Comma-delimited string of MIME file types.
            </summary>
            <value>File types that can be uploaded. Comma-delimited string of MIME file types.</value>
        </member>
        <member name="T:IO.Swagger.Model.FormRelationships">
            <summary>
            Share relationship data of the form. 
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationships.#ctor(IO.Swagger.Model.FormRelationshipsShare)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormRelationships"/> class.
            </summary>
            <param name="share">share.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationships.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationships.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationships.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationships.Equals(IO.Swagger.Model.FormRelationships)">
            <summary>
            Returns true if FormRelationships instances are equal
            </summary>
            <param name="input">Instance of FormRelationships to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationships.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationships.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormRelationships.Share">
            <summary>
            Gets or Sets Share
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormRelationshipsShare">
            <summary>
            FormRelationshipsShare
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShare.#ctor(IO.Swagger.Model.FormRelationshipsShareData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormRelationshipsShare"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShare.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShare.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShare.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShare.Equals(IO.Swagger.Model.FormRelationshipsShare)">
            <summary>
            Returns true if FormRelationshipsShare instances are equal
            </summary>
            <param name="input">Instance of FormRelationshipsShare to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShare.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShare.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormRelationshipsShare.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormRelationshipsShareData">
            <summary>
            FormRelationshipsShareData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShareData.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.FormRelationshipsShareData.TypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormRelationshipsShareData"/> class.
            </summary>
            <param name="id">ID of the share. .</param>
            <param name="type">Type is share. .</param>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShareData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShareData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShareData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShareData.Equals(IO.Swagger.Model.FormRelationshipsShareData)">
            <summary>
            Returns true if FormRelationshipsShareData instances are equal
            </summary>
            <param name="input">Instance of FormRelationshipsShareData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShareData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormRelationshipsShareData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormRelationshipsShareData.Type">
            <summary>
            Type is share. 
            </summary>
            <value>Type is share. </value>
        </member>
        <member name="P:IO.Swagger.Model.FormRelationshipsShareData.Id">
            <summary>
            ID of the share. 
            </summary>
            <value>ID of the share. </value>
        </member>
        <member name="T:IO.Swagger.Model.FormRelationshipsShareData.TypeEnum">
            <summary>
            Type is share. 
            </summary>
            <value>Type is share. </value>
        </member>
        <member name="F:IO.Swagger.Model.FormRelationshipsShareData.TypeEnum.Share">
            <summary>
            Enum Share for value: share
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormResponse">
            <summary>
            Response object for forms.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormResponse.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.Form,System.Collections.Generic.List{IO.Swagger.Model.OneOfFormResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response. .</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormResponse.Equals(IO.Swagger.Model.FormResponse)">
            <summary>
            Returns true if FormResponse instances are equal
            </summary>
            <param name="input">Instance of FormResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormResponse.ResponseStatus">
            <summary>
            Http status code of the response. 
            </summary>
            <value>Http status code of the response. </value>
        </member>
        <member name="P:IO.Swagger.Model.FormResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.FormResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormsidElements">
            <summary>
            FormsidElements
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormsidElements.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.FormsidElements.TypeEnum},IO.Swagger.Model.FormsidSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormsidElements"/> class.
            </summary>
            <param name="id">ID of the form element. If you're adding a new element to the form, do not include this field..</param>
            <param name="name">Name of the form element..</param>
            <param name="order">The order the fields will be displayed to the receipient. Starts at 0. .</param>
            <param name="type">Type of form field to use..</param>
            <param name="settings">settings.</param>
        </member>
        <member name="M:IO.Swagger.Model.FormsidElements.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidElements.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidElements.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidElements.Equals(IO.Swagger.Model.FormsidElements)">
            <summary>
            Returns true if FormsidElements instances are equal
            </summary>
            <param name="input">Instance of FormsidElements to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidElements.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidElements.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormsidElements.Type">
            <summary>
            Type of form field to use.
            </summary>
            <value>Type of form field to use.</value>
        </member>
        <member name="P:IO.Swagger.Model.FormsidElements.Id">
            <summary>
            ID of the form element. If you&#x27;re adding a new element to the form, do not include this field.
            </summary>
            <value>ID of the form element. If you&#x27;re adding a new element to the form, do not include this field.</value>
        </member>
        <member name="P:IO.Swagger.Model.FormsidElements.Name">
            <summary>
            Name of the form element.
            </summary>
            <value>Name of the form element.</value>
        </member>
        <member name="P:IO.Swagger.Model.FormsidElements.Order">
            <summary>
            The order the fields will be displayed to the receipient. Starts at 0. 
            </summary>
            <value>The order the fields will be displayed to the receipient. Starts at 0. </value>
        </member>
        <member name="P:IO.Swagger.Model.FormsidElements.Settings">
            <summary>
            Gets or Sets Settings
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormsidElements.TypeEnum">
            <summary>
            Type of form field to use.
            </summary>
            <value>Type of form field to use.</value>
        </member>
        <member name="F:IO.Swagger.Model.FormsidElements.TypeEnum.Name">
            <summary>
            Enum Name for value: name
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.FormsidElements.TypeEnum.Email">
            <summary>
            Enum Email for value: email
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.FormsidElements.TypeEnum.Text">
            <summary>
            Enum Text for value: text
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.FormsidElements.TypeEnum.Textarea">
            <summary>
            Enum Textarea for value: textarea
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.FormsidElements.TypeEnum.Uploadarea">
            <summary>
            Enum Uploadarea for value: upload_area
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.FormsidSettings">
            <summary>
            FormsidSettings
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.FormsidSettings.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.FormsidSettings"/> class.
            </summary>
            <param name="isRequired">True is the form element is required for submission. .</param>
            <param name="senderEmail">senderEmail.</param>
            <param name="useAsFolderName">True if the submitted response should be used as the name for the new folder. .</param>
        </member>
        <member name="M:IO.Swagger.Model.FormsidSettings.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidSettings.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidSettings.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidSettings.Equals(IO.Swagger.Model.FormsidSettings)">
            <summary>
            Returns true if FormsidSettings instances are equal
            </summary>
            <param name="input">Instance of FormsidSettings to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidSettings.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.FormsidSettings.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.FormsidSettings.IsRequired">
            <summary>
            True is the form element is required for submission. 
            </summary>
            <value>True is the form element is required for submission. </value>
        </member>
        <member name="P:IO.Swagger.Model.FormsidSettings.SenderEmail">
            <summary>
            Gets or Sets SenderEmail
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.FormsidSettings.UseAsFolderName">
            <summary>
            True if the submitted response should be used as the name for the new folder. 
            </summary>
            <value>True if the submitted response should be used as the name for the new folder. </value>
        </member>
        <member name="T:IO.Swagger.Model.Included">
            <summary>
            Included
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Included.#ctor(System.Nullable{System.Int32},System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Included"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
            <param name="attributes">attributes.</param>
        </member>
        <member name="M:IO.Swagger.Model.Included.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Included.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Included.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Included.Equals(IO.Swagger.Model.Included)">
            <summary>
            Returns true if Included instances are equal
            </summary>
            <param name="input">Instance of Included to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Included.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Included.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Included.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Included.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Included.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.MasterUser">
            <summary>
            MasterUser
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.MasterUser.#ctor(IO.Swagger.Model.MasterUserMasterUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.MasterUser"/> class.
            </summary>
            <param name="masterUser">masterUser.</param>
        </member>
        <member name="M:IO.Swagger.Model.MasterUser.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUser.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUser.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUser.Equals(IO.Swagger.Model.MasterUser)">
            <summary>
            Returns true if MasterUser instances are equal
            </summary>
            <param name="input">Instance of MasterUser to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUser.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUser.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.MasterUser._MasterUser">
            <summary>
            Gets or Sets _MasterUser
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.MasterUserMasterUser">
            <summary>
            MasterUserMasterUser
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUser.#ctor(IO.Swagger.Model.MasterUserMasterUserData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.MasterUserMasterUser"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUser.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUser.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUser.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUser.Equals(IO.Swagger.Model.MasterUserMasterUser)">
            <summary>
            Returns true if MasterUserMasterUser instances are equal
            </summary>
            <param name="input">Instance of MasterUserMasterUser to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUser.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUser.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.MasterUserMasterUser.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.MasterUserMasterUserData">
            <summary>
            MasterUserMasterUserData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUserData.#ctor(System.Nullable{IO.Swagger.Model.MasterUserMasterUserData.TypeEnum},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.MasterUserMasterUserData"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="id">ID of master user for account.</param>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUserData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUserData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUserData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUserData.Equals(IO.Swagger.Model.MasterUserMasterUserData)">
            <summary>
            Returns true if MasterUserMasterUserData instances are equal
            </summary>
            <param name="input">Instance of MasterUserMasterUserData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUserData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.MasterUserMasterUserData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.MasterUserMasterUserData.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.MasterUserMasterUserData.Id">
            <summary>
            ID of master user for account
            </summary>
            <value>ID of master user for account</value>
        </member>
        <member name="T:IO.Swagger.Model.MasterUserMasterUserData.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.MasterUserMasterUserData.TypeEnum.User">
            <summary>
            Enum User for value: user
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Notification">
            <summary>
            Object containing notification properties.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Notification.#ctor(System.Nullable{System.Int32},System.String,IO.Swagger.Model.NotificationAttributes,IO.Swagger.Model.NotificationRelationships)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Notification"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
            <param name="attributes">attributes.</param>
            <param name="relationships">relationships.</param>
        </member>
        <member name="M:IO.Swagger.Model.Notification.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Notification.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Notification.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Notification.Equals(IO.Swagger.Model.Notification)">
            <summary>
            Returns true if Notification instances are equal
            </summary>
            <param name="input">Instance of Notification to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Notification.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Notification.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Notification.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Notification.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Notification.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Notification.Relationships">
            <summary>
            Gets or Sets Relationships
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationAttributes">
            <summary>
            Attributes for the notification including the path, recipients, and share data. 
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationAttributes.#ctor(System.String,System.Nullable{IO.Swagger.Model.NotificationAttributes.TypeEnum},System.String,System.String,System.Nullable{IO.Swagger.Model.NotificationAttributes.ActionEnum},System.Collections.Generic.List{System.String},System.Collections.Generic.List{IO.Swagger.Model.NotificationRecipient},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationAttributes"/> class.
            </summary>
            <param name="userId">ID of the user that the notification belongs to..</param>
            <param name="type">Type of the resoucre the notification is attached to. .</param>
            <param name="path">Path to the item that the notification is set on..</param>
            <param name="name">Name of the item that the notification is set on..</param>
            <param name="action">Action that triggers notification..</param>
            <param name="usernames">Detail on which users can trigger the notification..</param>
            <param name="recipients">Notification recipients..</param>
            <param name="sendEmail">Whether or not an email will send when the notification is triggered..</param>
            <param name="readableDescription">Human readable description of the notification..</param>
            <param name="readableDescriptionWithoutPath">Human readable description of the notification without item path..</param>
            <param name="shareId">ID of the share that the notification belogns to..</param>
            <param name="message">Custom message that will be sent to the notification recipients..</param>
            <param name="created">Timestamp of notifiction creation..</param>
            <param name="modified">Timestamp of notification modification..</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationAttributes.Equals(IO.Swagger.Model.NotificationAttributes)">
            <summary>
            Returns true if NotificationAttributes instances are equal
            </summary>
            <param name="input">Instance of NotificationAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.Type">
            <summary>
            Type of the resoucre the notification is attached to. 
            </summary>
            <value>Type of the resoucre the notification is attached to. </value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.Action">
            <summary>
            Action that triggers notification.
            </summary>
            <value>Action that triggers notification.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.UserId">
            <summary>
            ID of the user that the notification belongs to.
            </summary>
            <value>ID of the user that the notification belongs to.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.Path">
            <summary>
            Path to the item that the notification is set on.
            </summary>
            <value>Path to the item that the notification is set on.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.Name">
            <summary>
            Name of the item that the notification is set on.
            </summary>
            <value>Name of the item that the notification is set on.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.Usernames">
            <summary>
            Detail on which users can trigger the notification.
            </summary>
            <value>Detail on which users can trigger the notification.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.Recipients">
            <summary>
            Notification recipients.
            </summary>
            <value>Notification recipients.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.SendEmail">
            <summary>
            Whether or not an email will send when the notification is triggered.
            </summary>
            <value>Whether or not an email will send when the notification is triggered.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.ReadableDescription">
            <summary>
            Human readable description of the notification.
            </summary>
            <value>Human readable description of the notification.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.ReadableDescriptionWithoutPath">
            <summary>
            Human readable description of the notification without item path.
            </summary>
            <value>Human readable description of the notification without item path.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.ShareId">
            <summary>
            ID of the share that the notification belogns to.
            </summary>
            <value>ID of the share that the notification belogns to.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.Message">
            <summary>
            Custom message that will be sent to the notification recipients.
            </summary>
            <value>Custom message that will be sent to the notification recipients.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.Created">
            <summary>
            Timestamp of notifiction creation.
            </summary>
            <value>Timestamp of notifiction creation.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationAttributes.Modified">
            <summary>
            Timestamp of notification modification.
            </summary>
            <value>Timestamp of notification modification.</value>
        </member>
        <member name="T:IO.Swagger.Model.NotificationAttributes.TypeEnum">
            <summary>
            Type of the resoucre the notification is attached to. 
            </summary>
            <value>Type of the resoucre the notification is attached to. </value>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.TypeEnum.File">
            <summary>
            Enum File for value: file
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.TypeEnum.Folder">
            <summary>
            Enum Folder for value: folder
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.TypeEnum.Sharedfolder">
            <summary>
            Enum Sharedfolder for value: shared_folder
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.TypeEnum.Sendreceipt">
            <summary>
            Enum Sendreceipt for value: send_receipt
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.TypeEnum.Sharereceipt">
            <summary>
            Enum Sharereceipt for value: share_receipt
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.TypeEnum.Filedrop">
            <summary>
            Enum Filedrop for value: file_drop
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationAttributes.ActionEnum">
            <summary>
            Action that triggers notification.
            </summary>
            <value>Action that triggers notification.</value>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.ActionEnum.Upload">
            <summary>
            Enum Upload for value: upload
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.ActionEnum.Download">
            <summary>
            Enum Download for value: download
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.ActionEnum.Delete">
            <summary>
            Enum Delete for value: delete
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.NotificationAttributes.ActionEnum.All">
            <summary>
            Enum All for value: all
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationCollectionResponse">
            <summary>
            Response object for notifications collection.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationCollectionResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.Notification},System.Collections.Generic.List{IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationCollectionResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response..</param>
            <param name="totalResults">Total results found. .</param>
            <param name="returnedResults">Number of returned results..</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationCollectionResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationCollectionResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationCollectionResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationCollectionResponse.Equals(IO.Swagger.Model.NotificationCollectionResponse)">
            <summary>
            Returns true if NotificationCollectionResponse instances are equal
            </summary>
            <param name="input">Instance of NotificationCollectionResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationCollectionResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationCollectionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationCollectionResponse.ResponseStatus">
            <summary>
            Http status code of the response.
            </summary>
            <value>Http status code of the response.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationCollectionResponse.TotalResults">
            <summary>
            Total results found. 
            </summary>
            <value>Total results found. </value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationCollectionResponse.ReturnedResults">
            <summary>
            Number of returned results.
            </summary>
            <value>Number of returned results.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationCollectionResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.NotificationCollectionResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationRecipient">
            <summary>
            NotificationRecipient
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRecipient.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationRecipient"/> class.
            </summary>
            <param name="id">ID of the recipient..</param>
            <param name="notificationId">ID of the notification that the recipient belongs to..</param>
            <param name="email">Recipient email..</param>
            <param name="created">Timestamp of adding notification recipient..</param>
            <param name="modified">Timestamp of notification recipient modification..</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRecipient.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRecipient.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRecipient.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRecipient.Equals(IO.Swagger.Model.NotificationRecipient)">
            <summary>
            Returns true if NotificationRecipient instances are equal
            </summary>
            <param name="input">Instance of NotificationRecipient to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRecipient.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRecipient.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRecipient.Id">
            <summary>
            ID of the recipient.
            </summary>
            <value>ID of the recipient.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRecipient.NotificationId">
            <summary>
            ID of the notification that the recipient belongs to.
            </summary>
            <value>ID of the notification that the recipient belongs to.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRecipient.Email">
            <summary>
            Recipient email.
            </summary>
            <value>Recipient email.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRecipient.Created">
            <summary>
            Timestamp of adding notification recipient.
            </summary>
            <value>Timestamp of adding notification recipient.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRecipient.Modified">
            <summary>
            Timestamp of notification recipient modification.
            </summary>
            <value>Timestamp of notification recipient modification.</value>
        </member>
        <member name="T:IO.Swagger.Model.NotificationRelationships">
            <summary>
            NotificationRelationships
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationships.#ctor(IO.Swagger.Model.NotificationRelationshipsResource,IO.Swagger.Model.NotificationRelationshipsShare,IO.Swagger.Model.NotificationRelationshipsOwnerUser)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationRelationships"/> class.
            </summary>
            <param name="resource">resource.</param>
            <param name="share">share.</param>
            <param name="ownerUser">ownerUser.</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationships.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationships.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationships.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationships.Equals(IO.Swagger.Model.NotificationRelationships)">
            <summary>
            Returns true if NotificationRelationships instances are equal
            </summary>
            <param name="input">Instance of NotificationRelationships to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationships.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationships.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationships.Resource">
            <summary>
            Gets or Sets Resource
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationships.Share">
            <summary>
            Gets or Sets Share
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationships.OwnerUser">
            <summary>
            Gets or Sets OwnerUser
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationRelationshipsOwnerUser">
            <summary>
            NotificationRelationshipsOwnerUser
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUser.#ctor(IO.Swagger.Model.NotificationRelationshipsOwnerUserData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationRelationshipsOwnerUser"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUser.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUser.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUser.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUser.Equals(IO.Swagger.Model.NotificationRelationshipsOwnerUser)">
            <summary>
            Returns true if NotificationRelationshipsOwnerUser instances are equal
            </summary>
            <param name="input">Instance of NotificationRelationshipsOwnerUser to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUser.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUser.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationshipsOwnerUser.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationRelationshipsOwnerUserData">
            <summary>
            NotificationRelationshipsOwnerUserData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.#ctor(System.Nullable{IO.Swagger.Model.NotificationRelationshipsOwnerUserData.TypeEnum},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationRelationshipsOwnerUserData"/> class.
            </summary>
            <param name="type">null.</param>
            <param name="id">null.</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.Equals(IO.Swagger.Model.NotificationRelationshipsOwnerUserData)">
            <summary>
            Returns true if NotificationRelationshipsOwnerUserData instances are equal
            </summary>
            <param name="input">Instance of NotificationRelationshipsOwnerUserData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.Type">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.Id">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="T:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.TypeEnum">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="F:IO.Swagger.Model.NotificationRelationshipsOwnerUserData.TypeEnum.User">
            <summary>
            Enum User for value: user
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationRelationshipsResource">
            <summary>
            NotificationRelationshipsResource
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResource.#ctor(IO.Swagger.Model.NotificationRelationshipsResourceData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationRelationshipsResource"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResource.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResource.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResource.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResource.Equals(IO.Swagger.Model.NotificationRelationshipsResource)">
            <summary>
            Returns true if NotificationRelationshipsResource instances are equal
            </summary>
            <param name="input">Instance of NotificationRelationshipsResource to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResource.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResource.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationshipsResource.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationRelationshipsResourceData">
            <summary>
            NotificationRelationshipsResourceData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResourceData.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationRelationshipsResourceData"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="id">id.</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResourceData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResourceData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResourceData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResourceData.Equals(IO.Swagger.Model.NotificationRelationshipsResourceData)">
            <summary>
            Returns true if NotificationRelationshipsResourceData instances are equal
            </summary>
            <param name="input">Instance of NotificationRelationshipsResourceData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResourceData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsResourceData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationshipsResourceData.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationshipsResourceData.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationRelationshipsShare">
            <summary>
            NotificationRelationshipsShare
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShare.#ctor(IO.Swagger.Model.NotificationRelationshipsShareData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationRelationshipsShare"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShare.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShare.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShare.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShare.Equals(IO.Swagger.Model.NotificationRelationshipsShare)">
            <summary>
            Returns true if NotificationRelationshipsShare instances are equal
            </summary>
            <param name="input">Instance of NotificationRelationshipsShare to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShare.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShare.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationshipsShare.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationRelationshipsShareData">
            <summary>
            NotificationRelationshipsShareData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShareData.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationRelationshipsShareData"/> class.
            </summary>
            <param name="type">type.</param>
            <param name="id">id.</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShareData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShareData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShareData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShareData.Equals(IO.Swagger.Model.NotificationRelationshipsShareData)">
            <summary>
            Returns true if NotificationRelationshipsShareData instances are equal
            </summary>
            <param name="input">Instance of NotificationRelationshipsShareData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShareData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationRelationshipsShareData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationshipsShareData.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.NotificationRelationshipsShareData.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.NotificationResponse">
            <summary>
            Response object for notifications.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.NotificationResponse.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.Notification,System.Collections.Generic.List{IO.Swagger.Model.OneOfNotificationResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.NotificationResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response..</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.NotificationResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationResponse.Equals(IO.Swagger.Model.NotificationResponse)">
            <summary>
            Returns true if NotificationResponse instances are equal
            </summary>
            <param name="input">Instance of NotificationResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.NotificationResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.NotificationResponse.ResponseStatus">
            <summary>
            Http status code of the response.
            </summary>
            <value>Http status code of the response.</value>
        </member>
        <member name="P:IO.Swagger.Model.NotificationResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.NotificationResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.OneOfAccountResponseIncludedItems">
            <summary>
            OneOfAccountResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfAccountResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfAccountResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfAccountResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfAccountResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfAccountResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfAccountResponseIncludedItems.Equals(IO.Swagger.Model.OneOfAccountResponseIncludedItems)">
            <summary>
            Returns true if OneOfAccountResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfAccountResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfAccountResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfAccountResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfFormResponseIncludedItems">
            <summary>
            OneOfFormResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfFormResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfFormResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfFormResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfFormResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfFormResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfFormResponseIncludedItems.Equals(IO.Swagger.Model.OneOfFormResponseIncludedItems)">
            <summary>
            Returns true if OneOfFormResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfFormResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfFormResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfFormResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems">
            <summary>
            OneOfNotificationCollectionResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems.Equals(IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems)">
            <summary>
            Returns true if OneOfNotificationCollectionResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfNotificationCollectionResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationCollectionResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfNotificationResponseIncludedItems">
            <summary>
            OneOfNotificationResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfNotificationResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationResponseIncludedItems.Equals(IO.Swagger.Model.OneOfNotificationResponseIncludedItems)">
            <summary>
            Returns true if OneOfNotificationResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfNotificationResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfNotificationResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems">
            <summary>
            OneOfResourceCollectionResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems.Equals(IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems)">
            <summary>
            Returns true if OneOfResourceCollectionResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfResourceCollectionResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems">
            <summary>
            OneOfResourceMultiResponseResponsesItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems.Equals(IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems)">
            <summary>
            Returns true if OneOfResourceMultiResponseResponsesItems instances are equal
            </summary>
            <param name="input">Instance of OneOfResourceMultiResponseResponsesItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfResourceResponseIncludedItems">
            <summary>
            OneOfResourceResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfResourceResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceResponseIncludedItems.Equals(IO.Swagger.Model.OneOfResourceResponseIncludedItems)">
            <summary>
            Returns true if OneOfResourceResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfResourceResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfResourceResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems">
            <summary>
            OneOfShareCollectionResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems.Equals(IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems)">
            <summary>
            Returns true if OneOfShareCollectionResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfShareCollectionResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfShareResponseIncludedItems">
            <summary>
            OneOfShareResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfShareResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareResponseIncludedItems.Equals(IO.Swagger.Model.OneOfShareResponseIncludedItems)">
            <summary>
            Returns true if OneOfShareResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfShareResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfShareResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems">
            <summary>
            OneOfUserCollectionResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems.Equals(IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems)">
            <summary>
            Returns true if OneOfUserCollectionResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfUserCollectionResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.OneOfUserResponseIncludedItems">
            <summary>
            OneOfUserResponseIncludedItems
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserResponseIncludedItems.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.OneOfUserResponseIncludedItems"/> class.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserResponseIncludedItems.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserResponseIncludedItems.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserResponseIncludedItems.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserResponseIncludedItems.Equals(IO.Swagger.Model.OneOfUserResponseIncludedItems)">
            <summary>
            Returns true if OneOfUserResponseIncludedItems instances are equal
            </summary>
            <param name="input">Instance of OneOfUserResponseIncludedItems to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserResponseIncludedItems.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.OneOfUserResponseIncludedItems.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:IO.Swagger.Model.PreviewFile">
            <summary>
            Object with preview image properties.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFile.#ctor(System.Nullable{System.Int32},System.String,IO.Swagger.Model.PreviewFileAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.PreviewFile"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
            <param name="attributes">attributes.</param>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFile.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFile.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFile.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFile.Equals(IO.Swagger.Model.PreviewFile)">
            <summary>
            Returns true if PreviewFile instances are equal
            </summary>
            <param name="input">Instance of PreviewFile to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFile.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFile.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.PreviewFile.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.PreviewFile.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.PreviewFile.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.PreviewFileAttributes">
            <summary>
            PreviewFileAttributes
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileAttributes.#ctor(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.PreviewFileAttributes"/> class.
            </summary>
            <param name="image">Binary image content, base64 encoded..</param>
            <param name="size">Size of the image in bytes..</param>
            <param name="imageHash">hash of the image..</param>
            <param name="pageCount">Amount of pages available in the file. Used only for multipage documents..</param>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileAttributes.Equals(IO.Swagger.Model.PreviewFileAttributes)">
            <summary>
            Returns true if PreviewFileAttributes instances are equal
            </summary>
            <param name="input">Instance of PreviewFileAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.PreviewFileAttributes.Image">
            <summary>
            Binary image content, base64 encoded.
            </summary>
            <value>Binary image content, base64 encoded.</value>
        </member>
        <member name="P:IO.Swagger.Model.PreviewFileAttributes.Size">
            <summary>
            Size of the image in bytes.
            </summary>
            <value>Size of the image in bytes.</value>
        </member>
        <member name="P:IO.Swagger.Model.PreviewFileAttributes.ImageHash">
            <summary>
            hash of the image.
            </summary>
            <value>hash of the image.</value>
        </member>
        <member name="P:IO.Swagger.Model.PreviewFileAttributes.PageCount">
            <summary>
            Amount of pages available in the file. Used only for multipage documents.
            </summary>
            <value>Amount of pages available in the file. Used only for multipage documents.</value>
        </member>
        <member name="T:IO.Swagger.Model.PreviewFileResponse">
            <summary>
            Response object for preview file
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileResponse.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.PreviewFile)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.PreviewFileResponse"/> class.
            </summary>
            <param name="responseStatus">HTTP Status Code.</param>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileResponse.Equals(IO.Swagger.Model.PreviewFileResponse)">
            <summary>
            Returns true if PreviewFileResponse instances are equal
            </summary>
            <param name="input">Instance of PreviewFileResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.PreviewFileResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.PreviewFileResponse.ResponseStatus">
            <summary>
            HTTP Status Code
            </summary>
            <value>HTTP Status Code</value>
        </member>
        <member name="P:IO.Swagger.Model.PreviewFileResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Quota">
            <summary>
            Quota
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Quota.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Quota"/> class.
            </summary>
            <param name="diskLimit">Amount of disk space that the account has available to it. This may be increased by upgrading to a larger plan..</param>
            <param name="diskUsed">Amount of disk space currently in use..</param>
            <param name="noticeEnabled">Should a quota warning be sent to the account owner when a threshold level of space utilization is reached?.</param>
            <param name="noticeThreshold">Treshold that triggers a quota notification. This represents the \"percent full\" your account must be before the quota notification is generated..</param>
        </member>
        <member name="M:IO.Swagger.Model.Quota.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Quota.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Quota.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Quota.Equals(IO.Swagger.Model.Quota)">
            <summary>
            Returns true if Quota instances are equal
            </summary>
            <param name="input">Instance of Quota to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Quota.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Quota.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Quota.DiskLimit">
            <summary>
            Amount of disk space that the account has available to it. This may be increased by upgrading to a larger plan.
            </summary>
            <value>Amount of disk space that the account has available to it. This may be increased by upgrading to a larger plan.</value>
        </member>
        <member name="P:IO.Swagger.Model.Quota.DiskUsed">
            <summary>
            Amount of disk space currently in use.
            </summary>
            <value>Amount of disk space currently in use.</value>
        </member>
        <member name="P:IO.Swagger.Model.Quota.NoticeEnabled">
            <summary>
            Should a quota warning be sent to the account owner when a threshold level of space utilization is reached?
            </summary>
            <value>Should a quota warning be sent to the account owner when a threshold level of space utilization is reached?</value>
        </member>
        <member name="P:IO.Swagger.Model.Quota.NoticeThreshold">
            <summary>
            Treshold that triggers a quota notification. This represents the \&quot;percent full\&quot; your account must be before the quota notification is generated.
            </summary>
            <value>Treshold that triggers a quota notification. This represents the \&quot;percent full\&quot; your account must be before the quota notification is generated.</value>
        </member>
        <member name="T:IO.Swagger.Model.RelationshipData">
            <summary>
            Identifying info for related record
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.RelationshipData.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.RelationshipData"/> class.
            </summary>
            <param name="id">ID number of related record.</param>
            <param name="type">Kind of record.</param>
        </member>
        <member name="M:IO.Swagger.Model.RelationshipData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.RelationshipData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.RelationshipData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.RelationshipData.Equals(IO.Swagger.Model.RelationshipData)">
            <summary>
            Returns true if RelationshipData instances are equal
            </summary>
            <param name="input">Instance of RelationshipData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.RelationshipData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.RelationshipData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.RelationshipData.Id">
            <summary>
            ID number of related record
            </summary>
            <value>ID number of related record</value>
        </member>
        <member name="P:IO.Swagger.Model.RelationshipData.Type">
            <summary>
            Kind of record
            </summary>
            <value>Kind of record</value>
        </member>
        <member name="T:IO.Swagger.Model.Resource">
            <summary>
            All properties of the resource.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Resource.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.Resource.TypeEnum},IO.Swagger.Model.ResourceAttributes,IO.Swagger.Model.ResourceRelationships)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Resource"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">Type of item. \"resource\".</param>
            <param name="attributes">attributes.</param>
            <param name="relationships">relationships.</param>
        </member>
        <member name="M:IO.Swagger.Model.Resource.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Resource.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Resource.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Resource.Equals(IO.Swagger.Model.Resource)">
            <summary>
            Returns true if Resource instances are equal
            </summary>
            <param name="input">Instance of Resource to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Resource.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Resource.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Resource.Type">
            <summary>
            Type of item. \&quot;resource\&quot;
            </summary>
            <value>Type of item. \&quot;resource\&quot;</value>
        </member>
        <member name="P:IO.Swagger.Model.Resource.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Resource.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Resource.Relationships">
            <summary>
            Gets or Sets Relationships
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Resource.TypeEnum">
            <summary>
            Type of item. \&quot;resource\&quot;
            </summary>
            <value>Type of item. \&quot;resource\&quot;</value>
        </member>
        <member name="F:IO.Swagger.Model.Resource.TypeEnum.Resource">
            <summary>
            Enum Resource for value: resource
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceAttributes">
            <summary>
            Attributes of resource
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceAttributes.#ctor(System.String,System.String,System.String,System.Nullable{IO.Swagger.Model.ResourceAttributes.TypeEnum},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceAttributes"/> class.
            </summary>
            <param name="hash">Unique hash of the resource..</param>
            <param name="name">Resource name, e.g. the name of the file or folder..</param>
            <param name="extension">Resource extension. Property exists only if resource `type` is file..</param>
            <param name="type">Type of the resource..</param>
            <param name="createdBy">Username of the creator..</param>
            <param name="uploadDate">Timestamp of resource upload..</param>
            <param name="createdAt">Date-time of resource creation..</param>
            <param name="updatedAt">Date-time of resource modification..</param>
            <param name="accessedAt">Date-time of the time when resource was accessed..</param>
            <param name="createdTime">UNIX timestamp of resource creation.</param>
            <param name="updatedTime">UNIX timestamp of resource modification.</param>
            <param name="accessedTime">UNIX timestamp of last access.</param>
            <param name="path">Full path to the resource..</param>
            <param name="size">Resource size in bytes.</param>
            <param name="fileCount">Number of files within folder. null if resource type is a file..</param>
            <param name="previewable">Can resource be previewed. Property equals `null` if resource `type` is dir..</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceAttributes.Equals(IO.Swagger.Model.ResourceAttributes)">
            <summary>
            Returns true if ResourceAttributes instances are equal
            </summary>
            <param name="input">Instance of ResourceAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.Type">
            <summary>
            Type of the resource.
            </summary>
            <value>Type of the resource.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.Hash">
            <summary>
            Unique hash of the resource.
            </summary>
            <value>Unique hash of the resource.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.Name">
            <summary>
            Resource name, e.g. the name of the file or folder.
            </summary>
            <value>Resource name, e.g. the name of the file or folder.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.Extension">
            <summary>
            Resource extension. Property exists only if resource &#x60;type&#x60; is file.
            </summary>
            <value>Resource extension. Property exists only if resource &#x60;type&#x60; is file.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.CreatedBy">
            <summary>
            Username of the creator.
            </summary>
            <value>Username of the creator.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.UploadDate">
            <summary>
            Timestamp of resource upload.
            </summary>
            <value>Timestamp of resource upload.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.CreatedAt">
            <summary>
            Date-time of resource creation.
            </summary>
            <value>Date-time of resource creation.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.UpdatedAt">
            <summary>
            Date-time of resource modification.
            </summary>
            <value>Date-time of resource modification.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.AccessedAt">
            <summary>
            Date-time of the time when resource was accessed.
            </summary>
            <value>Date-time of the time when resource was accessed.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.CreatedTime">
            <summary>
            UNIX timestamp of resource creation
            </summary>
            <value>UNIX timestamp of resource creation</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.UpdatedTime">
            <summary>
            UNIX timestamp of resource modification
            </summary>
            <value>UNIX timestamp of resource modification</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.AccessedTime">
            <summary>
            UNIX timestamp of last access
            </summary>
            <value>UNIX timestamp of last access</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.Path">
            <summary>
            Full path to the resource.
            </summary>
            <value>Full path to the resource.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.Size">
            <summary>
            Resource size in bytes
            </summary>
            <value>Resource size in bytes</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.FileCount">
            <summary>
            Number of files within folder. null if resource type is a file.
            </summary>
            <value>Number of files within folder. null if resource type is a file.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceAttributes.Previewable">
            <summary>
            Can resource be previewed. Property equals &#x60;null&#x60; if resource &#x60;type&#x60; is dir.
            </summary>
            <value>Can resource be previewed. Property equals &#x60;null&#x60; if resource &#x60;type&#x60; is dir.</value>
        </member>
        <member name="T:IO.Swagger.Model.ResourceAttributes.TypeEnum">
            <summary>
            Type of the resource.
            </summary>
            <value>Type of the resource.</value>
        </member>
        <member name="F:IO.Swagger.Model.ResourceAttributes.TypeEnum.File">
            <summary>
            Enum File for value: file
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ResourceAttributes.TypeEnum.Dir">
            <summary>
            Enum Dir for value: dir
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceCollectionResponse">
            <summary>
            Response object for collection of resources.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCollectionResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.Resource},System.Collections.Generic.List{IO.Swagger.Model.OneOfResourceCollectionResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceCollectionResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response..</param>
            <param name="totalResults">Total count of results found..</param>
            <param name="returnedResults">Count of returned results..</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCollectionResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCollectionResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCollectionResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCollectionResponse.Equals(IO.Swagger.Model.ResourceCollectionResponse)">
            <summary>
            Returns true if ResourceCollectionResponse instances are equal
            </summary>
            <param name="input">Instance of ResourceCollectionResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCollectionResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCollectionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceCollectionResponse.ResponseStatus">
            <summary>
            Http status code of the response.
            </summary>
            <value>Http status code of the response.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceCollectionResponse.TotalResults">
            <summary>
            Total count of results found.
            </summary>
            <value>Total count of results found.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceCollectionResponse.ReturnedResults">
            <summary>
            Count of returned results.
            </summary>
            <value>Count of returned results.</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceCollectionResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceCollectionResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceCopyMove">
            <summary>
            All properties of the resource delete object
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCopyMove.#ctor(IO.Swagger.Model.Resource,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceCopyMove"/> class.
            </summary>
            <param name="data">data.</param>
            <param name="meta">Meta object containing non-standard meta-information about operation..</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCopyMove.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCopyMove.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCopyMove.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCopyMove.Equals(IO.Swagger.Model.ResourceCopyMove)">
            <summary>
            Returns true if ResourceCopyMove instances are equal
            </summary>
            <param name="input">Instance of ResourceCopyMove to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCopyMove.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceCopyMove.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceCopyMove.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceCopyMove.Meta">
            <summary>
            Meta object containing non-standard meta-information about operation.
            </summary>
            <value>Meta object containing non-standard meta-information about operation.</value>
        </member>
        <member name="T:IO.Swagger.Model.ResourceDelete">
            <summary>
            All properties of the resource delete object
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceDelete.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.ResourceDelete.TypeEnum},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceDelete"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">Type of item. \"resource\".</param>
            <param name="meta">Meta object containing non-standard meta-information about the delete operation..</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceDelete.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceDelete.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceDelete.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceDelete.Equals(IO.Swagger.Model.ResourceDelete)">
            <summary>
            Returns true if ResourceDelete instances are equal
            </summary>
            <param name="input">Instance of ResourceDelete to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceDelete.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceDelete.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceDelete.Type">
            <summary>
            Type of item. \&quot;resource\&quot;
            </summary>
            <value>Type of item. \&quot;resource\&quot;</value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceDelete.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceDelete.Meta">
            <summary>
            Meta object containing non-standard meta-information about the delete operation.
            </summary>
            <value>Meta object containing non-standard meta-information about the delete operation.</value>
        </member>
        <member name="T:IO.Swagger.Model.ResourceDelete.TypeEnum">
            <summary>
            Type of item. \&quot;resource\&quot;
            </summary>
            <value>Type of item. \&quot;resource\&quot;</value>
        </member>
        <member name="F:IO.Swagger.Model.ResourceDelete.TypeEnum.Resource">
            <summary>
            Enum Resource for value: resource
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceMultiResponse">
            <summary>
            ResourceMultiResponse
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceMultiResponse.#ctor(System.Collections.Generic.List{IO.Swagger.Model.OneOfResourceMultiResponseResponsesItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceMultiResponse"/> class.
            </summary>
            <param name="responses">responses.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceMultiResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceMultiResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceMultiResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceMultiResponse.Equals(IO.Swagger.Model.ResourceMultiResponse)">
            <summary>
            Returns true if ResourceMultiResponse instances are equal
            </summary>
            <param name="input">Instance of ResourceMultiResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceMultiResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceMultiResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceMultiResponse.Responses">
            <summary>
            Gets or Sets Responses
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceRelationships">
            <summary>
            ResourceRelationships
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationships.#ctor(IO.Swagger.Model.ResourceRelationshipsShare,System.Collections.Generic.List{IO.Swagger.Model.ResourceRelationshipsNotifications},IO.Swagger.Model.ResourceRelationshipsDirectFile,IO.Swagger.Model.ResourceRelationshipsParentResource)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceRelationships"/> class.
            </summary>
            <param name="share">share.</param>
            <param name="notifications">notifications.</param>
            <param name="directFile">directFile.</param>
            <param name="parentResource">parentResource.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationships.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationships.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationships.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationships.Equals(IO.Swagger.Model.ResourceRelationships)">
            <summary>
            Returns true if ResourceRelationships instances are equal
            </summary>
            <param name="input">Instance of ResourceRelationships to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationships.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationships.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationships.Share">
            <summary>
            Gets or Sets Share
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationships.Notifications">
            <summary>
            Gets or Sets Notifications
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationships.DirectFile">
            <summary>
            Gets or Sets DirectFile
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationships.ParentResource">
            <summary>
            Gets or Sets ParentResource
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceRelationshipsData">
            <summary>
            ResourceRelationshipsData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsData.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceRelationshipsData"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsData.Equals(IO.Swagger.Model.ResourceRelationshipsData)">
            <summary>
            Returns true if ResourceRelationshipsData instances are equal
            </summary>
            <param name="input">Instance of ResourceRelationshipsData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsData.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsData.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceRelationshipsDirectFile">
            <summary>
            ResourceRelationshipsDirectFile
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFile.#ctor(IO.Swagger.Model.ResourceRelationshipsDirectFileData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceRelationshipsDirectFile"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFile.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFile.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFile.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFile.Equals(IO.Swagger.Model.ResourceRelationshipsDirectFile)">
            <summary>
            Returns true if ResourceRelationshipsDirectFile instances are equal
            </summary>
            <param name="input">Instance of ResourceRelationshipsDirectFile to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFile.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFile.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsDirectFile.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceRelationshipsDirectFileData">
            <summary>
            ResourceRelationshipsDirectFileData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFileData.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceRelationshipsDirectFileData"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFileData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFileData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFileData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFileData.Equals(IO.Swagger.Model.ResourceRelationshipsDirectFileData)">
            <summary>
            Returns true if ResourceRelationshipsDirectFileData instances are equal
            </summary>
            <param name="input">Instance of ResourceRelationshipsDirectFileData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFileData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsDirectFileData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsDirectFileData.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsDirectFileData.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceRelationshipsNotifications">
            <summary>
            ResourceRelationshipsNotifications
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsNotifications.#ctor(IO.Swagger.Model.ResourceRelationshipsData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceRelationshipsNotifications"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsNotifications.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsNotifications.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsNotifications.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsNotifications.Equals(IO.Swagger.Model.ResourceRelationshipsNotifications)">
            <summary>
            Returns true if ResourceRelationshipsNotifications instances are equal
            </summary>
            <param name="input">Instance of ResourceRelationshipsNotifications to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsNotifications.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsNotifications.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsNotifications.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceRelationshipsParentResource">
            <summary>
            ResourceRelationshipsParentResource
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResource.#ctor(IO.Swagger.Model.ResourceRelationshipsParentResourceData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceRelationshipsParentResource"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResource.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResource.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResource.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResource.Equals(IO.Swagger.Model.ResourceRelationshipsParentResource)">
            <summary>
            Returns true if ResourceRelationshipsParentResource instances are equal
            </summary>
            <param name="input">Instance of ResourceRelationshipsParentResource to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResource.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResource.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsParentResource.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceRelationshipsParentResourceData">
            <summary>
            ResourceRelationshipsParentResourceData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResourceData.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceRelationshipsParentResourceData"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResourceData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResourceData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResourceData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResourceData.Equals(IO.Swagger.Model.ResourceRelationshipsParentResourceData)">
            <summary>
            Returns true if ResourceRelationshipsParentResourceData instances are equal
            </summary>
            <param name="input">Instance of ResourceRelationshipsParentResourceData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResourceData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsParentResourceData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsParentResourceData.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsParentResourceData.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceRelationshipsShare">
            <summary>
            ResourceRelationshipsShare
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShare.#ctor(IO.Swagger.Model.ResourceRelationshipsShareData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceRelationshipsShare"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShare.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShare.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShare.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShare.Equals(IO.Swagger.Model.ResourceRelationshipsShare)">
            <summary>
            Returns true if ResourceRelationshipsShare instances are equal
            </summary>
            <param name="input">Instance of ResourceRelationshipsShare to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShare.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShare.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsShare.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceRelationshipsShareData">
            <summary>
            ResourceRelationshipsShareData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShareData.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceRelationshipsShareData"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShareData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShareData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShareData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShareData.Equals(IO.Swagger.Model.ResourceRelationshipsShareData)">
            <summary>
            Returns true if ResourceRelationshipsShareData instances are equal
            </summary>
            <param name="input">Instance of ResourceRelationshipsShareData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShareData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceRelationshipsShareData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsShareData.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceRelationshipsShareData.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ResourceResponse">
            <summary>
            Response object for resources.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ResourceResponse.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.Resource,System.Collections.Generic.List{IO.Swagger.Model.OneOfResourceResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ResourceResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response. .</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.ResourceResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceResponse.Equals(IO.Swagger.Model.ResourceResponse)">
            <summary>
            Returns true if ResourceResponse instances are equal
            </summary>
            <param name="input">Instance of ResourceResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ResourceResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ResourceResponse.ResponseStatus">
            <summary>
            Http status code of the response. 
            </summary>
            <value>Http status code of the response. </value>
        </member>
        <member name="P:IO.Swagger.Model.ResourceResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ResourceResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SessionActivityEntry">
            <summary>
            Single entry of session activity
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntry.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.SessionActivityEntry.TypeEnum},IO.Swagger.Model.SessionActivityEntryAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SessionActivityEntry"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
            <param name="attributes">attributes.</param>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntry.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntry.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntry.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntry.Equals(IO.Swagger.Model.SessionActivityEntry)">
            <summary>
            Returns true if SessionActivityEntry instances are equal
            </summary>
            <param name="input">Instance of SessionActivityEntry to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntry.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntry.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntry.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntry.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntry.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SessionActivityEntry.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.SessionActivityEntry.TypeEnum.SessionActivity">
            <summary>
            Enum SessionActivity for value: sessionActivity
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SessionActivityEntryAttributes">
            <summary>
            SessionActivityEntryAttributes
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntryAttributes.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SessionActivityEntryAttributes"/> class.
            </summary>
            <param name="bytesTransferred">bytesTransferred.</param>
            <param name="created">created.</param>
            <param name="duration">duration.</param>
            <param name="fileName">fileName.</param>
            <param name="fileSource">fileSource.</param>
            <param name="ipAddress">ipAddress.</param>
            <param name="operation">operation.</param>
            <param name="protocol">protocol.</param>
            <param name="sessionId">sessionId.</param>
            <param name="status">status.</param>
            <param name="username">username.</param>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntryAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntryAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntryAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntryAttributes.Equals(IO.Swagger.Model.SessionActivityEntryAttributes)">
            <summary>
            Returns true if SessionActivityEntryAttributes instances are equal
            </summary>
            <param name="input">Instance of SessionActivityEntryAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntryAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityEntryAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.BytesTransferred">
            <summary>
            Gets or Sets BytesTransferred
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.Created">
            <summary>
            Gets or Sets Created
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.Duration">
            <summary>
            Gets or Sets Duration
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.FileName">
            <summary>
            Gets or Sets FileName
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.FileSource">
            <summary>
            Gets or Sets FileSource
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.IpAddress">
            <summary>
            Gets or Sets IpAddress
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.Operation">
            <summary>
            Gets or Sets Operation
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.Protocol">
            <summary>
            Gets or Sets Protocol
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.SessionId">
            <summary>
            Gets or Sets SessionId
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityEntryAttributes.Username">
            <summary>
            Gets or Sets Username
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SessionActivityResponse">
            <summary>
            Session activity list response
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.SessionActivityEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SessionActivityResponse"/> class.
            </summary>
            <param name="responseStatus">responseStatus.</param>
            <param name="totalResults">totalResults.</param>
            <param name="returnedResults">returnedResults.</param>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityResponse.Equals(IO.Swagger.Model.SessionActivityResponse)">
            <summary>
            Returns true if SessionActivityResponse instances are equal
            </summary>
            <param name="input">Instance of SessionActivityResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SessionActivityResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityResponse.ResponseStatus">
            <summary>
            Gets or Sets ResponseStatus
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityResponse.TotalResults">
            <summary>
            Gets or Sets TotalResults
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityResponse.ReturnedResults">
            <summary>
            Gets or Sets ReturnedResults
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.SessionActivityResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Share">
            <summary>
            Object contains share properties.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.Share.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.Share.TypeEnum},IO.Swagger.Model.ShareAttributes,IO.Swagger.Model.ShareRelationships)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.Share"/> class.
            </summary>
            <param name="id">ID of the share..</param>
            <param name="type">Type of the share. .</param>
            <param name="attributes">attributes.</param>
            <param name="relationships">relationships.</param>
        </member>
        <member name="M:IO.Swagger.Model.Share.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Share.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.Share.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Share.Equals(IO.Swagger.Model.Share)">
            <summary>
            Returns true if Share instances are equal
            </summary>
            <param name="input">Instance of Share to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.Share.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.Share.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.Share.Type">
            <summary>
            Type of the share. 
            </summary>
            <value>Type of the share. </value>
        </member>
        <member name="P:IO.Swagger.Model.Share.Id">
            <summary>
            ID of the share.
            </summary>
            <value>ID of the share.</value>
        </member>
        <member name="P:IO.Swagger.Model.Share.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.Share.Relationships">
            <summary>
            Gets or Sets Relationships
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.Share.TypeEnum">
            <summary>
            Type of the share. 
            </summary>
            <value>Type of the share. </value>
        </member>
        <member name="F:IO.Swagger.Model.Share.TypeEnum.Share">
            <summary>
            Enum Share for value: share
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareAttributes">
            <summary>
            Attributes of the share including the name, path and share recipients. 
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareAttributes.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{IO.Swagger.Model.ShareAttributes.AccessModeEnum},System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{IO.Swagger.Model.ShareAttributes.TypeEnum},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.List{System.String},System.Collections.Generic.List{IO.Swagger.Model.ShareRecipient1},System.Collections.Generic.List{IO.Swagger.Model.ShareMessage},System.Nullable{System.Boolean},System.Nullable{IO.Swagger.Model.ShareAttributes.StatusEnum},System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{IO.Swagger.Model.ShareAttributes.TrackingStatusEnum},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareAttributes"/> class.
            </summary>
            <param name="name">Share name..</param>
            <param name="hasPassword">True if the share has password..</param>
            <param name="_public">True if the share has a public url..</param>
            <param name="accessMode">Access rights for the share..</param>
            <param name="accessDescription">Description of the share access rights..</param>
            <param name="embed">True if share can be embedded..</param>
            <param name="hash">Share hash..</param>
            <param name="ownerHash">Share owner's hash..</param>
            <param name="expiration">Expiration date of the share..</param>
            <param name="expired">True if the share has expired..</param>
            <param name="resent">Invitations resent date. Can be `null` if resent never happened..</param>
            <param name="type">Type of share..</param>
            <param name="requireEmail">True if share requires email to access..</param>
            <param name="fileDropCreateFolders">Flag to show if separate folders should be created for each file upload to receive folder..</param>
            <param name="paths">Path to the shared resource in your account..</param>
            <param name="recipients">Array of recipients..</param>
            <param name="messages">Array of invitation messages..</param>
            <param name="inherited">True if share inherited from parent folder..</param>
            <param name="status">Share activity status. Can be active (1) or deactivated (0)..</param>
            <param name="hasNotification">True if share has notification..</param>
            <param name="created">Timestamp of share creation..</param>
            <param name="modified">Timestamp of share modification. Can be `null` if it wasn't modified..</param>
            <param name="trackingStatus">Checks recipient received status and returns whether it's been recevied (`complete`,) partial recevied (`incomplete`,) or not recevied yet (`pending`.).</param>
            <param name="formId">ID of the form..</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareAttributes.Equals(IO.Swagger.Model.ShareAttributes)">
            <summary>
            Returns true if ShareAttributes instances are equal
            </summary>
            <param name="input">Instance of ShareAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.AccessMode">
            <summary>
            Access rights for the share.
            </summary>
            <value>Access rights for the share.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Type">
            <summary>
            Type of share.
            </summary>
            <value>Type of share.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Status">
            <summary>
            Share activity status. Can be active (1) or deactivated (0).
            </summary>
            <value>Share activity status. Can be active (1) or deactivated (0).</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.TrackingStatus">
            <summary>
            Checks recipient received status and returns whether it&#x27;s been recevied (&#x60;complete&#x60;,) partial recevied (&#x60;incomplete&#x60;,) or not recevied yet (&#x60;pending&#x60;.)
            </summary>
            <value>Checks recipient received status and returns whether it&#x27;s been recevied (&#x60;complete&#x60;,) partial recevied (&#x60;incomplete&#x60;,) or not recevied yet (&#x60;pending&#x60;.)</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Name">
            <summary>
            Share name.
            </summary>
            <value>Share name.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.HasPassword">
            <summary>
            True if the share has password.
            </summary>
            <value>True if the share has password.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Public">
            <summary>
            True if the share has a public url.
            </summary>
            <value>True if the share has a public url.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.AccessDescription">
            <summary>
            Description of the share access rights.
            </summary>
            <value>Description of the share access rights.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Embed">
            <summary>
            True if share can be embedded.
            </summary>
            <value>True if share can be embedded.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Hash">
            <summary>
            Share hash.
            </summary>
            <value>Share hash.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.OwnerHash">
            <summary>
            Share owner&#x27;s hash.
            </summary>
            <value>Share owner&#x27;s hash.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Expiration">
            <summary>
            Expiration date of the share.
            </summary>
            <value>Expiration date of the share.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Expired">
            <summary>
            True if the share has expired.
            </summary>
            <value>True if the share has expired.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Resent">
            <summary>
            Invitations resent date. Can be &#x60;null&#x60; if resent never happened.
            </summary>
            <value>Invitations resent date. Can be &#x60;null&#x60; if resent never happened.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.RequireEmail">
            <summary>
            True if share requires email to access.
            </summary>
            <value>True if share requires email to access.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.FileDropCreateFolders">
            <summary>
            Flag to show if separate folders should be created for each file upload to receive folder.
            </summary>
            <value>Flag to show if separate folders should be created for each file upload to receive folder.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Paths">
            <summary>
            Path to the shared resource in your account.
            </summary>
            <value>Path to the shared resource in your account.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Recipients">
            <summary>
            Array of recipients.
            </summary>
            <value>Array of recipients.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Messages">
            <summary>
            Array of invitation messages.
            </summary>
            <value>Array of invitation messages.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Inherited">
            <summary>
            True if share inherited from parent folder.
            </summary>
            <value>True if share inherited from parent folder.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.HasNotification">
            <summary>
            True if share has notification.
            </summary>
            <value>True if share has notification.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Created">
            <summary>
            Timestamp of share creation.
            </summary>
            <value>Timestamp of share creation.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.Modified">
            <summary>
            Timestamp of share modification. Can be &#x60;null&#x60; if it wasn&#x27;t modified.
            </summary>
            <value>Timestamp of share modification. Can be &#x60;null&#x60; if it wasn&#x27;t modified.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareAttributes.FormId">
            <summary>
            ID of the form.
            </summary>
            <value>ID of the form.</value>
        </member>
        <member name="T:IO.Swagger.Model.ShareAttributes.AccessModeEnum">
            <summary>
            Access rights for the share.
            </summary>
            <value>Access rights for the share.</value>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.AccessModeEnum.Upload">
            <summary>
            Enum Upload for value: upload
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.AccessModeEnum.Download">
            <summary>
            Enum Download for value: download
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.AccessModeEnum.Downloadupload">
            <summary>
            Enum Downloadupload for value: download_upload
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.AccessModeEnum.Downloaduploadmodifydelete">
            <summary>
            Enum Downloaduploadmodifydelete for value: download_upload_modify_delete
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareAttributes.TypeEnum">
            <summary>
            Type of share.
            </summary>
            <value>Type of share.</value>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.TypeEnum.Sharedfolder">
            <summary>
            Enum Sharedfolder for value: shared_folder
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.TypeEnum.Send">
            <summary>
            Enum Send for value: send
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.TypeEnum.Receive">
            <summary>
            Enum Receive for value: receive
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareAttributes.StatusEnum">
            <summary>
            Share activity status. Can be active (1) or deactivated (0).
            </summary>
            <value>Share activity status. Can be active (1) or deactivated (0).</value>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.StatusEnum.NUMBER_0">
            <summary>
            Enum NUMBER_0 for value: 0
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.StatusEnum.NUMBER_1">
            <summary>
            Enum NUMBER_1 for value: 1
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareAttributes.TrackingStatusEnum">
            <summary>
            Checks recipient received status and returns whether it&#x27;s been recevied (&#x60;complete&#x60;,) partial recevied (&#x60;incomplete&#x60;,) or not recevied yet (&#x60;pending&#x60;.)
            </summary>
            <value>Checks recipient received status and returns whether it&#x27;s been recevied (&#x60;complete&#x60;,) partial recevied (&#x60;incomplete&#x60;,) or not recevied yet (&#x60;pending&#x60;.)</value>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.TrackingStatusEnum.Complete">
            <summary>
            Enum Complete for value: complete
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.TrackingStatusEnum.Incomplete">
            <summary>
            Enum Incomplete for value: incomplete
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareAttributes.TrackingStatusEnum.Pending">
            <summary>
            Enum Pending for value: pending
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareCollectionResponse">
            <summary>
            ShareCollectionResponse
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareCollectionResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.Share},System.Collections.Generic.List{IO.Swagger.Model.OneOfShareCollectionResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareCollectionResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response..</param>
            <param name="totalResults">Total results found. .</param>
            <param name="returnedResults">Number of returned results..</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareCollectionResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareCollectionResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareCollectionResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareCollectionResponse.Equals(IO.Swagger.Model.ShareCollectionResponse)">
            <summary>
            Returns true if ShareCollectionResponse instances are equal
            </summary>
            <param name="input">Instance of ShareCollectionResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareCollectionResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareCollectionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareCollectionResponse.ResponseStatus">
            <summary>
            Http status code of the response.
            </summary>
            <value>Http status code of the response.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareCollectionResponse.TotalResults">
            <summary>
            Total results found. 
            </summary>
            <value>Total results found. </value>
        </member>
        <member name="P:IO.Swagger.Model.ShareCollectionResponse.ReturnedResults">
            <summary>
            Number of returned results.
            </summary>
            <value>Number of returned results.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareCollectionResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ShareCollectionResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareMessage">
            <summary>
            ShareMessage
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessage.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.ShareMessage.TypeEnum},IO.Swagger.Model.ShareMessageAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareMessage"/> class.
            </summary>
            <param name="id">Message id..</param>
            <param name="type">Resource type.</param>
            <param name="attributes">attributes.</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessage.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessage.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessage.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessage.Equals(IO.Swagger.Model.ShareMessage)">
            <summary>
            Returns true if ShareMessage instances are equal
            </summary>
            <param name="input">Instance of ShareMessage to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessage.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessage.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareMessage.Type">
            <summary>
            Resource type
            </summary>
            <value>Resource type</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareMessage.Id">
            <summary>
            Message id.
            </summary>
            <value>Message id.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareMessage.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareMessage.TypeEnum">
            <summary>
            Resource type
            </summary>
            <value>Resource type</value>
        </member>
        <member name="F:IO.Swagger.Model.ShareMessage.TypeEnum.Message">
            <summary>
            Enum Message for value: message
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareMessageAttributes">
            <summary>
            ShareMessageAttributes
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessageAttributes.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareMessageAttributes"/> class.
            </summary>
            <param name="subject">Message subject..</param>
            <param name="body">Message text..</param>
            <param name="created">Timestamp of message creation..</param>
            <param name="modified">Timestamp of message modification..</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessageAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessageAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessageAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessageAttributes.Equals(IO.Swagger.Model.ShareMessageAttributes)">
            <summary>
            Returns true if ShareMessageAttributes instances are equal
            </summary>
            <param name="input">Instance of ShareMessageAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessageAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareMessageAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareMessageAttributes.Subject">
            <summary>
            Message subject.
            </summary>
            <value>Message subject.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareMessageAttributes.Body">
            <summary>
            Message text.
            </summary>
            <value>Message text.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareMessageAttributes.Created">
            <summary>
            Timestamp of message creation.
            </summary>
            <value>Timestamp of message creation.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareMessageAttributes.Modified">
            <summary>
            Timestamp of message modification.
            </summary>
            <value>Timestamp of message modification.</value>
        </member>
        <member name="T:IO.Swagger.Model.ShareRecipient">
            <summary>
            ShareRecipient
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{IO.Swagger.Model.ShareRecipient.TypeEnum},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRecipient"/> class.
            </summary>
            <param name="id">ID of the recipient..</param>
            <param name="shareId">ID of the share that the recipoient belongs to..</param>
            <param name="type">Type of the recipient..</param>
            <param name="hash">Share hash..</param>
            <param name="email">Recipient email address..</param>
            <param name="sent">Set to true if invite email was sent; false otherwise..</param>
            <param name="received">Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file..</param>
            <param name="created">Timestamp of adding recipient to the share..</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient.Equals(IO.Swagger.Model.ShareRecipient)">
            <summary>
            Returns true if ShareRecipient instances are equal
            </summary>
            <param name="input">Instance of ShareRecipient to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient.Type">
            <summary>
            Type of the recipient.
            </summary>
            <value>Type of the recipient.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient.Id">
            <summary>
            ID of the recipient.
            </summary>
            <value>ID of the recipient.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient.ShareId">
            <summary>
            ID of the share that the recipoient belongs to.
            </summary>
            <value>ID of the share that the recipoient belongs to.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient.Hash">
            <summary>
            Share hash.
            </summary>
            <value>Share hash.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient.Email">
            <summary>
            Recipient email address.
            </summary>
            <value>Recipient email address.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient.Sent">
            <summary>
            Set to true if invite email was sent; false otherwise.
            </summary>
            <value>Set to true if invite email was sent; false otherwise.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient.Received">
            <summary>
            Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file.
            </summary>
            <value>Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient.Created">
            <summary>
            Timestamp of adding recipient to the share.
            </summary>
            <value>Timestamp of adding recipient to the share.</value>
        </member>
        <member name="T:IO.Swagger.Model.ShareRecipient.TypeEnum">
            <summary>
            Type of the recipient.
            </summary>
            <value>Type of the recipient.</value>
        </member>
        <member name="F:IO.Swagger.Model.ShareRecipient.TypeEnum.Owner">
            <summary>
            Enum Owner for value: owner
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareRecipient.TypeEnum.Direct">
            <summary>
            Enum Direct for value: direct
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRecipient1">
            <summary>
            ShareRecipient1
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient1.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{IO.Swagger.Model.ShareRecipient1.TypeEnum},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRecipient1"/> class.
            </summary>
            <param name="id">ID of the recipient..</param>
            <param name="shareId">ID of the share that the recipoient belongs to..</param>
            <param name="type">Type of the recipient..</param>
            <param name="hash">Share hash..</param>
            <param name="email">Recipient email address..</param>
            <param name="sent">Set to true if invite email was sent; false otherwise..</param>
            <param name="received">Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file..</param>
            <param name="created">Timestamp of adding recipient to the share..</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient1.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient1.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient1.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient1.Equals(IO.Swagger.Model.ShareRecipient1)">
            <summary>
            Returns true if ShareRecipient1 instances are equal
            </summary>
            <param name="input">Instance of ShareRecipient1 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient1.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipient1.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient1.Type">
            <summary>
            Type of the recipient.
            </summary>
            <value>Type of the recipient.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient1.Id">
            <summary>
            ID of the recipient.
            </summary>
            <value>ID of the recipient.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient1.ShareId">
            <summary>
            ID of the share that the recipoient belongs to.
            </summary>
            <value>ID of the share that the recipoient belongs to.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient1.Hash">
            <summary>
            Share hash.
            </summary>
            <value>Share hash.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient1.Email">
            <summary>
            Recipient email address.
            </summary>
            <value>Recipient email address.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient1.Sent">
            <summary>
            Set to true if invite email was sent; false otherwise.
            </summary>
            <value>Set to true if invite email was sent; false otherwise.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient1.Received">
            <summary>
            Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file.
            </summary>
            <value>Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipient1.Created">
            <summary>
            Timestamp of adding recipient to the share.
            </summary>
            <value>Timestamp of adding recipient to the share.</value>
        </member>
        <member name="T:IO.Swagger.Model.ShareRecipient1.TypeEnum">
            <summary>
            Type of the recipient.
            </summary>
            <value>Type of the recipient.</value>
        </member>
        <member name="F:IO.Swagger.Model.ShareRecipient1.TypeEnum.Owner">
            <summary>
            Enum Owner for value: owner
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.ShareRecipient1.TypeEnum.Direct">
            <summary>
            Enum Direct for value: direct
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRecipientsResponse">
            <summary>
            ShareRecipientsResponse
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipientsResponse.#ctor(System.Nullable{System.Int32},System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRecipientsResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response..</param>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipientsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipientsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipientsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipientsResponse.Equals(IO.Swagger.Model.ShareRecipientsResponse)">
            <summary>
            Returns true if ShareRecipientsResponse instances are equal
            </summary>
            <param name="input">Instance of ShareRecipientsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipientsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRecipientsResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipientsResponse.ResponseStatus">
            <summary>
            Http status code of the response.
            </summary>
            <value>Http status code of the response.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRecipientsResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationship">
            <summary>
            ShareRelationship
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationship.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.ShareRelationship.TypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationship"/> class.
            </summary>
            <param name="id">ID of the share..</param>
            <param name="type">Type of share. .</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationship.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationship.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationship.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationship.Equals(IO.Swagger.Model.ShareRelationship)">
            <summary>
            Returns true if ShareRelationship instances are equal
            </summary>
            <param name="input">Instance of ShareRelationship to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationship.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationship.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationship.Type">
            <summary>
            Type of share. 
            </summary>
            <value>Type of share. </value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationship.Id">
            <summary>
            ID of the share.
            </summary>
            <value>ID of the share.</value>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationship.TypeEnum">
            <summary>
            Type of share. 
            </summary>
            <value>Type of share. </value>
        </member>
        <member name="F:IO.Swagger.Model.ShareRelationship.TypeEnum.Share">
            <summary>
            Enum Share for value: share
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationships">
            <summary>
            Message, owner, resource, and notification relationships of the share. 
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationships.#ctor(System.Collections.Generic.List{IO.Swagger.Model.ShareRelationshipsMessages},IO.Swagger.Model.ShareRelationshipsOwner,System.Collections.Generic.List{IO.Swagger.Model.ShareRelationshipsResources},System.Collections.Generic.List{IO.Swagger.Model.ShareRelationshipsNotifications})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationships"/> class.
            </summary>
            <param name="messages">null.</param>
            <param name="owner">owner.</param>
            <param name="resources">resources.</param>
            <param name="notifications">null.</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationships.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationships.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationships.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationships.Equals(IO.Swagger.Model.ShareRelationships)">
            <summary>
            Returns true if ShareRelationships instances are equal
            </summary>
            <param name="input">Instance of ShareRelationships to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationships.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationships.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationships.Messages">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationships.Owner">
            <summary>
            Gets or Sets Owner
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationships.Resources">
            <summary>
            Gets or Sets Resources
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationships.Notifications">
            <summary>
            null
            </summary>
            <value>null</value>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsData">
            <summary>
            ShareRelationshipsData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData.#ctor(System.Nullable{IO.Swagger.Model.ShareRelationshipsData.TypeEnum},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationshipsData"/> class.
            </summary>
            <param name="type">Type is message. .</param>
            <param name="id">ID of the message..</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData.Equals(IO.Swagger.Model.ShareRelationshipsData)">
            <summary>
            Returns true if ShareRelationshipsData instances are equal
            </summary>
            <param name="input">Instance of ShareRelationshipsData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsData.Type">
            <summary>
            Type is message. 
            </summary>
            <value>Type is message. </value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsData.Id">
            <summary>
            ID of the message.
            </summary>
            <value>ID of the message.</value>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsData.TypeEnum">
            <summary>
            Type is message. 
            </summary>
            <value>Type is message. </value>
        </member>
        <member name="F:IO.Swagger.Model.ShareRelationshipsData.TypeEnum.Message">
            <summary>
            Enum Message for value: message
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsData1">
            <summary>
            ShareRelationshipsData1
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData1.#ctor(System.Nullable{IO.Swagger.Model.ShareRelationshipsData1.TypeEnum},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationshipsData1"/> class.
            </summary>
            <param name="type">Type is resource. .</param>
            <param name="id">ID of the shared resource..</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData1.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData1.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData1.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData1.Equals(IO.Swagger.Model.ShareRelationshipsData1)">
            <summary>
            Returns true if ShareRelationshipsData1 instances are equal
            </summary>
            <param name="input">Instance of ShareRelationshipsData1 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData1.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData1.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsData1.Type">
            <summary>
            Type is resource. 
            </summary>
            <value>Type is resource. </value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsData1.Id">
            <summary>
            ID of the shared resource.
            </summary>
            <value>ID of the shared resource.</value>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsData1.TypeEnum">
            <summary>
            Type is resource. 
            </summary>
            <value>Type is resource. </value>
        </member>
        <member name="F:IO.Swagger.Model.ShareRelationshipsData1.TypeEnum.Resource">
            <summary>
            Enum Resource for value: resource
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsData2">
            <summary>
            ShareRelationshipsData2
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData2.#ctor(System.Nullable{IO.Swagger.Model.ShareRelationshipsData2.TypeEnum},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationshipsData2"/> class.
            </summary>
            <param name="type">Type is notification. .</param>
            <param name="id">ID of the notification. .</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData2.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData2.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData2.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData2.Equals(IO.Swagger.Model.ShareRelationshipsData2)">
            <summary>
            Returns true if ShareRelationshipsData2 instances are equal
            </summary>
            <param name="input">Instance of ShareRelationshipsData2 to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData2.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsData2.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsData2.Type">
            <summary>
            Type is notification. 
            </summary>
            <value>Type is notification. </value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsData2.Id">
            <summary>
            ID of the notification. 
            </summary>
            <value>ID of the notification. </value>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsData2.TypeEnum">
            <summary>
            Type is notification. 
            </summary>
            <value>Type is notification. </value>
        </member>
        <member name="F:IO.Swagger.Model.ShareRelationshipsData2.TypeEnum.Notification">
            <summary>
            Enum Notification for value: notification
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsMessages">
            <summary>
            ShareRelationshipsMessages
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsMessages.#ctor(IO.Swagger.Model.ShareRelationshipsData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationshipsMessages"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsMessages.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsMessages.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsMessages.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsMessages.Equals(IO.Swagger.Model.ShareRelationshipsMessages)">
            <summary>
            Returns true if ShareRelationshipsMessages instances are equal
            </summary>
            <param name="input">Instance of ShareRelationshipsMessages to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsMessages.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsMessages.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsMessages.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsNotifications">
            <summary>
            ShareRelationshipsNotifications
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsNotifications.#ctor(IO.Swagger.Model.ShareRelationshipsData2)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationshipsNotifications"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsNotifications.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsNotifications.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsNotifications.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsNotifications.Equals(IO.Swagger.Model.ShareRelationshipsNotifications)">
            <summary>
            Returns true if ShareRelationshipsNotifications instances are equal
            </summary>
            <param name="input">Instance of ShareRelationshipsNotifications to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsNotifications.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsNotifications.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsNotifications.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsOwner">
            <summary>
            ShareRelationshipsOwner
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwner.#ctor(IO.Swagger.Model.ShareRelationshipsOwnerData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationshipsOwner"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwner.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwner.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwner.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwner.Equals(IO.Swagger.Model.ShareRelationshipsOwner)">
            <summary>
            Returns true if ShareRelationshipsOwner instances are equal
            </summary>
            <param name="input">Instance of ShareRelationshipsOwner to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwner.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwner.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsOwner.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsOwnerData">
            <summary>
            ShareRelationshipsOwnerData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwnerData.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationshipsOwnerData"/> class.
            </summary>
            <param name="id">ID of the owner..</param>
            <param name="type">Type is user..</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwnerData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwnerData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwnerData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwnerData.Equals(IO.Swagger.Model.ShareRelationshipsOwnerData)">
            <summary>
            Returns true if ShareRelationshipsOwnerData instances are equal
            </summary>
            <param name="input">Instance of ShareRelationshipsOwnerData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwnerData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsOwnerData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsOwnerData.Id">
            <summary>
            ID of the owner.
            </summary>
            <value>ID of the owner.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsOwnerData.Type">
            <summary>
            Type is user.
            </summary>
            <value>Type is user.</value>
        </member>
        <member name="T:IO.Swagger.Model.ShareRelationshipsResources">
            <summary>
            ShareRelationshipsResources
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsResources.#ctor(IO.Swagger.Model.ShareRelationshipsData1)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareRelationshipsResources"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsResources.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsResources.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsResources.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsResources.Equals(IO.Swagger.Model.ShareRelationshipsResources)">
            <summary>
            Returns true if ShareRelationshipsResources instances are equal
            </summary>
            <param name="input">Instance of ShareRelationshipsResources to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsResources.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareRelationshipsResources.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareRelationshipsResources.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.ShareResponse">
            <summary>
            Response object for shares.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.ShareResponse.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.Share,System.Collections.Generic.List{IO.Swagger.Model.OneOfShareResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.ShareResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response..</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.ShareResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareResponse.Equals(IO.Swagger.Model.ShareResponse)">
            <summary>
            Returns true if ShareResponse instances are equal
            </summary>
            <param name="input">Instance of ShareResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.ShareResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.ShareResponse.ResponseStatus">
            <summary>
            Http status code of the response.
            </summary>
            <value>Http status code of the response.</value>
        </member>
        <member name="P:IO.Swagger.Model.ShareResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.ShareResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.SharesRecipients">
            <summary>
            SharesRecipients
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.SharesRecipients.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.SharesRecipients"/> class.
            </summary>
            <param name="type">What kind of email should be sent to this recipient. Valid choices are **direct** and **cc**.</param>
            <param name="email">Email address of person you are inviting to the share.</param>
        </member>
        <member name="M:IO.Swagger.Model.SharesRecipients.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SharesRecipients.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.SharesRecipients.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SharesRecipients.Equals(IO.Swagger.Model.SharesRecipients)">
            <summary>
            Returns true if SharesRecipients instances are equal
            </summary>
            <param name="input">Instance of SharesRecipients to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.SharesRecipients.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.SharesRecipients.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.SharesRecipients.Type">
            <summary>
            What kind of email should be sent to this recipient. Valid choices are **direct** and **cc**
            </summary>
            <value>What kind of email should be sent to this recipient. Valid choices are **direct** and **cc**</value>
        </member>
        <member name="P:IO.Swagger.Model.SharesRecipients.Email">
            <summary>
            Email address of person you are inviting to the share
            </summary>
            <value>Email address of person you are inviting to the share</value>
        </member>
        <member name="T:IO.Swagger.Model.UpdateAccountBody">
            <summary>
            UpdateAccountBody
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UpdateAccountBody.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Collections.Generic.List{IO.Swagger.Model.AccountAllowedIpRanges},IO.Swagger.Model.CallbackSettings1,IO.Swagger.Model.BrandingSettings1,System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UpdateAccountBody"/> class.
            </summary>
            <param name="quotaNoticeEnabled">Whether the system should email the account owner when usage exceeds quotaNoticeThreshold value.</param>
            <param name="quotaNoticeThreshold">Percent of account usage to trigger quota notices for..</param>
            <param name="secureOnly">Whether unencrypted FTP connections should be denied for the account..</param>
            <param name="complexPasswords">Whether to require complex passwords for all passwords..</param>
            <param name="showReferralLinks">Whether to display links for others to sign up on share views and invitation emails.</param>
            <param name="externalDomain">Custom address used for web file manager. Not available for all account types..</param>
            <param name="emailContent">Content of welcome email template..</param>
            <param name="emailSubject">Subject line for welcome emails.</param>
            <param name="allowedIpRanges">IP Address Ranges for restricting account access.</param>
            <param name="callbackSettings">callbackSettings.</param>
            <param name="brandingSettings">brandingSettings.</param>
            <param name="accountOnboarding">Whether extra help popups can be enabled for users in the web file manager..</param>
            <param name="customSignature">Signature to be automatically added to the bottom of emails generated by the account..</param>
        </member>
        <member name="M:IO.Swagger.Model.UpdateAccountBody.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdateAccountBody.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdateAccountBody.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdateAccountBody.Equals(IO.Swagger.Model.UpdateAccountBody)">
            <summary>
            Returns true if UpdateAccountBody instances are equal
            </summary>
            <param name="input">Instance of UpdateAccountBody to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdateAccountBody.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UpdateAccountBody.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.QuotaNoticeEnabled">
            <summary>
            Whether the system should email the account owner when usage exceeds quotaNoticeThreshold value
            </summary>
            <value>Whether the system should email the account owner when usage exceeds quotaNoticeThreshold value</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.QuotaNoticeThreshold">
            <summary>
            Percent of account usage to trigger quota notices for.
            </summary>
            <value>Percent of account usage to trigger quota notices for.</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.SecureOnly">
            <summary>
            Whether unencrypted FTP connections should be denied for the account.
            </summary>
            <value>Whether unencrypted FTP connections should be denied for the account.</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.ComplexPasswords">
            <summary>
            Whether to require complex passwords for all passwords.
            </summary>
            <value>Whether to require complex passwords for all passwords.</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.ShowReferralLinks">
            <summary>
            Whether to display links for others to sign up on share views and invitation emails
            </summary>
            <value>Whether to display links for others to sign up on share views and invitation emails</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.ExternalDomain">
            <summary>
            Custom address used for web file manager. Not available for all account types.
            </summary>
            <value>Custom address used for web file manager. Not available for all account types.</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.EmailContent">
            <summary>
            Content of welcome email template.
            </summary>
            <value>Content of welcome email template.</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.EmailSubject">
            <summary>
            Subject line for welcome emails
            </summary>
            <value>Subject line for welcome emails</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.AllowedIpRanges">
            <summary>
            IP Address Ranges for restricting account access
            </summary>
            <value>IP Address Ranges for restricting account access</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.CallbackSettings">
            <summary>
            Gets or Sets CallbackSettings
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.BrandingSettings">
            <summary>
            Gets or Sets BrandingSettings
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.AccountOnboarding">
            <summary>
            Whether extra help popups can be enabled for users in the web file manager.
            </summary>
            <value>Whether extra help popups can be enabled for users in the web file manager.</value>
        </member>
        <member name="P:IO.Swagger.Model.UpdateAccountBody.CustomSignature">
            <summary>
            Signature to be automatically added to the bottom of emails generated by the account.
            </summary>
            <value>Signature to be automatically added to the bottom of emails generated by the account.</value>
        </member>
        <member name="T:IO.Swagger.Model.User">
            <summary>
            Object contains user properties.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.User.#ctor(System.Nullable{System.Int32},System.String,IO.Swagger.Model.UserAttributes,IO.Swagger.Model.UserRelationships)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.User"/> class.
            </summary>
            <param name="id">ID of the user..</param>
            <param name="type">Type of object being returned. Always \"user\".</param>
            <param name="attributes">attributes.</param>
            <param name="relationships">relationships.</param>
        </member>
        <member name="M:IO.Swagger.Model.User.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.User.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.User.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.User.Equals(IO.Swagger.Model.User)">
            <summary>
            Returns true if User instances are equal
            </summary>
            <param name="input">Instance of User to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.User.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.User.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.User.Id">
            <summary>
            ID of the user.
            </summary>
            <value>ID of the user.</value>
        </member>
        <member name="P:IO.Swagger.Model.User.Type">
            <summary>
            Type of object being returned. Always \&quot;user\&quot;
            </summary>
            <value>Type of object being returned. Always \&quot;user\&quot;</value>
        </member>
        <member name="P:IO.Swagger.Model.User.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.User.Relationships">
            <summary>
            Gets or Sets Relationships
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.UserAttributes">
            <summary>
            Attributes of the user including expiration, home directory, and permissions. 
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UserAttributes.#ctor(IO.Swagger.Model.UserAttributes.StatusEnum,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,IO.Swagger.Model.UserPermissions,IO.Swagger.Model.UserAttributes.RoleEnum,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UserAttributes"/> class.
            </summary>
            <param name="status">Indicates user activity status. `0` means the user is locked and cannot log in. `1` means the user is active and can log in. (required).</param>
            <param name="expiration">Timestamp of user expiration..</param>
            <param name="created">Timestamp of user creation. (required).</param>
            <param name="modified">Timestamp of user modification. (required).</param>
            <param name="accessTimestamp">Timestamp of most recent successful user login..</param>
            <param name="accountName">Name of the account this user belongs to. (required).</param>
            <param name="username">Username of the user. (required).</param>
            <param name="nickname">Nickname of the user. (required).</param>
            <param name="email">Email address of the user..</param>
            <param name="homeDir">Path to the user's home folder. (required).</param>
            <param name="permissions">permissions (required).</param>
            <param name="role">User's access level (required).</param>
            <param name="timeZone">User's timezone. See &lt;a href='https://php.net/manual/en/timezones.php' target='blank'&gt;this page&lt;/a&gt; for allowed values. (required).</param>
            <param name="onboarding">Whether the onboarding help system is enabled for this user. `true` means that additional help popups are displayed in the web application for this user. (required).</param>
            <param name="firstLogin">`true` if the user has logged into the system..</param>
        </member>
        <member name="M:IO.Swagger.Model.UserAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserAttributes.Equals(IO.Swagger.Model.UserAttributes)">
            <summary>
            Returns true if UserAttributes instances are equal
            </summary>
            <param name="input">Instance of UserAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Status">
            <summary>
            Indicates user activity status. &#x60;0&#x60; means the user is locked and cannot log in. &#x60;1&#x60; means the user is active and can log in.
            </summary>
            <value>Indicates user activity status. &#x60;0&#x60; means the user is locked and cannot log in. &#x60;1&#x60; means the user is active and can log in.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Role">
            <summary>
            User&#x27;s access level
            </summary>
            <value>User&#x27;s access level</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Expiration">
            <summary>
            Timestamp of user expiration.
            </summary>
            <value>Timestamp of user expiration.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Created">
            <summary>
            Timestamp of user creation.
            </summary>
            <value>Timestamp of user creation.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Modified">
            <summary>
            Timestamp of user modification.
            </summary>
            <value>Timestamp of user modification.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.AccessTimestamp">
            <summary>
            Timestamp of most recent successful user login.
            </summary>
            <value>Timestamp of most recent successful user login.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.AccountName">
            <summary>
            Name of the account this user belongs to.
            </summary>
            <value>Name of the account this user belongs to.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Username">
            <summary>
            Username of the user.
            </summary>
            <value>Username of the user.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Nickname">
            <summary>
            Nickname of the user.
            </summary>
            <value>Nickname of the user.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Email">
            <summary>
            Email address of the user.
            </summary>
            <value>Email address of the user.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.HomeDir">
            <summary>
            Path to the user&#x27;s home folder.
            </summary>
            <value>Path to the user&#x27;s home folder.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Permissions">
            <summary>
            Gets or Sets Permissions
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.TimeZone">
            <summary>
            User&#x27;s timezone. See &lt;a href&#x3D;&#x27;https://php.net/manual/en/timezones.php&#x27; target&#x3D;&#x27;blank&#x27;&gt;this page&lt;/a&gt; for allowed values.
            </summary>
            <value>User&#x27;s timezone. See &lt;a href&#x3D;&#x27;https://php.net/manual/en/timezones.php&#x27; target&#x3D;&#x27;blank&#x27;&gt;this page&lt;/a&gt; for allowed values.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.Onboarding">
            <summary>
            Whether the onboarding help system is enabled for this user. &#x60;true&#x60; means that additional help popups are displayed in the web application for this user.
            </summary>
            <value>Whether the onboarding help system is enabled for this user. &#x60;true&#x60; means that additional help popups are displayed in the web application for this user.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserAttributes.FirstLogin">
            <summary>
            &#x60;true&#x60; if the user has logged into the system.
            </summary>
            <value>&#x60;true&#x60; if the user has logged into the system.</value>
        </member>
        <member name="T:IO.Swagger.Model.UserAttributes.StatusEnum">
            <summary>
            Indicates user activity status. &#x60;0&#x60; means the user is locked and cannot log in. &#x60;1&#x60; means the user is active and can log in.
            </summary>
            <value>Indicates user activity status. &#x60;0&#x60; means the user is locked and cannot log in. &#x60;1&#x60; means the user is active and can log in.</value>
        </member>
        <member name="F:IO.Swagger.Model.UserAttributes.StatusEnum.NUMBER_0">
            <summary>
            Enum NUMBER_0 for value: 0
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.UserAttributes.StatusEnum.NUMBER_1">
            <summary>
            Enum NUMBER_1 for value: 1
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.UserAttributes.RoleEnum">
            <summary>
            User&#x27;s access level
            </summary>
            <value>User&#x27;s access level</value>
        </member>
        <member name="F:IO.Swagger.Model.UserAttributes.RoleEnum.User">
            <summary>
            Enum User for value: user
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.UserAttributes.RoleEnum.Admin">
            <summary>
            Enum Admin for value: admin
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.UserAttributes.RoleEnum.Master">
            <summary>
            Enum Master for value: master
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.UserCollectionResponse">
            <summary>
            UserCollectionResponse
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UserCollectionResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.User},System.Collections.Generic.List{IO.Swagger.Model.OneOfUserCollectionResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UserCollectionResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response. .</param>
            <param name="totalResults">Total results found..</param>
            <param name="returnedResults">Number of results returned..</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.UserCollectionResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserCollectionResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserCollectionResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserCollectionResponse.Equals(IO.Swagger.Model.UserCollectionResponse)">
            <summary>
            Returns true if UserCollectionResponse instances are equal
            </summary>
            <param name="input">Instance of UserCollectionResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserCollectionResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserCollectionResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UserCollectionResponse.ResponseStatus">
            <summary>
            Http status code of the response. 
            </summary>
            <value>Http status code of the response. </value>
        </member>
        <member name="P:IO.Swagger.Model.UserCollectionResponse.TotalResults">
            <summary>
            Total results found.
            </summary>
            <value>Total results found.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserCollectionResponse.ReturnedResults">
            <summary>
            Number of results returned.
            </summary>
            <value>Number of results returned.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserCollectionResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.UserCollectionResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.UserPermissions">
            <summary>
            UserPermissions
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UserPermissions.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UserPermissions"/> class.
            </summary>
            <param name="download">Download permission flag (required).</param>
            <param name="upload">Upload permission flag (required).</param>
            <param name="modify">Modify permission flag (required).</param>
            <param name="delete">Delete permission flag (required).</param>
            <param name="list">View folder contents permission flag (required).</param>
            <param name="changePassword">Change (own) password permission flag (required).</param>
            <param name="share">Sharing permission flag (required).</param>
            <param name="notification">Notifications permission flag (required).</param>
            <param name="viewFormData">Access Form Data permission flag. If true, user can view submissions that have been stored for a receive folder. This includes any data submitted in the receive folder form. (required).</param>
            <param name="deleteFormData">Delete form data permission flag. If true, user can remove data that was submitted for a receive folder. This applies only to data submitted in the receive folder form, not the actual files uploaded. (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.UserPermissions.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserPermissions.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserPermissions.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserPermissions.Equals(IO.Swagger.Model.UserPermissions)">
            <summary>
            Returns true if UserPermissions instances are equal
            </summary>
            <param name="input">Instance of UserPermissions to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserPermissions.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserPermissions.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.Download">
            <summary>
            Download permission flag
            </summary>
            <value>Download permission flag</value>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.Upload">
            <summary>
            Upload permission flag
            </summary>
            <value>Upload permission flag</value>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.Modify">
            <summary>
            Modify permission flag
            </summary>
            <value>Modify permission flag</value>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.Delete">
            <summary>
            Delete permission flag
            </summary>
            <value>Delete permission flag</value>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.List">
            <summary>
            View folder contents permission flag
            </summary>
            <value>View folder contents permission flag</value>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.ChangePassword">
            <summary>
            Change (own) password permission flag
            </summary>
            <value>Change (own) password permission flag</value>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.Share">
            <summary>
            Sharing permission flag
            </summary>
            <value>Sharing permission flag</value>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.Notification">
            <summary>
            Notifications permission flag
            </summary>
            <value>Notifications permission flag</value>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.ViewFormData">
            <summary>
            Access Form Data permission flag. If true, user can view submissions that have been stored for a receive folder. This includes any data submitted in the receive folder form.
            </summary>
            <value>Access Form Data permission flag. If true, user can view submissions that have been stored for a receive folder. This includes any data submitted in the receive folder form.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserPermissions.DeleteFormData">
            <summary>
            Delete form data permission flag. If true, user can remove data that was submitted for a receive folder. This applies only to data submitted in the receive folder form, not the actual files uploaded.
            </summary>
            <value>Delete form data permission flag. If true, user can remove data that was submitted for a receive folder. This applies only to data submitted in the receive folder form, not the actual files uploaded.</value>
        </member>
        <member name="T:IO.Swagger.Model.UserRelationships">
            <summary>
            Home resource and owner account relationship data for the user. 
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationships.#ctor(IO.Swagger.Model.UserRelationshipsHomeResource,IO.Swagger.Model.UserRelationshipsOwnerAccount)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UserRelationships"/> class.
            </summary>
            <param name="homeResource">homeResource.</param>
            <param name="ownerAccount">ownerAccount (required).</param>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationships.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationships.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationships.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationships.Equals(IO.Swagger.Model.UserRelationships)">
            <summary>
            Returns true if UserRelationships instances are equal
            </summary>
            <param name="input">Instance of UserRelationships to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationships.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationships.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UserRelationships.HomeResource">
            <summary>
            Gets or Sets HomeResource
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.UserRelationships.OwnerAccount">
            <summary>
            Gets or Sets OwnerAccount
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.UserRelationshipsHomeResource">
            <summary>
            UserRelationshipsHomeResource
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResource.#ctor(IO.Swagger.Model.UserRelationshipsHomeResourceData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UserRelationshipsHomeResource"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResource.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResource.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResource.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResource.Equals(IO.Swagger.Model.UserRelationshipsHomeResource)">
            <summary>
            Returns true if UserRelationshipsHomeResource instances are equal
            </summary>
            <param name="input">Instance of UserRelationshipsHomeResource to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResource.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResource.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UserRelationshipsHomeResource.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.UserRelationshipsHomeResourceData">
            <summary>
            UserRelationshipsHomeResourceData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResourceData.#ctor(System.Nullable{IO.Swagger.Model.UserRelationshipsHomeResourceData.TypeEnum},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UserRelationshipsHomeResourceData"/> class.
            </summary>
            <param name="type">Type is resource..</param>
            <param name="id">ID of home directory resource..</param>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResourceData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResourceData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResourceData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResourceData.Equals(IO.Swagger.Model.UserRelationshipsHomeResourceData)">
            <summary>
            Returns true if UserRelationshipsHomeResourceData instances are equal
            </summary>
            <param name="input">Instance of UserRelationshipsHomeResourceData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResourceData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsHomeResourceData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UserRelationshipsHomeResourceData.Type">
            <summary>
            Type is resource.
            </summary>
            <value>Type is resource.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserRelationshipsHomeResourceData.Id">
            <summary>
            ID of home directory resource.
            </summary>
            <value>ID of home directory resource.</value>
        </member>
        <member name="T:IO.Swagger.Model.UserRelationshipsHomeResourceData.TypeEnum">
            <summary>
            Type is resource.
            </summary>
            <value>Type is resource.</value>
        </member>
        <member name="F:IO.Swagger.Model.UserRelationshipsHomeResourceData.TypeEnum.Resource">
            <summary>
            Enum Resource for value: resource
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.UserRelationshipsOwnerAccount">
            <summary>
            UserRelationshipsOwnerAccount
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccount.#ctor(IO.Swagger.Model.UserRelationshipsOwnerAccountData)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UserRelationshipsOwnerAccount"/> class.
            </summary>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccount.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccount.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccount.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccount.Equals(IO.Swagger.Model.UserRelationshipsOwnerAccount)">
            <summary>
            Returns true if UserRelationshipsOwnerAccount instances are equal
            </summary>
            <param name="input">Instance of UserRelationshipsOwnerAccount to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccount.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccount.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UserRelationshipsOwnerAccount.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.UserRelationshipsOwnerAccountData">
            <summary>
            UserRelationshipsOwnerAccountData
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccountData.#ctor(System.Nullable{IO.Swagger.Model.UserRelationshipsOwnerAccountData.TypeEnum},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UserRelationshipsOwnerAccountData"/> class.
            </summary>
            <param name="type">Type is account..</param>
            <param name="id">ID of the account..</param>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccountData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccountData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccountData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccountData.Equals(IO.Swagger.Model.UserRelationshipsOwnerAccountData)">
            <summary>
            Returns true if UserRelationshipsOwnerAccountData instances are equal
            </summary>
            <param name="input">Instance of UserRelationshipsOwnerAccountData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccountData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserRelationshipsOwnerAccountData.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UserRelationshipsOwnerAccountData.Type">
            <summary>
            Type is account.
            </summary>
            <value>Type is account.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserRelationshipsOwnerAccountData.Id">
            <summary>
            ID of the account.
            </summary>
            <value>ID of the account.</value>
        </member>
        <member name="T:IO.Swagger.Model.UserRelationshipsOwnerAccountData.TypeEnum">
            <summary>
            Type is account.
            </summary>
            <value>Type is account.</value>
        </member>
        <member name="F:IO.Swagger.Model.UserRelationshipsOwnerAccountData.TypeEnum.Account">
            <summary>
            Enum Account for value: account
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.UserResponse">
            <summary>
            Response object for users.
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.UserResponse.#ctor(System.Nullable{System.Int32},IO.Swagger.Model.User,System.Collections.Generic.List{IO.Swagger.Model.OneOfUserResponseIncludedItems})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.UserResponse"/> class.
            </summary>
            <param name="responseStatus">Http code for the response..</param>
            <param name="data">data.</param>
            <param name="included">included.</param>
        </member>
        <member name="M:IO.Swagger.Model.UserResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserResponse.Equals(IO.Swagger.Model.UserResponse)">
            <summary>
            Returns true if UserResponse instances are equal
            </summary>
            <param name="input">Instance of UserResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.UserResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.UserResponse.ResponseStatus">
            <summary>
            Http code for the response.
            </summary>
            <value>Http code for the response.</value>
        </member>
        <member name="P:IO.Swagger.Model.UserResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.UserResponse.Included">
            <summary>
            Gets or Sets Included
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.WebhooksActivityEntry">
            <summary>
            WebhooksActivityEntry
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntry.#ctor(System.Nullable{System.Int32},System.Nullable{IO.Swagger.Model.WebhooksActivityEntry.TypeEnum},IO.Swagger.Model.WebhooksActivityEntryAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.WebhooksActivityEntry"/> class.
            </summary>
            <param name="id">id.</param>
            <param name="type">type.</param>
            <param name="attributes">attributes.</param>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntry.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntry.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntry.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntry.Equals(IO.Swagger.Model.WebhooksActivityEntry)">
            <summary>
            Returns true if WebhooksActivityEntry instances are equal
            </summary>
            <param name="input">Instance of WebhooksActivityEntry to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntry.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntry.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntry.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntry.Id">
            <summary>
            Gets or Sets Id
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntry.Attributes">
            <summary>
            Gets or Sets Attributes
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.WebhooksActivityEntry.TypeEnum">
            <summary>
            Defines Type
            </summary>
        </member>
        <member name="F:IO.Swagger.Model.WebhooksActivityEntry.TypeEnum.WebhookActivity">
            <summary>
            Enum WebhookActivity for value: webhookActivity
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.WebhooksActivityEntryAttributes">
            <summary>
            WebhooksActivityEntryAttributes
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntryAttributes.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.WebhooksActivityEntryAttributes"/> class.
            </summary>
            <param name="attempt">attempt.</param>
            <param name="created">created.</param>
            <param name="endpointUrl">endpointUrl.</param>
            <param name="_event">_event.</param>
            <param name="response">response.</param>
            <param name="responseSize">responseSize.</param>
            <param name="status">status.</param>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntryAttributes.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntryAttributes.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntryAttributes.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntryAttributes.Equals(IO.Swagger.Model.WebhooksActivityEntryAttributes)">
            <summary>
            Returns true if WebhooksActivityEntryAttributes instances are equal
            </summary>
            <param name="input">Instance of WebhooksActivityEntryAttributes to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntryAttributes.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityEntryAttributes.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntryAttributes.Attempt">
            <summary>
            Gets or Sets Attempt
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntryAttributes.Created">
            <summary>
            Gets or Sets Created
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntryAttributes.EndpointUrl">
            <summary>
            Gets or Sets EndpointUrl
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntryAttributes.Event">
            <summary>
            Gets or Sets Event
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntryAttributes.Response">
            <summary>
            Gets or Sets Response
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntryAttributes.ResponseSize">
            <summary>
            Gets or Sets ResponseSize
            </summary>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityEntryAttributes.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="T:IO.Swagger.Model.WebhooksActivityResponse">
            <summary>
            Session activity list response
            </summary>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityResponse.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{IO.Swagger.Model.WebhooksActivityEntry})">
            <summary>
            Initializes a new instance of the <see cref="T:IO.Swagger.Model.WebhooksActivityResponse"/> class.
            </summary>
            <param name="responseStatus">Http status code of the response..</param>
            <param name="totalResults">Total results found..</param>
            <param name="returnedResults">Number of results returned. .</param>
            <param name="data">data.</param>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityResponse.Equals(IO.Swagger.Model.WebhooksActivityResponse)">
            <summary>
            Returns true if WebhooksActivityResponse instances are equal
            </summary>
            <param name="input">Instance of WebhooksActivityResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:IO.Swagger.Model.WebhooksActivityResponse.System#ComponentModel#DataAnnotations#IValidatableObject#Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityResponse.ResponseStatus">
            <summary>
            Http status code of the response.
            </summary>
            <value>Http status code of the response.</value>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityResponse.TotalResults">
            <summary>
            Total results found.
            </summary>
            <value>Total results found.</value>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityResponse.ReturnedResults">
            <summary>
            Number of results returned. 
            </summary>
            <value>Number of results returned. </value>
        </member>
        <member name="P:IO.Swagger.Model.WebhooksActivityResponse.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
    </members>
</doc>
